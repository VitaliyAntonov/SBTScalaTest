
:root{
    /** Определения цвета **/
    --bodyBackColor:  #29363C;
    /** Цвет фона всплывающей подсазки **/
    --toolTipBackColor: #647D89;

}




/*
  Copyright (c) 2006, 2010, Oracle and/or its affiliates. All rights reserved.

  richcomponents-simple-desktop.css defines the styles used by the desktop
  implementation of the Simple skin for the rich components. This file
  will be merged into the Simple skin.
  When the skin-family is richcomponents-simple, then your component should
  look decent. If it doesn't, then MOVE the skin definitions from medium and/or rich
  skins into this file.
*/
/* TODO: work out what we should do about the PagePage styles. Do they go in simple or blafplus?
They will need to work in portal, so I suppose they should go in both */


/* Use Aliases whenever possible! They are defined originally in Trinidad's base-desktop.xss
or Fusion's richcomponents-simple-desktop.css

For every component key:  Instead of color:#000000;, use
-tr-rule-ref: selector(".AFTextForeground:alias");

Instead of font-family: Tahoma use
-tr-rule-ref: selector(".AFDefaultFontFamily:alias");

OR -- if you need
font-family: Tahoma;
font-size: 11px;
font-weight: normal;
use
-tr-rule-ref: selector(".AFDefaultFont:alias");
// You shouldn't need both AFDefaultFontFamily:alias and AFDefaultFont:alias
// since AFDefaultFont:alias includes AFDefaultFontFamily:alias.

Instead of background-color: #FFFFFF; use
-tr-rule-ref: selector(".AFTextBackground:alias");
or, if it meant to be an accent color, like table background,
use
-tr-rule-ref: selector(".AFLightAccentBackground:alias");
(this difference is sort of fuzzy. use your best judgement)

Instead of background-color: #CCCCCC, use
-tr-rule-ref: selector(".AFDarkAccentBackground:alias");

If you are using the BLAF+ standard borders, see
.AFButtonBorderHover:alias and
.AFButtonBorder:alias.
ETC.
If you are using border on form components, use:
-tr-rule-ref: selector(".AFFormControlContentBorder:alias");
It includes:

  border-style: solid;
  border-width: 1px;
  border-color: #B9B9B4;

ETC (Make yourself familiar with our aliases below to see where you can use them.)
font-size: 9px, use
  -tr-rule-ref: selector(".AFVerySmallFont:alias");

*/




.AFFieldTextDisabled:alias {
	-tr-rule-ref: selector(".AFDarkAccentForeground:alias");
}

.AFTwinkleBackground:alias {
	background-color: #FCF0BC;
}

.AFTwinkleForeground:alias {
	color: #333333;
}

.AFActiveLinkBorder:alias {
}

/* New alias, introduced for an easy way to change all the visited links' borders. */
.AFVisitedLinkBorder:alias {
}

/*
data links and global links
AFLinkForeground:alias
*/
.AFLinkForeground:alias,
.AFGlobalLink:alias {
	color: #364696;
}

/* visited and active data links */
.AFVisitedLinkForeground:alias,
.AFActiveLinkForeground:alias {
	color: #4a6f97;
}

/* disabled data links and global links*/
.AFLinkDisabled:alias,
.AFGlobalLinkDisabled:alias {
	text-decoration: none;
	cursor: default;
	-tr-rule-ref: selector(".AFTextForeground:alias");
}

/* background visited link (new alias) */
.AFVisitedLinkBackground:alias {
	background-color: #72007C;
}

.AFVeryDarkBackground:alias {
	background-color: #336699;
}
.AFVeryDarkForeground:alias {
	color: #336699;
}

.AFDarkBackground:alias {
	background-color: #9CACC9;
}
.AFDarkForeground:alias {
	color: #9CACC9;
}

.AFMediumBackground:alias {
	background-color: #C4CEE0;
}
.AFMediumForeground:alias {
	color: #C4CEE0;
}

/**LightBackground_AF**/
.AFLightBackground:alias {
	background-color: #EDFFFF;
}
.AFLightForeground:alias {
	color: #EDFFFF;
}

.AFVeryDarkAccentBackground:alias {
	background-color: #9297A6;
}
.AFVeryDarkAccentForeground:alias {
	color: #9297A6;
}

.AFDarkAccentBackground:alias {
	background-color: #C5C5C0;
}
.AFDarkAccentForeground:alias {
	color: #7E807A;
}
.AFMediumAccentBackground:alias {
	background-color: #EAEAEA;
}
.AFMediumAccentForeground:alias {
	color: #EAEAEA;
}
.AFLightAccentBackground:alias {
	background-color: #FDFDFA;
}
.AFLightAccentForeground:alias {
	color: #FDFDFA;
}

/* Alias for toolbar and query separators
geo.controller.component.utils.css.oop.attributes.IBarSeparator_AF
*/
.AFBarSeparator:alias {
	width: 2px;
	height: 17px;
	padding: 0px 5px;
	background-image: url('/afr/toolbar_separator.gif');
	background-repeat: no-repeat;
	background-position: center;
}

/* Panel Box Aliases */

/* Alias for the start of the panelBox headers - overriden in medium skin
   Includes padding to support 6px space. All center items have l/r padding 2px, so we have 8px
   before center content start */
.AFPanelBoxHeaderStart:alias {
	padding: 0px 0px 0px 6px;
	border-style: solid;
	border-width: 1px 0px 0px 1px;
}

/* Alias for the end of the panelBox headers - overriden in medium skin
   Includes padding to support 6px space. All center items have l/r padding 2px, so we have 8px
   after center content ends */
.AFPanelBoxHeaderEnd:alias {
	padding: 0px 6px 0px 0px;
	border-style: solid;
	border-width: 1px 1px 0px 0px;
}

.AFPanelBoxHeaderCenter:alias {
	padding: 0px;
	width: 100%;
	height: 19px;
	overflow: hidden;
	white-space: nowrap;
	vertical-align: middle;
	border-style: solid;
	border-width: 1px 0px 0px 0px;
	-tr-rule-ref: selector(".AFDefaultBoldFont:alias");
}

/* Alias for the start of the panelBox footers - overriden in fusion skin
   Includes padding to support 6px space. All center items have l/r padding 2px, so we have 8px
   before center content start */
.AFPanelBoxFooterStart:alias {
	padding: 0px 0px 0px 6px;
	border-style: solid;
	border-width: 1px 0px 0px 1px;
}

/* Alias for the end of the panelBox footers - overriden in fusion skin
   Includes padding to support 6px space. All center items have l/r padding 2px, so we have 8px
   after center content ends */
.AFPanelBoxFooterEnd:alias {
	padding: 0px 6px 0px 0px;
	border-style: solid;
	border-width: 1px 1px 0px 0px;
}

.AFPanelBoxFooterCenter:alias {
	padding: 0px;
	width: 100%;
	height: 1px;
	overflow: hidden;
	white-space: nowrap;
	vertical-align: middle;
	border-style: solid;
	border-width: 1px 0px 0px 0px;
	-tr-rule-ref: selector(".AFDefaultBoldFont:alias");
	background-repeat: repeat-x;
	background-position: bottom left;
}

.AFPanelBoxHeaderCoreDefault:alias,
.AFPanelBoxContentCoreDefault:alias {
	background-color: #FFFFFF;
	border-color: #BFC6C9;
}

.AFPanelBoxHeaderCoreLight:alias,
.AFPanelBoxContentCoreLight:alias
{
	background-color: #E7F2FF;
	border-color: #BFC6C9;
}

.AFPanelBoxHeaderCoreMedium:alias,
.AFPanelBoxContentCoreMedium:alias {
	background-color: #D8E3EA;
	border-color: #BFC6C9;
}

.AFPanelBoxHeaderCoreDark:alias,
.AFPanelBoxContentCoreDark:alias {
	background-color: #336699;
	border-color: #BFC6C9;
}

.AFPanelBoxHeaderHighlightDefault:alias,
.AFPanelBoxContentHighlightDefault:alias {
	background-color: #FFFFFF;
	border-color: #BFC6C9;
}

.AFPanelBoxHeaderHighlightLight:alias,
.AFPanelBoxContentHighlightLight:alias {
	background-color: #FFFCBA;
	border-color: #D7D9B6;
}

.AFPanelBoxHeaderHighlightMedium:alias,
.AFPanelBoxContentHighlightMedium:alias {
	background-color: #FFF0B9;
	border-color: #CCC5A5;
}

.AFPanelBoxHeaderHighlightDark:alias,
.AFPanelBoxContentHighlightDark:alias {
	background-color: #B6D9D1;
	border-color: #8FA6A0;
}

/* background on buttons (new alias) */
.AFButtonBackground:alias {
	-tr-rule-ref: selector(".AFLightAccentBackground:alias");
}
/* background on buttons in active mode. (new alias) */
.AFButtonBackgroundActive:alias {
	-tr-rule-ref: selector(".AFMediumBackground:alias");
}

/* background on buttons in disabled mode. (new alias) */
.AFButtonBackgroundDisabled:alias {
	-tr-rule-ref: selector(".AFMediumAccentBackground:alias");
	background-image: none;
}

/* background on buttons in hover mode. (new alias) ILightBackground_AF*/
.AFButtonBackgroundHover:alias {
	-tr-rule-ref: selector(".AFLightBackground:alias");
}
.AFButtonBackgroundFocus:alias {
}

.AFButtonForeground:alias,
.AFButtonForegroundHover:alias,
.AFButtonForegroundDepressed:alias {
	-tr-rule-ref: selector(".AFDefaultFont:alias");
	color: #ffffff;
}

/* foreground color on disabled buttons.  */
.AFButtonForegroundDisabled:alias {

}

/* New alias for borders on buttons. */
/* borders on buttons. (new alias) */
.AFButtonBorder:alias {
}


.AFButtonBorderDisabled:alias {
	cursor: default;
}

/* borders on buttons in hover mode. (new alias) */
.AFButtonBorderHover:alias {
}

/* borders on buttons in active mode. (new alias) IButtonBorderActive_AF */
.AFButtonBorderActive:alias {
}

/* Use to style anchor tags with a clickable image.
Requirements:
 - Image is 16px by 16px (common to blafplus icons)
 - Display mode is inline
 - The anchor tag is empty - peer code handles the action when user clicks
   on the image. For example layout and handling, see inputDate.jspx and the
   inputDate peer which opens a chooseDate popup when clicked.
 - Individual peers use this alias, and add the image to be displayed using
   background-image attribute. For example, see "af|inputDate::launch-icon-style".

 Notes:
 - The font-size and padding-right are used to control the height and width
   respectively in FireFox. Using font-size 14px (rather than 16px) avoids the
   image floating, but can be overriden.
 - The display:inline-block is used to cause the image to show up in IE.

If your image is not 16px by 16px, you can use this alias but override
the font-size and padding-right to the appropriate height/width */
.AFClickableImageAnchor:alias {
	padding-right: 16px;
	margin-left: 8px;
	margin-right: 1px;
	background-repeat: no-repeat;
	background-position: center left;
	height: 30px;
}
@agent ie and (version: 7.0) {
	.AFClickableImageAnchor:alias {
		display: inline-block;
	}
}
@agent webkit {
	.AFClickableImageAnchor:alias {
		display: inline-block;
		height: 16px;
		vertical-align: text-bottom;
	}
}

/* Used to make table-based components display inline and this shouldn't be
   exposed to skinners.  We should change to display="inline-table" as it's
   supported by browsers.
*/
.AFFormComponentContentInline:alias {
	display: inline;
	vertical-align: middle;
}
@agent gecko {
	.AFFormComponentContentInline:alias {
		display: -moz-inline-box;
	}
}
@agent webkit {
	.AFFormComponentContentInline:alias {
		display: inline-block;
	}
}

/* Used for disabled input components */
/* Override the base definition */
/* used in disabled form components */
.MediumExtraAccentForeground:alias {
	color: #7E807A;
}
/* new alias */
.AFExtraLightTextForeground:alias {
	color: #FFFFFF;
}

/* af:messages Styles */
.AFFormComponentOutlineError:alias,
.AFFormComponentOutlineFatal:alias {
	border: 2px #C70000 solid;
	margin: 0px;
}

.AFFormComponentOutlineWarning:alias {
	border: 2px #FFAA2B solid;
	margin: 0px;
}
/* new alias */
.AFErrorBackground:alias {
	background-color:#C70000;
}

.AFErrorTextForeground:alias {
	color: #C70000;
}
/* new alias */
.AFWarningBackground:alias {
	background-color:#FFAA2B;
}

/* Underline the access key on form components, e.g. output label */
/* Underline the access key for buttons */
/* New alias */
.AFLinkAccessKeyStyle:alias,
.AFFormAccessKeyStyle:alias,
.AFButtonAccessKeyStyle:alias {/*IButtonAccessKey_AF*/
	text-decoration:underline;
}

/* AFFormControlContent:alias is defined in base-desktop.xss. It includes AFFieldText
/* Background gradient on form content. (new alias) */
.AFFormControlContentBackground:alias {
}

/* All the form controls have the same background-color for disabled, so use an alias */
.AFFormControlContentBackgroundDisabled:alias {
}

.AFFormControlContentForegroundDisabled:alias {
	-tr-rule-ref: selector(".AFDarkAccentForeground:alias");
}

.AFFormControlItemForegroundDisabled:alias {
	-tr-rule-ref: selector(".AFFormControlContentForegroundDisabled:alias");
}
/* Background for disabled items in select lists */
.AFFormControlItemBackgroundDisabled:alias {
	-tr-rule-ref: selector(".AFFormControlContentBackgroundDisabled:alias");
}

/* Border for disabled items in select lists */
.AFFormControlItemBorderDisabled:alias {
}

.AFFormControlSeparatorBackground:alias {
	background-color:#979993;
}


/* border around a popup that contains menus (menu type popup). */
.AFPopupMenuBorder:alias {
	border: 1px solid #c5d0db;
	border-radius: 3px;
	box-shadow: 0 1px 3px rgba(0,0,0,.1);
}

/* Private - Alias for the horizontal padding inside panelFormLayout geo.controller.component.utils.css.oop.attributes.panel.IPanelFormLayoutHorizontalPadding_AF*/
.AFPanelFormLayoutHorizontalPadding:alias{
	padding-left: 8px;
	padding-right: 0px;
}

/* Private - Alias for the rtl horizontal padding inside panelFormLayout */
.AFPanelFormLayoutHorizontalPadding:alias:rtl{
	padding-left: 0px;
	padding-right: 8px;
}

/* overflow indicator at the start (left) side of a horizontal list */
.AFOverflowImageHorizontalStart:alias {
	background-image: url("/afr/overflow_start.png");
	left: 0px;
}

.AFOverflowImageHorizontalStartHover:alias {
	background-image: url("/afr/overflow_start_mo.png");
}

.AFOverflowImageHorizontalStartDepressed:alias {
	background-image: url("/afr/overflow_start_md.png");
}

/* overflow indicator at the end (right) side of a horizontal list */
.AFOverflowImageHorizontalEnd:alias {
	background-image: url("/afr/overflow_end.png");
	right: 0px;
}

.AFOverflowImageHorizontalEndHover:alias {
	background-image: url("/afr/overflow_end_mo.png");
}

.AFOverflowImageHorizontalEndDepressed:alias {
	background-image: url("/afr/overflow_end_md.png");
}

/* overflow indicator at the start (top) side of a vertical list */
.AFOverflowImageVerticalStart:alias {
	background-image: url('/afr/overflow_top.png');
}

/* in simple, use same image for hover and depressed */
.AFOverflowImageVerticalStartHover:alias {
	background-image: url('/afr/overflow_top.png');
}

/* in simple, use same image for hover and depressed */
.AFOverflowImageVerticalStartDepressed:alias {
	background-image: url('/afr/overflow_top.png');
}

/* overflow indicator at the end (right) side of a Vertical list */
.AFOverflowImageVerticalEnd:alias {
	background-image: url("/afr/overflow_bottom.png");
}

/* in simple, use same image for hover and depressed */
.AFOverflowImageVerticalEndHover:alias {
	background-image: url("/afr/overflow_bottom.png");
}

/* in simple, use same image for hover and depressed */
.AFOverflowImageVerticalEndDepressed:alias {
	background-image: url("/afr/overflow_bottom.png");
}

/* TODO: remove AFStartPadding when we pick up the latest Trinidad which has this in
         base-desktop.xss */
.AFStartPadding:alias{
	padding: 0px 0px 0px 8px;
}

.AFStartPadding:alias:rtl{
	padding: 0px 8px 0px 0px;
}

/* overrides Trinidad AfEndPadding to match BLAF+ */
.AFEndPadding:alias{
	padding: 0px 6px 0px 0px;
}

.AFEndPadding:alias:rtl{
	padding: 0px 0px 0px 6px;
}

.AFTrainOverflowElement {
	display: block;
	white-space: nowrap;
	clear: both;
	overflow: auto;
}

/* Private - Alias for popup-create-icon in LOV */
.AFListOfValuesCreateIconStyle:alias {
	background-image: url("/afr/new_ena.png");
	background-repeat: no-repeat;
}

/* borders on drop-down buttons. (new alias)*/
.AFDropDownIconBorder:alias {
}

/* borders on drop-down buttons in active mode. (new alias)*/
.AFDropDownIconBorderActive:alias {
}

/* Need an extra pixel in the data cell padding when there is no vertical
line. Otherwise it won't line up with the header cell which has a vertical line
by default. */
.AFTableCellData:alias {
	/* !important - total must match the total of skin property
    -tr-border-left-width, -tr-border-right-width, -tr-padding-right,
    -tr-padding-left*/
	/* extra pixel in padding compensates for no border */
	border-right: none;
	border-bottom: none;
	padding-right: 3px;
}

.AFTableCellData:alias:rtl {
	padding-left: 3px;
	padding-right: 2px;
}

.AFTableCellDataHGrid:alias {
	border-bottom: 1px solid #e7e8ec;
}

/* Vertical border. Also, reset the padding-right to match that which is on
the header since we now have a border to match the header's border.
This will override the padding set on .AFTableCellDataPadding:alias */
.AFTableCellDataVGrid:alias {
	border-right: 1px solid #e7e8ec;
	padding-right: 2px;
}

.AFTableCellDataVGrid:alias:rtl {
	border-left: 1px solid #e7e8ec;
	border-right: none;
	padding-left: 2px;
}

.AFTableCellDataVHGrid:alias {
	-tr-rule-ref: selector(".AFTableCellDataVGrid:alias");
	-tr-rule-ref: selector(".AFTableCellDataHGrid:alias");
}

.AFTableCellDataDropTargetColor:alias, .AFTableHeaderCellDataDropTargetColor:alias {
	-tr-rule-ref: selector(".AFVeryDarkBackground:alias");
	-tr-rule-ref: selector(".AFExtraLightTextForeground:alias");
}

@accessibility-profile high-contrast {

	.AFTableCellDataSelected:alias,
	.AFTableCellDataSelectedFocused:alias {
		font-weight: bold;
	}

	.AFTableCellDataSelectedBanded:alias,
	.AFTableCellDataSelectedBandedFocused:alias {
		font-weight: bold;
	}

	.AFTableCellDataSelectedInactive:alias {
		font-weight: bold;
	}

	.AFTableCellDataSelectedBandedInactive:alias {
		font-weight: bold;
	}

}

.AFTableCellDataSelected:alias,
.AFTableCellDataSelectedFocused:alias {
	-tr-rule-ref: selector(".AFMediumBackground:alias");
}

.AFTableCellDataSelectedBanded:alias,
.AFTableCellDataSelectedBandedFocused:alias {
	-tr-rule-ref: selector(".AFDarkBackground:alias");
}

.AFTableCellDataSelectedInactive:alias {
	-tr-rule-ref: selector(".AFMediumAccentBackground:alias");
}

.AFTableCellDataSelectedBandedInactive:alias {
	-tr-rule-ref: selector(".AFDarkAccentBackground:alias");
}

/* TODO: Icons ending in Icon are not picked up (see Trinidad issue 277). For
the time being used :alias for the icon to work. */
.AFLogoIcon:alias {
	content: url(/afr/logo-oracle-dark.png);
	width: 119px;
	height: 25px;
	vertical-align: middle;
}

/* TODO: Icons ending in Icon are not picked up (see Trinidad issue 277). For
the time being used :alias for the icon to work. */
.AFBetweenSeparatorIcon:alias {
	content:"-";
	padding-left: 5px;
	padding-right: 5px;
}

/* TODO: Icons ending in Icon are not picked up (see Trinidad issue 277). For
the time being used :alias for the icon to work. */
.AFIndexedIcon:alias {
	content:"**";
	color: #168001;
}

/* To make an image center-aligned (vertically & horizontally) with vertical & horizontal scroll */
.AFImgWrapper {
    width: 100%;
    height: 100%;
    overflow-x:auto;
    overflow-y:auto;
    display:flex;
}

.AFImgWrapper > img {
    margin:auto;
}

/* For some reason a labelled input component with simple="true" uses this but with styles that make
   it visbile at only 999px above the component.  It is not safe to assume that pages cannot be more
   than 999 pixels (go to a W3C page for examples of how hugely long they can be).  Temporarily,
   let's set it to a larger value.
   TODO consider better ways to handle this in Trinidad */
.p_OraHiddenLabel {
	top: -99999px;
}

/*
 * Dynamic help icon styles.
 */
/*
 * This key is an alias for the dynamic help icon style.
 * This key uses background-image to set the dynamic help image.
 * If you want to use text instead of a background-image, you can
 * use .AFDynamicHelpIcon:alias {content:"Text"}.
 */
.AFDynamicHelpIconStyle:alias {
	background-image: url('/afr/helptopics_ena.png');
	-tr-rule-ref: selector(".AFClickableImageAnchor:alias");
	/* Bug 7497524 - The icon was too close to the label.
   * added extra pixel to the right of the icon
   */
	margin-right: 4px;
}

/*
 * Define the global style classes for the autoSuggest dropdown for the editable input components.
 * Limit the height to 300px because not everyone will have a large display nor have their browser
 * maximized so that user will not see both a scroll bar on the browser plus a scroll bar on the
 * popup.
 */
.AFAutoSuggestItemsContainer {
	border:0px;
	-tr-rule-ref: selector(".AFTextBackground:alias");
	list-style-image: none;
	list-style-position: outside;
	list-style-type: none;
	margin: 0px;
	padding: 0 0 1px 0;
	max-height: 300px;
	overflow: auto;
}

.AFAutoSuggestItem {
	-tr-rule-ref: selector(".AFTextBackground:alias");
	height:14px;
	padding:1px;
	border:1px transparent solid;
	background-color: transparent;
	-tr-rule-ref: selector(".AFTextForeground:alias");
	-tr-rule-ref: selector(".AFDefaultFont:alias");
	vertical-align:baseline;
	-tr-rule-ref: selector(".AFStartTextAlign:alias");
	white-space: pre;
	cursor: default;
}

/* We need a transparent border here because AFAutoSuggestMoreLink:selected adds a dotted non-transparent border.
   Without this transparent border, this link would grow when the dotted non-transparent border gets added.
   We also need to disable the native focus ring by setting outline-width to zero to prevent double outlines. */
.AFAutoSuggestMoreLink {
	-tr-rule-ref: selector(".AFLinkForeground:alias");
	-tr-rule-ref: selector(".AFDefaultFont:alias");
	text-decoration: none;
	border: 1px solid transparent;
	outline-width: 0px;
}
/* Selection state for the suggested item when hovered or navigated through keyboard */
.AFAutoSuggestItem:selected {
	-tr-rule-ref: selector(".AFActiveLinkBorder:alias");
	-tr-rule-ref: selector(".AFMediumBackground:alias");
}

.AFAutoSuggestMoreLink:selected {
	border-style: dotted;
	border-width: 1px;
	border-color: inherit;
}
/* IE7 treats "inherit" as transparent so we need to give it a color. */

@agent ie and (version: 7.0) {
	.AFAutoSuggestMoreLink:selected {
		border-color: black;
	}
}

.AFAutoSuggestBusyStyle {
	-tr-rule-ref: selector(".AFBackgroundImageStatus:alias");
	height: 60px;
	min-width: 60px;
}


.AFInlineSelected:alias {
	border:solid 2px blue}

/* default inline editing pseudo-class definitions */
*:inline-selectable {
	cursor:pointer}

*:active-inline-editable-container {
	background-color:PowderBlue; opacity:0.75}

/* use border on platforms that don't support outline for showing selection indication */
*:inline-selected {
	-tr-rule-ref: selector(".AFInlineSelected:alias"); }

@agent gecko {
	*:inline-selected {
		-tr-inhibit: border;
		outline:solid 2px blue;
	}
}


*:inline-editable {
	cursor:text}

/* pseudo-class that is applied to component that are updated by af:poll,
   when the poll component timed out. */
*:no-update {
	background-color: #999999;
	opacity: 0.5}

@agent ie {
	*:no-update
	{
		filter: alpha(opacity:50);
	}
}

*:no-update-badge {
	background: transparent url("/afr/warning_status.png") center no-repeat;
}

*:active-inline-editable-container *:hover-target{
	border:solid 2px #3399ff}

@agent gecko {
	*:active-inline-editable-container *:hover-target {
		-tr-inhibit: border;
		outline:solid 2px #3399ff;
	}
}


/* Default style for drop targets */
*:drop-target {
	background-color:PowderBlue;
	opacity:0.75;
}

@agent ie {
	*:drop-target
	{
		filter:alpha(opacity:75);
	}
}

/* Style for dynamic help icon */
af|column::dynamic-help-icon-style,
af|inputColor::dynamic-help-icon-style,
af|inputComboboxListOfValues::dynamic-help-icon-style,
af|inputDate::dynamic-help-icon-style,
af|inputFile::dynamic-help-icon-style,
af|inputListOfValues::dynamic-help-icon-style,
af|inputNumberSlider::dynamic-help-icon-style,
af|inputNumberSpinbox::dynamic-help-icon-style,
af|inputRangeSlider::dynamic-help-icon-style,
af|inputText::dynamic-help-icon-style,
af|panelHeader::dynamic-help-icon-style,
af|panelLabelAndMessage::dynamic-help-icon-style,
af|query::dynamic-help-icon-style,
af|quickQuery::dynamic-help-icon-style,
af|richTextEditor::dynamic-help-icon-style,
af|selectBooleanCheckbox::dynamic-help-icon-style,
af|selectBooleanRadio::dynamic-help-icon-style,
af|selectManyCheckbox::dynamic-help-icon-style,
af|selectManyChoice::dynamic-help-icon-style,
af|selectManyListbox::dynamic-help-icon-style,
af|selectManyShuttle::dynamic-help-icon-style,
af|selectOneChoice::dynamic-help-icon-style,
af|selectOneListbox::dynamic-help-icon-style,
af|selectOneRadio::dynamic-help-icon-style,
af|selectOrderShuttle::dynamic-help-icon-style,
af|showDetailHeader::dynamic-help-icon-style,
af|dialog::dynamic-help-icon-style,
af|panelWindow::dynamic-help-icon-style,
af|panelBox::dynamic-help-icon-style,
af|region::dynamic-help-icon-style {
	-tr-rule-ref: selector(".AFDynamicHelpIconStyle:alias");
}

af|outputText{
	-tr-inhibit: all;
}


af|outputFormatted{
	-tr-inhibit: all;
}

af|contextInfo {
	position: relative;
	vertical-align:top;
}

/**IContextInfoGeometry**/
af|outputText af|contextInfo,
af|outputFormatted af|contextInfo,
af|inputText:read-only  af|contextInfo,
af|inputComboboxListOfValues:read-only  af|contextInfo,
af|inputListOfValues:read-only  af|contextInfo,
af|selectOneChoice:read-only af|contextInfo{
	padding-right: 5px;
}

/* the context-content style goes around both the context facet and the content */
af|inputText::context-content af|inputText::content,
af|inputComboboxListOfValues::context-content af|inputComboboxListOfValues::content,
af|inputListOfValues::context-content af|inputListOfValues::content {
	padding-left:5px;
}

af|selectOneChoice::context-content af|selectOneChoice::content{
	padding-left:2px;
}




af|inputListOfValues af|contextInfo::launch-icon-style,
af|inputText af|contextInfo::launch-icon-style,
af|selectOneChoice af|contextInfo::launch-icon-style {
	margin-top:1px;
	margin-left:1px;
}

af|inputText af|contextInfo::launch-icon-style,
af|selectOneChoice af|contextInfo::launch-icon-style {
	margin-top:3px;
	margin-left:3px;
}

af|inputListOfValues af|contextInfo::launch-icon-style {
	margin-top:2px;
	margin-left:3px;
}


af|selectOneChoice:read-only af|contextInfo::launch-icon-style,
af|inputText:read-only af|contextInfo::launch-icon-style,
af|inputComboboxListOfValues:read-only af|contextInfo::launch-icon-style,
af|inputListOfValues:read-only af|contextInfo::launch-icon-style {
	margin:0px;
}

af|column::context af|contextInfo {
	left: -2px;
	top: -1px;
	padding-right: 3px;
}


af|column::context af|contextInfo:rtl {
	left:auto;
	padding-right:auto;
	padding-left:3px;
}


af|contextInfo::launch-icon-style {
	-tr-rule-ref: selector(".AFClickableImageAnchor:alias");
	font-size: 4px;
	padding-right: 4px;
	-tr-inhibit: margin-left;
	-tr-inhibit: margin-right;
	background-image:url("/afr/ci.png");
	background-repeat:no-repeat;
	position: absolute;
	top: 0px;
	left: 0px;
	width:4px;
	height:4px;
}



af|contextInfo::launch-icon-style:rtl {
	right:0px;
	left:auto;
}

af|contextInfo::launch-icon-style:hover {
	background-image:url("/afr/ci_ovr.png");
	width:16px;
	height:16px;
}


af|contextInfo::launch-icon-style:hover:rtl {
	background-image:url("/afr/ci_ovr_rtl.png");
}

af|contextInfo::launch-icon-style:active {
	background-image:url("/afr/ci_dwn.png");
	width:16px;
	height:16px;
}

af|contextInfo::launch-icon-style:active:rtl {
	background-image:url("/afr/ci_dwn_rtl.png");
}
@agent ie and (version: 7.0) {
	/* in ie7 we're seeing the active icon when you have focus on the component,
  so inhibit the active styles on IE7 */
	af|contextInfo::launch-icon-style:active {
		-tr-inhibit: all;
	}

	af|contextInfo::launch-icon-style:active:rtl {
		-tr-inhibit: all;
	}
}

@accessibility-profile high-contrast {
	af|contextInfo::launch-icon {
		content: url("/afr/ci.png");
		width: 4px;
		height: 4px;
	}

	af|contextInfo::launch-icon-style:hover {
		width:auto;
		height:auto;
	}

	af|contextInfo::launch-icon-style:active {
		width:auto;
		height:auto;
	}
}

/* TODO: Icons ending in Icon are not picked up (see Trinidad issue 371). For
the time being used :alias for the icon to work. */
.AFChangedIcon:alias {
	content: url(/afr/changed.png);
	vertical-align: text-bottom;
	padding-right: 3px;
}

/* Changed indicator icon styles */
/* The following is mapped in BlafPlusMediumDesktopSkinExtension.java,
 * waiting on JIRA Trinidad-17 to be fixed.
af|inputColor::changed-icon,
af|inputComboboxListOfValues::changed-icon,
af|inputDate::changed-icon,
af|inputFile::changed-icon,
af|inputListOfValues::changed-icon,
af|inputNumberSlider::changed-icon,
af|inputNumberSpinbox::changed-icon,
af|inputRangeSlider::changed-icon,
af|inputText::changed-icon,
af|richTextEditor::changed-icon,
af|selectBooleanCheckbox::changed-icon,
af|selectBooleanRadio::changed-icon,
af|selectManyCheckbox::changed-icon,
af|selectManyChoice::changed-icon,
af|selectManyListbox::changed-icon,
af|selectManyShuttle::changed-icon,
af|selectOneChoice::changed-icon,
af|selectOneListbox::changed-icon,
af|selectOneRadio::changed-icon,
af|selectOrderShuttle::changed-icon {

  -tr-rule-ref: selector(".AFChangedIcon:alias");
}
 */


/* Start of button styling */

/* Default, enabled state for buttons. */
af|resetButton,
af|query::button,
.AFNoteWindowAllButton {
	-tr-rule-ref: selector(".AFButtonForeground:alias");
	-tr-rule-ref: selector(".AFButtonBorder:alias");
	-tr-rule-ref: selector(".AFButtonBackground:alias");
}

.AFNoteWindowAllButton {
	padding: 3px 9px;
}

/* For iconic buttons we need different paddings. As style for text-only state is used
by many other buttons, so changing padding for iconic state here instead of changing in
AFButtonBackground:alias .*/
af|dialog::footer-button,
af|goButton {
	-tr-rule-ref: selector(".AFButtonForeground:alias");
	-tr-rule-ref: selector(".AFButtonBorder:alias");
	-tr-rule-ref: selector(".AFButtonBackground:alias");
	-tr-rule-ref: selector(".MetroButtonGeometry:alias");
}

af|goButton:text-only {
	-tr-rule-ref: selector(".AFButtonBackground:alias");
}

/* Style for icon on buttons, if specified. */
af|dialog::footer-button-icon-style,
af|goButton::icon-style {
	vertical-align: middle;
	border-width:0px;
	padding-right: 2px;
}


/* private style for text on buttons that have icon and text */
af|goButton::text-by-icon {
	padding-left: 3px;
}


/* Style for mouse over (css hover pseudo-class) on buttons. */
af|resetButton:hover,
af|goButton:hover,
af|dialog::footer-button:hover,
af|query::button:hover,
.AFNoteWindowAllButton:hover {
	-tr-rule-ref: selector(".AFButtonBorderHover:alias");
	-tr-rule-ref: selector(".AFButtonBackgroundHover:alias");
	-tr-rule-ref: selector(".AFButtonForegroundHover:alias");
}
/* Style for BLAF+ active (css focus pseudo-class) on buttons */
af|resetButton:focus,
af|goButton:focus,
af|dialog::footer-button:focus,
af|query::button:focus,
.AFNoteWindowAllButton:focus {
	-tr-rule-ref: selector(".AFButtonBackgroundFocus:alias");
}

af|resetButton:focus:hover,
af|goButton:focus:hover,
af|dialog::footer-button:focus:hover,
af|query::button:focus:hover,
.AFNoteWindowAllButton:focus:hover {
		-tr-rule-ref: selector(".AFButtonBorderHover:alias");
  	-tr-rule-ref: selector(".AFButtonBackgroundHover:alias");
  	-tr-rule-ref: selector(".AFButtonForegroundHover:alias");
}
/* Style for mouse down (css active pseudo-class) on buttons */
af|resetButton:active,
af|resetButton:active:hover,
af|goButton:active,
af|goButton:active:hover,
af|dialog::footer-button:active,
af|dialog::footer-button:active:hover,
af|query::button:active,
af|query::button:active:hover,
.AFNoteWindowAllButton:active,
.AFNoteWindowAllButton:active:hover {
	-tr-rule-ref: selector("AFButtonBorderActive:alias");
	-tr-rule-ref: selector(".AFButtonBackgroundActive:alias");
	-tr-rule-ref: selector(".AFButtonForegroundDepressed:alias");
}

/* Style for disabled (css disabled) on buttons */
af|resetButton:disabled,
af|resetButton:active:disabled,
af|dialog::footer-button:disabled,
af|dialog::footer-button:active:disabled,
af|query::button:disabled,
af|query::button:active:disabled,
af|goButton:disabled,
af|goButton:active:disabled {
	-tr-rule-ref: selector(".AFButtonForegroundDisabled:alias");
	-tr-rule-ref: selector(".AFButtonBorderDisabled:alias");
	-tr-rule-ref: selector(".AFButtonBackgroundDisabled:alias");
}

/* Style for busy state on navigation and command components to display progress cursor ICR_Busy*/
af|breadCrumbs::step:busy,
af|commandImageLink:busy,
af|commandNavigationItem:busy,
af|navigationPane-bar::link:busy,
af|navigationPane-buttons::link:busy,
af|navigationPane-choice::link:busy,
af|navigationPane-list::link:busy,
af|navigationPane-tabs::tab:busy a,
af|navigationPane-tabs::tab:busy div,
af|panelTabbed::tab:busy a,
af|panelTabbed::tab:busy div,
af|quickQuery:busy a,
af|query:busy button,
af|resetButton:busy,
af|train::stop:busy a,
af|train::stop:busy div,
af|trainButtonBar:busy {
	cursor : progress;
}

/*IButtonAccessKey_AF*/
af|goButton::access-key,
af|dialog::footer-button-access-key,
af|resetButton::access-key,
af|query::button-access-key {
	-tr-rule-ref: selector(".AFButtonAccessKeyStyle:alias");
}

/* end buttons */

/* start links */
af|goLink,
af|messages::component-link,
af|calendar::list-day-of-month-link,
af|calendar::list-title-link,
af|calendar::month-grid-cell-header-day-link,
af|calendar::month-overflow-link,
af|calendar::week-header-day-link {
	-tr-rule-ref: selector(".AFLinkForeground:alias");
	-tr-rule-ref: selector(".AFDefaultFont:alias");
}

af|calendar::month-grid-cell:today af|calendar::month-grid-cell-header-day-link,
af|calendar::month-grid-cell:today:active-day af|calendar::month-grid-cell-header-day-link,
af|calendar::month-grid-cell:active-day af|calendar::month-grid-cell-header-day-link,
af|calendar::week-header-cell:today af|calendar::week-header-day-link,
af|calendar::week-header-cell:active-day af|calendar::week-header-day-link {
	color: #FFFFFF;
}

af|goLink:visited,
af|messages::component-link:visited,
af|calendar::list-day-of-month-link:visited,
af|calendar::list-title-link:visited,
af|calendar::month-overflow-link:visited {
	-tr-rule-ref: selector(".AFVisitedLinkForeground:alias");
}

af|messages::component-link:focus {
	-tr-rule-ref: selector(".AFActiveLinkBorder:alias");
}
af|messages::component-link:visited:focus {
	-tr-rule-ref: selector(".AFVisitedLinkBorder:alias");
}

af|goLink:active,
af|messages::component-link:active,
af|calendar::list-day-of-month-link:active,
af|calendar::list-title-link:active,
af|calendar::month-grid-cell-header-day-link:active,
af|calendar::month-overflow-link:active,
af|calendar::week-header-day-link:active {
	-tr-rule-ref: selector(".AFActiveLinkForeground:alias");
}

af|goLink:link:active,
af|messages::component-link:link:active,
af|calendar::list-day-of-month-link:link:active,
af|calendar::list-title-link:link:active,
af|calendar::month-grid-cell-header-day-link:link:active,
af|calendar::month-overflow-link:link:active,
af|calendar::week-header-day-link:link:active {
	-tr-rule-ref: selector(".AFActiveLinkForeground:alias");
}

af|goLink:disabled {
	-tr-rule-ref: selector(".AFLinkDisabled:alias");
}

/* end links */


/* Simple Form Components */
/* ---------------------- */
/* inputText */
/* Underline the access key for inputText labels */
af|inputText::access-key {
	-tr-rule-ref: selector(".AFFormAccessKeyStyle:alias");
}

/* marker class to force nowrap on large labels*/
/* todo we should do this for all input components, but we are spot fixing right now to limit
the impact of the fix. the ideal solution is to add a labelStyle attribute on the components*/
af|inputText.AFNoWrapMarker::label,
af|inputListOfValues.AFNoWrapMarker::label,
af|inputComboboxListOfValues.AFNoWrapMarker::label,
af|selectOneChoice.AFNoWrapMarker::label {
	white-space: nowrap;
}

/* inputFile */
/* Underline the access key for inputFile labels */
af|inputFile::access-key {
	-tr-rule-ref: selector(".AFFormAccessKeyStyle:alias");
}

/* Private - style class for the name of the uploaded file, to ensure there is a padding between text and button */
af|inputFile::text:update
{
	padding-right: 8px;
}
/* we need to remove this, and add a margin to the button, as that's the only
   thing that works with both IE and FF in RTL. */
af|inputFile::text:update:rtl
{
	padding-right: 0px;
}

/* richTextEditor */
/* Underline the access key for richTextEditor labels */
af|richTextEditor::access-key {
	-tr-rule-ref: selector(".AFFormAccessKeyStyle:alias");
}

/* This SHOULD be in base-desktop.xss, but it is not */
af|inputFile:disabled::label {
	-tr-rule-ref: selector(".AFLabelDisabled:alias");
}


/* the base skin has line-height. I don't want line-height, so inhibit it. */
af|inputDate
{
	-tr-inhibit: line-height;
	white-space: nowrap;
}

/* Underline the access key for inputDate labels */
af|inputDate::access-key {
	-tr-rule-ref: selector(".AFFormAccessKeyStyle:alias");
}
/* For BLAF+'s inputText, we set the border color and padding. */
af|inputText::content,
af|inputDate::content,
af|inputListOfValues::content{
	-tr-rule-ref: selector(".AFFormControlContentBorder:alias");
	-tr-rule-ref: selector(".AFFormControlContentBackground:alias");
	padding: 0 8px;
	height: 28px;
	outline: none;
}

af|inputText::content[rows] {
   height: unset;
}

af|inputText::content:busy,
af|inputListOfValues::content:busy,
af|inputComboboxListOfValues::content:busy{
	background-image:url('/afr/autosuggest_spinner.gif');
	background-position: right center;
	background-repeat: no-repeat;
}

/** TODO переделать на сущности дизайна */
.inputFieldInToolbar af|inputText::content,
.inputFieldInToolbar af|inputDate::content,
.inputFieldInToolbar af|inputListOfValues::content{
	height: 18px;
}

/* We want the multi-row version of inputText to stretch if its parent is a stretching container */
af|inputText:multi-row:stretched::content {
	box-sizing: border-box;
	margin: 0;
	height: 100%;
	width: 100%;
}
@agent gecko {
	af|inputText:multi-row:stretched::content {
		-tr-inhibit: box-sizing;
		-moz-box-sizing: border-box;
	}
}
@agent webkit {
	af|inputText:multi-row:stretched::content {
		-webkit-box-sizing: border-box;
	}
}

/* we only want to style the border for FF, it messes up the button in IE */
@agent gecko {
	af|inputFile::content{
		-tr-rule-ref: selector(".AFFormControlContentBorder:alias");
	}
}
af|inputFile::content{
	-tr-rule-ref: selector(".AFDefaultFont:alias");
	-tr-rule-ref: selector(".AFFormControlContentBackground:alias");
}

/**
 * override the line height inherited from trinidad
 */
@agent gecko {
	af|inputDate::content {
		-tr-inhibit: line-height;
	}
}

/** styles the clickable launch icon **/
/* af|inputDate::launch-icon can be used instead, but instead we.
use ::launch-icon-style with background-image */
/* stupid panelList::link is mapped to "panelList A" in trinidad making its
specificity (11) higher than af|inputDate::launch-icon-style (10) so I added
af|panelList to bump the specificity to 20 so it would get the correct font
size when inside a panelList. */
af|inputDate::launch-icon-style,
af|panelList af|inputDate::launch-icon-style {
	-tr-rule-ref: selector(".AFClickableImageAnchor:alias");
	background-image:url("/component/img_metro/calendar.png");
}
/* Use the above icon for the richcomponents-simple skin, therefore we need to null
   out Trinidad's simple icon */
af|inputDate::launch-icon {
	content: inhibit;
}

/** styles the mousedown launch icon **/
af|inputDate::launch-icon-style:active {
	background-image:url("/component/img_metro/calendar.png");
}
/** styles the mouseover launch icon **/
af|inputDate::launch-icon-style:hover {
	background-image:url("/component/img_metro/calendar.png");
}
/** styles the disabled clickable launch icon **/
af|inputDate::launch-icon-style:disabled,
af|inputDate::launch-icon-style:disabled:active,
af|inputDate::launch-icon-style:disabled:hover {
	background-image: url("/component/img_metro/calendar.png");
	opacity: 0.3;
}

/* Styles the timezone string displayed besides the inputDate field. To hide
  the timezone from users, use display:none */
af|inputDate::timezone {
	padding: 4px;
}

/** richTextEditor styles **/

/*
 * PRIVATE skinning key:
 * The "-tr-field-inline-style" property contains the styles that will be added to the body of the
 * IFRAME of the content field since the IFRAME has no skinning style sheets available.
 * This skinning key is private because ideally we would like to have a mechanism that would let us
 * assemble this style from the fonts defined in the -tr-rule-ref since the property approach
 * requires us to hard-code the font-family and the font-size separately from the -tr-rule-ref
 * definitions.
 * Explicit height and border-box sizing is needed in Gecko 1.8 to allow the user to start selecting
 * text by dragging from below the text in the editor up into where the text lives.  This works by
 * default in Internet Explorer 7.
 */
@agent gecko
{
	af|richTextEditor {
		-tr-field-inline-style: margin_0px padding_1px font-size_small font-family_Tahoma -moz-box-sizing_border-box;
	}
}
@agent webkit
{
	af|richTextEditor {
		-tr-field-inline-style: margin_0px padding_1px font-size_small font-family_Tahoma;
	}
}
af|richTextEditor {
	-tr-field-inline-style: margin_0px padding_1px font-size_x-small font-family_Tahoma;
}


/* PRIVATE skinning key:
 * These are TEMPORARY until the color picker supports overlay icons of its own.
 */
af|richTextEditor::foreground-color-overlay,
af|richTextEditor::background-color-overlay {
	background-repeat: no-repeat;
	background-position: center;
	width: 16px;
	height: 16px;
	background-image: url("/afr/colorpickertxt_ena.png");
}
af|richTextEditor::background-color-overlay {
	background-image: url("/afr/colorpicker_ena.png");
}

/* Public */
af|richTextEditor::label {
	-tr-rule-ref: selector(".AFLabel:alias");
}

af|richTextEditor:disabled::label {
	-tr-rule-ref: selector(".AFLabelDisabled:alias");
}

/* the content area including the toolbox */
af|richTextEditor::content {
	width: 440px;
	position: relative;
}

/* adjust the toolbar separator so that the toolbar icons fit without overflow */
af|richTextEditor::content af|toolbar::separator {
	padding: 0px 3px;
}

/* We should give the div a scrollbar if needed.  For RTE, it was decided that
 * for now we won't have a default height in read only mode.
 */
/* We also need to set the default font size to match the iframe body */
af|richTextEditor:read-only::content {
	overflow: auto;
	font-size: small;
}

/* the parent container of the content-input node, used to put a border around the content */
af|richTextEditor::content-input-container {
	-tr-rule-ref: selector(".AFFormControlContentBorder:alias");
	border-top-width: 0px;
}

/* the content input area excluding the toolbox, child of content-input-container
   Using font-size: inherit so the em height will be consistent between the iframe and textarea in
   Firefox. */
af|richTextEditor::content-input {
	-tr-rule-ref: selector(".AFTextBackground:alias");
	font-size: inherit;
	margin: 0px;
	border-width: 0px;
	padding: 0px;
	height: 9em;
	width: 100%;
}
af|richTextEditor:disabled::content-input {
	background-color: transparent;
}

/* This is a PRIVATE skinning key that will need to be exposed as public if and when the toolbox
   is allowed to be customized to the point where there is no toolbox */
af|richTextEditor::missing-toolbox-border {
	-tr-rule-ref: selector(".AFFormControlContentBorder:alias");
	border-left-width: 0px;
	border-right-width: 0px;
	border-top-width: 0px;
}


af|inputColor::input-chooser-wrapper
{
	-tr-rule-ref:selector(".AFFormComponentContentInline:alias");
}
/* Used for when there's an error or fatal message on components with input
text fields */
af|inputColor:fatal::input-chooser-wrapper,
af|richTextEditor:fatal::content,
af|inputText:fatal::content,
af|inputListOfValues:fatal::content,
af|inputComboboxListOfValues:fatal::container,
af|inputNumberSpinbox:fatal::content,
af|inputDate:fatal::content,
af|inputFile:fatal::content,
af|chooseDate::spinbox-content:fatal,
af|selectOneListbox:fatal::content,
af|selectManyListbox:fatal::content,
af|selectManyShuttle:fatal::content,
af|selectOrderShuttle:fatal::content,
af|inputColor:error::input-chooser-wrapper,
af|richTextEditor:error::content,
af|inputText:error::content,
af|inputListOfValues:error::content,
af|inputComboboxListOfValues:error::container,
af|inputNumberSpinbox:error::content,
af|inputDate:error::content,
af|inputFile:error::content,
af|chooseDate::spinbox-content:error,
af|selectOneListbox:error::content,
af|selectManyListbox:error::content,
af|selectManyShuttle:error::content,
af|selectOrderShuttle:error::content {
	-tr-rule-ref:selector(".AFFormComponentOutlineError:alias");
}
/* selectManyChoice is a composite component so needs two elements with styles for fatal/error. */
af|selectManyChoice:fatal::control,
af|selectManyChoice:error::control {
	border: 2px solid #C70000;
	margin: 0px;
}
af|selectOneChoice:fatal::content,
af|selectOneChoice:error::content,
af|selectOneChoice:fatal::compact-content,
af|selectOneChoice:error::compact-content,
af|selectOneChoice:fatal::content-border,
af|selectOneChoice:error::content-border {
	-tr-rule-ref:selector(".AFFormComponentOutlineError:alias");
	margin: 1px;
}

/* This is here to make space for the error border */
af|selectOneChoice:fatal,
af|selectOneChoice:error,
af|selectOneChoice:warning {
	font-size: 13px;
}

/* Used for when there's an error or fatal message on checkboxes and radios */
af|selectBooleanCheckbox:error::content-input,
af|selectBooleanRadio:error::content-input,
af|selectManyCheckbox:error::content-input,
af|selectOneRadio:error::content-input,
af|selectBooleanCheckbox:fatal::content-input,
af|selectBooleanRadio:fatal::content-input,
af|selectManyCheckbox:fatal::content-input,
af|selectOneRadio:fatal::content-input {
	-tr-rule-ref:selector(".AFErrorBackground:alias");
}


@agent ie {
	af|selectBooleanRadio:fatal::content-input,
	af|selectOneRadio:fatal::content-input,
	af|selectBooleanRadio:error::content-input,
	af|selectOneRadio:error::content-input {
	}
	af|selectBooleanRadio:fatal::native-input,
	af|selectOneRadio:fatal::native-input,
	af|selectBooleanRadio:error::native-input,
	af|selectOneRadio:error::native-input {
		-tr-rule-ref:selector(".AFErrorBackground:alias");
	}
}

@agent ie and (version:7.0) {
	af|selectBooleanRadio:fatal::content-input,
	af|selectOneRadio:fatal::content-input,
	af|selectBooleanRadio:error::content-input,
	af|selectOneRadio:error::content-input {
		-tr-rule-ref:selector(".AFErrorBackground:alias");
	}
}

/* Used for when there's a warning on components with input text fields */
af|inputColor:warning::input-chooser-wrapper,
af|richTextEditor:warning::content,
af|inputText:warning::content,
af|inputListOfValues:warning::content,
af|inputComboboxListOfValues:warning::container,
af|inputNumberSpinbox:warning::content,
af|inputDate:warning::content,
af|inputFile:warning::content,
af|selectOneListbox:warning::content,
af|selectManyListbox:warning::content,
af|selectManyShuttle:warning::content,
af|selectOrderShuttle:warning::content {
	-tr-rule-ref:selector(".AFFormComponentOutlineWarning:alias");
}
/* selectManyChoice is a composite component so needs two elements with styles for warning. */
af|selectManyChoice:warning::control {
	border: 2px solid #FFAA2B;
	margin: 0px;
}
af|selectOneChoice:warning::content,
af|selectOneChoice:warning::compact-content,
af|selectOneChoice:warning::content-border {
	-tr-rule-ref:selector(".AFFormComponentOutlineWarning:alias");
	margin: 1px;
}

/* Used for when there's a warning on checkboxes and radios */
af|selectBooleanCheckbox:warning::content-input,
af|selectBooleanRadio:warning::content-input,
af|selectManyCheckbox:warning::content-input,
af|selectOneRadio:warning::content-input {
	-tr-rule-ref:selector(".AFWarningBackground:alias");
}


@agent ie {
	af|selectBooleanRadio:warning::content-input,
	af|selectOneRadio:warning::content-input {
	}
	af|selectBooleanRadio:warning::native-input,
	af|selectOneRadio:warning::native-input {
		-tr-rule-ref:selector(".AFWarningBackground:alias");
	}
}

@agent ie and (version:7.0) {
	af|selectBooleanRadio:warning::content-input,
	af|selectOneRadio:warning::content-input {
		-tr-rule-ref:selector(".AFWarningBackground:alias");
	}
}

/* Used for when there is info and confirmations */
af|inputColor:info::input-chooser-wrapper,
af|richTextEditor:info::content,
af|inputText:info::content,
af|inputListOfValues:info::content,
af|inputComboboxListOfValues:info::container,
af|inputNumberSpinbox:info::content,
af|inputDate:info::content,
af|inputFile:info::content,
af|selectOneListbox:info::content,
af|selectManyChoice:info::content,
af|selectManyListbox:info::content,
af|selectOneChoice:info::content,
af|inputColor:confirmation::input-chooser-wrapper,
af|richTextEditor:confirmation::content,
af|inputText:confirmation::content,
af|inputDate:confirmation::content,
af|inputFile:confirmation::content,
af|inputListOfValues:confirmation::content,
af|inputComboboxListOfValues:confirmation::container,
af|inputNumberSpinbox:confirmation::content,
af|selectOneListbox:confirmation::content,
af|selectManyChoice:confirmation::content,
af|selectManyListbox:confirmation::content,
af|selectOneChoice:confirmation::content {
}

/* used for inputText when disabled.  */
af|richTextEditor:disabled::content,
af|inputText:disabled::content,
af|inputNumberSpinbox:disabled::content,
af|inputDate:disabled::content,
af|inputColor:disabled::content,
af|inputComboboxListOfValues:disabled::container,
af|inputListOfValues:disabled::content {
	-tr-rule-ref: selector(".AFDarkAccentForeground:alias");
	-tr-rule-ref: selector(".AFFormControlContentBackgroundDisabled:alias");
}

/* navigationPane */
/* root style class for all hints in the navigationPane component */
af|navigationPane {
    --toolTipBackColor: #CDD1D4;
    background-color: var(--toolTipBackColor);
    color: #000000;
    border-radius: 5px;
}

/* navigationPane - override IE-specific height from Trinidad that causes problems in rich client */
@agent ie {
	af|navigationPane {
		height: 25px;
	}

	/* but... it is illegal to use px units for font containers in large-fonts mode */
	@accessibility-profile large-fonts {
		af|navigationPane {
			height: auto;
		}
	}
}

/* inner-most wrapper element for each nav item */
af|navigationPane-buttons,
af|navigationPane-list,
af|navigationPane-choice {
	display: inline;
}

af|navigationPane-bar {
	white-space: nowrap;
	overflow: hidden;
	width: 100%;
	display: block;
	position: relative;
	min-height: 22px;
	min-width: 50px;
}

@agent gecko {
	af|navigationPane-buttons,
	af|navigationPane-list,
	af|navigationPane-choice {
		display: block;
	}
}

af|navigationPane-bar::body {
	-tr-rule-ref: selector(".AFFloatStart:alias");
}

/* private - can be made public
 * styles the content of the navigationPane hint=choice
 */
af|navigationPane-choice::dropdown-panel-content {
	display: block;
	-tr-rule-ref: selector(".AFFormControlContentBorder:alias");
	-tr-rule-ref: selector(".AFTextBackground:alias");
	border: none;
	list-style-image: none;
	list-style-position: outside;
	list-style-type: none;
	margin: 0px;
	padding: 0px;
}

@agent ie {
	af|navigationPane-choice::dropdown-panel-content {
		display: inline-block;
	}
}

af|navigationPane-bar::access-key,
af|navigationPane-buttons::access-key,
af|navigationPane-choice::access-key,
af|navigationPane-list::access-key,
af|navigationPane-tabs::access-key{
	-tr-rule-ref: selector(".AFFormAccessKeyStyle:alias");
}
af|navigationPane-bar::icon-style,
af|navigationPane-buttons::icon-style,
af|navigationPane-choice::icon-style,
af|navigationPane-list::icon-style,
af|navigationPane-tabs::icon-style{
	padding-right: 5px;
	vertical-align: middle;
	border: 0px;
}

/* style for navItem's icon when going rtl*/
af|navigationPane-bar::icon-style:rtl,
af|navigationPane-buttons::icon-style:rtl,
af|navigationPane-choice::icon-style:rtl,
af|navigationPane-list::icon-style:rtl,
af|navigationPane-tabs::icon-style:rtl{
	padding-left: 5px;
	vertical-align: middle;
	border: 0px;
}

/* cell for a background image separator icon */
af|navigationPane-buttons::separator-icon-style,
af|navigationPane-bar::separator-icon-style {
	width: 2px;
	height: 17px;
	margin-left: 6px;
	margin-right: 6px;
}

/* Use a text icon for the separator icon in the simple skin */
af|navigationPane-buttons::separator-icon,
af|navigationPane-bar::separator-icon {
	content: "|";
}

/* nav pane links are considered 'global links' */
af|navigationPane-buttons::link,
af|navigationPane-bar::link {
	-tr-rule-ref: selector(".AFGlobalLink:alias");
	text-decoration: none;
	white-space: nowrap;
}

af|navigationPane-list::link {
	-tr-rule-ref: selector(".AFGlobalLink:alias");
	text-decoration: none;
	padding-top: 3px;
	padding-bottom: 3px;
	display: block;
	white-space: nowrap;
}

af|navigationPane-choice::link {
	-tr-rule-ref: selector(".AFTextBackground:alias");
	padding: 2px;
	-tr-rule-ref: selector(".AFGlobalLink:alias");
	-tr-rule-ref: selector(".AFDefaultFont:alias");
	vertical-align:baseline;
	-tr-rule-ref: selector(".AFStartTextAlign:alias");
	text-decoration: none;
	white-space: nowrap;
	display: block;
}

af|navigationPane-bar::link:selected,
af|navigationPane-buttons::link:selected,
af|navigationPane-list::link:selected {
	font-weight: bold;
}

af|navigationPane-choice::link:selected {
	font-weight: bold;
	padding: 2px;
}

af|navigationPane-bar::link:hover,
af|navigationPane-buttons::link:hover,
af|navigationPane-list::link:hover {
	text-decoration: underline;
}

af|navigationPane-bar::link:disabled,
af|navigationPane-buttons::link:disabled,
af|navigationPane-list::link:disabled {
	-tr-rule-ref: selector(".AFGlobalLinkDisabled:alias");
}

af|navigationPane-choice::link:disabled {
	-tr-rule-ref: selector(".AFGlobalLinkDisabled:alias");
	padding: 2px;
}

af|navigationPane-bar::link:disabled:hover,
af|navigationPane-buttons::link:disabled:hover,
af|navigationPane-list::link:disabled:hover {
	text-decoration: none;
}

af|navigationPane-list::bullet {
	width: 17px;
	vertical-align: middle;
	background-image: url('/afr/status_bullet.png');
	background-position: center center;
	background-repeat: no-repeat
}

af|navigationPane-choice::label {
	-tr-rule-ref: selector(".AFLabelTextForeground:alias");
	margin-right: 5px;
}

af|navigationPane-choice:disabled::label {
	-tr-rule-ref: selector(".AFLabelTextForegroundDisabled:alias");
}

af|navigationPane-choice::label:rtl {
	margin-left: 5px;
}

af|navigationPane-choice::dropdown-cell {
	border: 1px solid #000000;
	font-size: 5px;
}

@agent ie {
	af|navigationPane-choice::dropdown-cell {
		font-size: 8px;
	}
}
@agent webkit {
	af|navigationPane-choice::dropdown-cell {
		display: inline-block;
	}
}

/* Dropdown button style for the anchor - includes image and sizing
   Image width is 7px, +1px for left border, +1px for right border */
af|navigationPane-choice::dropdown-icon-style {
	-tr-rule-ref: selector(".AFClickableImageAnchor:alias");
	background-image: url('/afr/spinbox_arrow_dn.png');
	background-position: center;
	font-size: 5px;
	padding: 0px 9px 0px 0px;
	cursor: default;
}
@agent ie {
	af|navigationPane-choice::dropdown-icon-style {
		padding-right: 11px;
	}
}
@agent webkit {
	af|navigationPane-choice::dropdown-icon-style {
		display: inline-block;
		height: 5px;
	}
}

/* Dropdown button style for the anchor - image changes on hover */
af|navigationPane-choice::dropdown-icon-style:active,
af|navigationPane-choice::dropdown-icon-style:hover {
	cursor: default;
}

/* Icon hook for users to replace dropdown-icon-style with another img or text */
af|navigationPane-choice::dropdown-icon {
	content: inhibit;
}

/* Private-can be public
 * Styles the popup list
 */
af|navigationPane-choice::dropdown-panel {
	-tr-rule-ref: selector(".AFTextBackground:alias");
	padding:1px;
}
/* Private-can be public
 * Styles the popup in scrollable mode. the item
 * number threshhold specifies how many items
 * should cause the scroll bar to appear. The height
 * should roughly allow 15 items in the current style
 */
af|navigationPane-choice::dropdown-panel-scroll {
	-tr-rule-ref: selector(".AFTextBackground:alias");
	height:265px;
	overflow:auto;
	padding:1px;
	-tr-item-number-threshold:15;
}

/* style for navigationPane when hint="tabs"
   -tr-tab-bar-height can be used in page layouts, consumed by managed-beans through EL so you don't
   need to hard-code dimensions in your pages which may vary depending on the skin being used. */
af|navigationPane-tabs {
	-tr-tab-bar-height: 2em; /* height of tab bars (used in page template managed-beans) */
	/*
   We tack on a "font-size:small" onto af|navigationPane-tabs.  This way, "em" units
   on dimensions will always resolve to a consistent number of pixels by the browser no matter
   what the font-size is set to on the parent element of the navigationPane.
  */
	font-size: small;
	width: 100%;
	overflow: hidden;
	position: relative;
}

/* private - for the screen reader mode
 * In screen reader mode overflow property should be visible and overflow
 * feature will be suppressed.
 */
af|navigationPane-tabs:screenReader {
	overflow: visible;
}

/* style for navigationPane when hint="tabs" */
af|navigationPane-tabs::header {
	overflow: hidden;
}

/* private - for the screen reader mode
 * In screen reader mode overflow property should be visible and overflow
 * feature will be suppressed.
 */
af|navigationPane-tabs:screenReader::header {
	overflow: visible;
}
af|navigationPane-bar::start-overflow-icon,
af|navigationPane-bar::end-overflow-icon  {
	content: inhibit;
}

/* end navigationPane */

/* breadcrumb styles */
/* root style class for breadCrumbs component */
af|breadCrumbs {
	white-space: nowrap;
	overflow: hidden;
	width: 100%;
	-tr-show-last-item: true;
	display: block;
	position: relative;
	min-width: 50px;
	min-height: 22px;
}

/* The foll. browser specific styles override styles
 defined in base-desktop.xss */

@agent gecko,webkit {
	af|breadCrumbs {
		display:block;
	}
	af|breadCrumbs af|breadCrumbs::body {
		display:block;
	}
}

af|breadCrumbs::access-key{
	-tr-rule-ref: selector(".AFFormAccessKeyStyle:alias");
}

af|breadCrumbs::icon-style{
	padding-right: 5px;
	vertical-align: middle;
	border: 0px;
}

af|breadCrumbs::icon-style:rtl{
	padding-left: 5px;
	vertical-align: middle;
	border: 0px;
}

/* the > separator */
af|breadCrumbs::separator {
	cursor: default;
	-tr-rule-ref: selector(".AFLinkForeground:alias");
}

af|breadCrumbs::separator-icon {
	content: ' > ';
}

/* each step is a link, no diferentiation for selected */
af|breadCrumbs::step {
	cursor: pointer;
	-tr-rule-ref: selector(".AFLinkForeground:alias");
	text-decoration: none;
	white-space: nowrap;
}

af|breadCrumbs::step:hover {
	text-decoration:underline;
}

af|breadCrumbs::body {
	-tr-rule-ref: selector(".AFFloatStart:alias");
}

af|breadCrumbs::step:disabled {
	-tr-rule-ref: selector(".AFTextForeground:alias");
	cursor: default;
	text-decoration: none;
}

af|breadCrumbs::overflow-indicator {
	display:none;

	position:absolute;
	left:0px;
	top:0px;
	z-index:2;

	width: 16px;
	min-height: 16px;
	/*height: 100%;*/
	background-image: url("/afr/breadcrumb_of_n.png");
	background-repeat: no-repeat;
	background-position: center center;
}

af|breadCrumbs::overflow-indicator:rtl {
	left: auto;
	right: 0px;
}

/* Icon hook for users to replace overflow-indicator with another img or text */
af|breadCrumbs::overflow-icon {
	content: inhibit;
}

/* padding for the breadCrumbs overflow panel */
af|breadCrumbs::overflow-container {
	padding:5px;
}

af|breadCrumbs::overflow-indicator:hover {
	background-image: url("/afr/breadcrumb_overflow_mo.png");
}

af|breadCrumbs::overflow-indicator:depressed {
	background-image: url("/afr/breadcrumb_overflow_md.png");
}

/*****  Start: New Train Styles *****/
/* Train Alias-es */
.AFTrainDefault:alias
{
	-tr-rule-ref: selector(".AFDefaultFont:alias");
	-tr-visible-stop-count: 6;
}

/* top level style class for the train component. The property to set the number
   of visible stops in a train is -tr-visible-stop-count. */
af|train {
	-tr-rule-ref: selector(".AFTrainDefault:alias");
	margin-left:  auto;
	margin-right: auto;
	-tr-visible-stop-count:6;
	overflow-x:   hidden;
	overflow-y:   auto;
	min-width:    100px;
	min-height:   16px;
	position: relative;
}
/* styles the body of the train including the start and end overflow indicators */
af|train::body, af|train-vertical::body {
	float:left;
	position: relative;
}

af|train::body:rtl, af|train-vertical::body:rtl {
	float:right;
}

/*
  private - For overflow, everything except the little overflow arrow images are private

  When there is overflow the overflow-body (e.g. tab-boundary) should have a padding
  to make room for the overflow icons
*/
af|breadCrumbs:start-overflow::body:ltr,
af|navigationPane-tabs::header:start-overflow af|navigationPane-tabs::body:ltr,
af|navigationPane-tabs::header:end-overflow af|navigationPane-tabs::body:rtl,
af|navigationPane-bar:start-overflow af|navigationPane-bar::body:ltr,
af|navigationPane-bar:end-overflow af|navigationPane-bar::body:rtl,
af|panelTabbed::header:start-overflow af|panelTabbed::tab-boundary:ltr,
af|panelTabbed::header:end-overflow af|panelTabbed::tab-boundary:rtl,
af|panelTabbed::footer:start-overflow af|panelTabbed::tab-boundary:ltr,
af|panelTabbed::footer:end-overflow af|panelTabbed::tab-boundary:rtl,
af|train:start-overflow::body:ltr,
af|train:end-overflow::body:rtl {
	padding-left: 16px;
}

af|breadCrumbs:start-overflow::body:rtl,
af|navigationPane-tabs::header:end-overflow af|navigationPane-tabs::body:ltr,
af|navigationPane-tabs::header:start-overflow af|navigationPane-tabs::body:rtl,
af|navigationPane-bar:end-overflow af|navigationPane-bar::body:ltr,
af|navigationPane-bar:start-overflow af|navigationPane-bar::body:rtl,
af|panelTabbed::header:end-overflow af|panelTabbed::tab-boundary:ltr,
af|panelTabbed::header:start-overflow af|panelTabbed::tab-boundary:rtl,
af|panelTabbed::footer:end-overflow af|panelTabbed::tab-boundary:ltr,
af|panelTabbed::footer:start-overflow af|panelTabbed::tab-boundary:rtl,
af|train:end-overflow::body:ltr,
af|train:start-overflow::body:rtl {
	padding-right: 16px;
}

af|train-vertical:start-overflow af|train-vertical::body {
	padding-top: 22px;
}

af|train-vertical:end-overflow af|train-vertical::body {
	padding-bottom: 22px;
}

af|breadCrumbs::content,
af|navigationPane-tabs::content,
af|navigationPane-bar::content,
af|toolbar::content,
af|train::content {
}

/* private - the element that identifies and contains the content that doesn't need to be overflown;
             the content that fits in the space to be shown to the user */
af|panelTabbed::viewable-tabs {
}

/* The div containing the overflow indicator button (if needed) to pull up the overflow items popup
   for the component. */
af|navigationPane-tabs::start-overflow-indicator,
af|panelTabbed::start-overflow-indicator,
af|train::start-overflow-indicator,
af|train-vertical::top-overflow-indicator,
af|navigationPane-tabs::end-overflow-indicator,
af|panelTabbed::end-overflow-indicator,
af|train::end-overflow-indicator,
af|train-vertical::bottom-overflow-indicator,
af|toolbar::overflow-indicator,
af|menuBar::overflow-indicator {
	display: none;
	position: absolute;
	width: 15px;
	height: 18px;
	top: 50%;
	margin-top: -9px;
	background-repeat: no-repeat;
	background-position: center center;
}

af|navigationPane-bar::start-overflow-indicator,
af|navigationPane-bar::end-overflow-indicator {
	display: none;
	position: absolute;
	width: 15px;
	height: 18px;
	top: 50%;
	margin-top: -11px;
	background-repeat: no-repeat;
	background-position: center center;
}

af|navigationPane-tabs::start-overflow-indicator,
af|navigationPane-tabs::end-overflow-indicator,
af|panelTabbed::header af|panelTabbed::start-overflow-indicator,
af|panelTabbed::header af|panelTabbed::end-overflow-indicator {
	top: auto;
	bottom: 50%;
	margin-top: 0px;
	margin-bottom: -9px;
}


/* public - For overflow, everything except the little overflow arrow images are private */
af|navigationPane-tabs::start-overflow-indicator:ltr,
af|navigationPane-tabs::end-overflow-indicator:rtl,
af|navigationPane-bar::start-overflow-indicator:ltr,
af|navigationPane-bar::end-overflow-indicator:rtl,
af|panelTabbed::start-overflow-indicator:ltr,
af|panelTabbed::end-overflow-indicator:rtl,
af|train::start-overflow-indicator:ltr,
af|train::end-overflow-indicator:rtl,
af|toolbar::overflow-indicator:rtl,
af|menuBar::overflow-indicator:rtl {
	-tr-rule-ref: selector(".AFOverflowImageHorizontalStart:alias");
}

af|navigationPane-tabs::end-overflow-indicator:ltr,
af|navigationPane-tabs::start-overflow-indicator:rtl,
af|navigationPane-bar::end-overflow-indicator:ltr,
af|navigationPane-bar::start-overflow-indicator:rtl,
af|panelTabbed::end-overflow-indicator:ltr,
af|panelTabbed::start-overflow-indicator:rtl,
af|train::end-overflow-indicator:ltr,
af|train::start-overflow-indicator:rtl,
af|toolbar::overflow-indicator:ltr,
af|menuBar::overflow-indicator:ltr {
	-tr-rule-ref: selector(".AFOverflowImageHorizontalEnd:alias");
}

af|navigationPane-tabs::start-overflow-indicator:hover:ltr,
af|navigationPane-tabs::end-overflow-indicator:hover:rtl,
af|navigationPane-bar::start-overflow-indicator:hover:ltr,
af|navigationPane-bar::end-overflow-indicator:hover:rtl,
af|panelTabbed::start-overflow-indicator:hover:ltr,
af|panelTabbed::end-overflow-indicator:hover:rtl,
af|train::start-overflow-indicator:hover:ltr,
af|train::end-overflow-indicator:hover:rtl,
af|toolbar::overflow-indicator:hover:rtl,
af|menuBar::overflow-indicator:hover:rtl {
	-tr-rule-ref: selector(".AFOverflowImageHorizontalStartHover:alias");
}

af|navigationPane-tabs::start-overflow-indicator:depressed:ltr,
af|navigationPane-tabs::end-overflow-indicator:depressed:rtl,
af|navigationPane-bar::start-overflow-indicator:depressed:ltr,
af|navigationPane-bar::end-overflow-indicator:depressed:rtl,
af|panelTabbed::start-overflow-indicator:depressed:ltr,
af|panelTabbed::end-overflow-indicator:depressed:rtl,
af|train::start-overflow-indicator:depressed:ltr,
af|train::end-overflow-indicator:depressed:rtl,
af|toolbar::overflow-indicator:depressed:rtl,
af|menuBar::overflow-indicator:depressed:rtl {
	-tr-rule-ref: selector(".AFOverflowImageHorizontalStartDepressed:alias");
}

af|navigationPane-tabs::end-overflow-indicator:hover:ltr,
af|navigationPane-tabs::start-overflow-indicator:hover:rtl,
af|navigationPane-bar::end-overflow-indicator:hover:ltr,
af|navigationPane-bar::start-overflow-indicator:hover:rtl,
af|panelTabbed::end-overflow-indicator:hover:ltr,
af|panelTabbed::start-overflow-indicator:hover:rtl,
af|train::end-overflow-indicator:hover:ltr,
af|train::start-overflow-indicator:hover:rtl,
af|toolbar::overflow-indicator:hover,
af|menuBar::overflow-indicator:hover {
	-tr-rule-ref: selector(".AFOverflowImageHorizontalEndHover:alias");
}

af|navigationPane-tabs::end-overflow-indicator:depressed:ltr,
af|navigationPane-tabs::start-overflow-indicator:depressed:rtl,
af|navigationPane-bar::end-overflow-indicator:depressed:ltr,
af|navigationPane-bar::start-overflow-indicator:depressed:rtl,
af|panelTabbed::end-overflow-indicator:depressed:ltr,
af|panelTabbed::start-overflow-indicator:depressed:rtl,
af|train::end-overflow-indicator:depressed:ltr,
af|train::start-overflow-indicator:depressed:rtl,
af|toolbar::overflow-indicator:depressed,
af|menuBar::overflow-indicator:depressed {
	-tr-rule-ref: selector(".AFOverflowImageHorizontalEndDepressed:alias");
}

af|train-vertical::top-overflow-indicator {
	-tr-rule-ref: selector(".AFOverflowImageVerticalStart:alias");
	top: 0px;
	left: 0px;
	bottom: auto;
	right: auto;
}

af|train-vertical::bottom-overflow-indicator {
	-tr-rule-ref: selector(".AFOverflowImageVerticalEnd:alias");
	bottom: 0px;
	left: 0px;
	top: auto;
	right: auto;
}

/*
  private - For overflow, everything except the little overflow arrow images are private

  start-overflow and end-overflow pseudo-classes indicate
  that there is overflow on the start or end side of the component
  (start side is the left side in ltr and the right side in rtl)
  when there is overflow on a side the indicator should become visible
*/
af|breadCrumbs:start-overflow::overflow-indicator,
af|menuBar:end-overflow::overflow-indicator,
af|navigationPane-tabs::header:start-overflow af|navigationPane-tabs::start-overflow-indicator,
af|navigationPane-tabs::header:end-overflow af|navigationPane-tabs::end-overflow-indicator,
af|navigationPane-bar:start-overflow af|navigationPane-bar::start-overflow-indicator,
af|navigationPane-bar:end-overflow af|navigationPane-bar::end-overflow-indicator,
af|panelTabbed::header:start-overflow af|panelTabbed::start-overflow-indicator,
af|panelTabbed::header:end-overflow af|panelTabbed::end-overflow-indicator,
af|panelTabbed::footer:start-overflow af|panelTabbed::start-overflow-indicator,
af|panelTabbed::footer:end-overflow af|panelTabbed::end-overflow-indicator,
af|toolbar:end-overflow::overflow-indicator,
af|train:start-overflow::start-overflow-indicator,
af|train:end-overflow::end-overflow-indicator,
af|train-vertical:start-overflow::top-overflow-indicator,
af|train-vertical:end-overflow::bottom-overflow-indicator {
	display: block;
}

/*
  private - For overflow, everything except the little overflow arrow images are private

  overflow containers should not be visible when they are inside the component
  they will get placed inside a popup which is outside of the component
  so when the container is popped up these style rules don't apply anymore
*/
af|breadCrumbs af|breadCrumbs::overflow-container,
af|navigationPane-tabs af|navigationPane-tabs::overflow-container,
af|navigationPane-bar af|navigationPane-bar::overflow-container,
af|panelTabbed af|panelTabbed::overflow-container,
af|toolbar af|toolbar::overflow-container,
af|menuBar af|menuBar::overflow-container,
af|train af|train::overflow-container,
af|train-vertical af|train-vertical::overflow-container {
	display: none;
}

/* When popped up (e.g. when not a direct child of the normal root element, the tab overflow
   containers are visible and are supposed to have padding. */
af|navigationPane-tabs::overflow-container,
af|panelTabbed::overflow-container {
	padding: 8px;
}

af|navigationPane-tabs::overflow-container .AFOverflowElement,
af|panelTabbed::overflow-container .AFOverflowElement {
	display: block;
	padding: 2px;
	text-decoration: none;
}

af|panelTabbed::overflow-container .AFOverflowElement:hover {
	text-decoration: underline;
}

/* Disabled overflow item looks the same, but no underline on hover */
af|panelTabbed::overflow-container .AFOverflowElementDisabled{
	display: block;
	padding: 2px;
	text-decoration: none;
}

af|navigationPane-tabs::overflow-container .AFOverflowElement af|navigationPane-tabs::tab-link:active:hover,
af|panelTabbed::overflow-container .AFOverflowElement:active:hover {
	-tr-rule-ref: selector(".AFActiveLinkForeground:alias");
}

af|navigationPane-tabs::overflow-container .AFOverflowElement af|navigationPane-tabs::tab-link:disabled:active:hover {
	-tr-rule-ref: selector(".AFLinkDisabled:alias");
}

af|menuBar::overflow-container,
af|toolbar::overflow-container {
	-tr-rule-ref: selector(".AFTextBackground:alias");
	padding:4px;
}

/* Styles the container which encloses the train content (excluding the overflow indicators)
but includes the parent train elements.*/
af|train::content, af|train-vertical::content {
	padding-top:2px;
	padding-bottom:2px;
	padding-left:1px;
	padding-right:1px;
	text-align:center;
}

/*
 *  parent train Styles
 */
/* block that encloses all parent-start and parent-end elements */
af|train::parent-start,
af|train::parent-end {
	vertical-align:top;
}
/* private style */
af|train::parent-start-cell,
af|train::parent-start-cell {
	width:100%;
	height:100%;
}
/* cell that displays the parent start icon*/
af|train::parent-start-icon-cell {
	-tr-rule-ref: selector(".AFEndTextAlign:alias");
}
/* cell that displays the parent end icon*/
af|train::parent-end-icon-cell {
	-tr-rule-ref: selector(".AFStartTextAlign:alias");
}
/* content cell in the beginning of the train, to display the parent process
  name */
af|train::parent-start-content {
	-tr-rule-ref: selector(".AFEndTextAlign:alias");
	padding-left:1px;
	padding-right:1px;
}
/* content block in the end of the train, to display the parent process name */
af|train::parent-end-content {
	vertical-align:top;
	padding-left:1px;
	padding-right:1px;
	-tr-rule-ref: selector(".AFStartTextAlign:alias");
}

/*
 *  join styles
 */
/* for joins between stops */
af|train::join {
	min-width:20px;
	width:100%;
	height: 1px;
}
/* cell that displays the join */
af|train::join-cell {
	width:50%;
}
/* join in disabled state. */
af|train::join:disabled {
	-tr-rule-ref: selector(".AFDarkBackground:alias");
}
/* Join in unvisited enabled state. */
af|train::join:unvisited {
	-tr-rule-ref: selector(".AFVeryDarkBackground:alias");

}
/* Join in visited enabled state. Should be af|train::join:visited.
    Workaround for a skinning bug - 5558004. */
af|train::join:train-visited {
	-tr-rule-ref: selector(".AFVisitedLinkBackground:alias");
}
/*  Styles the start and end overflow indicators. The indicators are specified using a
    background-image. */
af|train::start-overflow-indicator,
af|train::end-overflow-indicator,
af|train-vertical::top-overflow-indicator,
af|train-vertical::bottom-overflow-indicator{
	top: 0;
	margin-top: 0;
}

/*
 * stop - cell, content, icon styles
 */
/* Container for all the stop elements */
af|train::stop {
	vertical-align:top;
}
/* private */
af|train::stop-cell {
	width:100%;
	height:100%;
}
af|train::stop-icon-cell {
	width:13px;
	height:13px;
}
af|train::stop-icon-selected {
	background-image: url('/afr/mTrain_active.png');
	background-repeat: no-repeat;
	position:absolute;
	width:13px;
	height:13px;
	text-decoration:none;
}
@agent ie and (version: 7.0) {
	af|train::stop-icon-selected:ltr {
		margin-left: -6px;
	}
	af|train::stop-icon-selected:rtl {
		margin-right: -6px;
	}
}
@agent gecko {
	af|train::stop-icon-selected:ltr {
		margin-left: -6px;
	}
	af|train::stop-icon-selected:rtl {
		margin-right: -6px;
	}
}
af|train::stop-icon-disabled {
	background-image: url('/afr/mTrain_disabled.png');
	background-repeat: no-repeat;
	position:absolute;
	width:13px;
	height:13px;
	text-decoration:none;
}
@agent ie and (version: 7.0) {
	af|train::stop-icon-disabled:ltr {
		margin-left: -6px;
	}
	af|train::stop-icon-disabled:rtl {
		margin-right: -6px;
	}
}
@agent gecko {
	af|train::stop-icon-disabled:ltr {
		margin-left: -6px;
	}
	af|train::stop-icon-disabled:rtl {
		margin-right: -6px;
	}
}
af|train::stop-icon-unvisited {
	background-image: url('/afr/mTrain_unvisited_n.png');
	background-repeat: no-repeat;
	cursor:pointer;
	position:absolute;
	width:13px;
	height:13px;
	text-decoration:none;
}
af|train::stop-icon-unvisited:hover {
	background-image: url('/afr/mTrain_unvisited_mo.png');
	background-repeat: no-repeat;
	position:absolute;
	width:13px;
	height:13px;
	text-decoration:none;
}
af|train::stop-icon-unvisited:active {
	background-image: url('/afr/mTrain_unvisited_md.png');
	background-repeat: no-repeat;
	position:absolute;
	width:13px;
	height:13px;
	text-decoration:none;
}
@agent ie and (version: 7.0) {
	af|train::stop-icon-unvisited:ltr {
		margin-left: -6px;
	}
	af|train::stop-icon-unvisited:rtl {
		margin-right: -6px;
	}
}
@agent gecko {
	af|train::stop-icon-unvisited:ltr {
		margin-left: -6px;
	}
	af|train::stop-icon-unvisited:rtl {
		margin-right: -6px;
	}
}
af|train::stop-icon-visited {
	background-image: url('/afr/mTrain_visited_n.png');
	background-repeat: no-repeat;
	cursor:pointer;
	position:absolute;
	width:13px;
	height:13px;
	text-decoration:none;
}
af|train::stop-icon-visited:hover {
	height:13px;
	width:13px;
	background-image: url('/afr/mTrain_visited_mo.png');
	background-repeat: no-repeat;
	position:absolute;
	text-decoration:none;
}
af|train::stop-icon-visited:active {
	height:13px;
	width:13px;
	background-image: url('/afr/mTrain_visited_md.png');
	background-repeat: no-repeat;
	position:absolute;
	text-decoration:none;
}
@agent ie and (version: 7.0) {
	af|train::stop-icon-visited:ltr {
		margin-left: -6px;
	}
	af|train::stop-icon-visited:rtl {
		margin-right: -6px;
	}
}
@agent gecko {
	af|train::stop-icon-visited:ltr {
		margin-left: -6px;
	}
	af|train::stop-icon-visited:rtl {
		margin-right: -6px;
	}
}
/* content block that displays the stop name */
af|train::stop-content {
	padding-top:2px;
	padding-left:5px;
	padding-right:5px;
	padding-bottom:2px;
	text-align:center;
}
/* content block that displays the selected stop name */

af|train::stop-content:selected {
	font-weight:bold;
	-tr-rule-ref: selector(".AFTextForeground:alias");
	text-align:center;
	cursor:default;
}
af|train::stop-content:required {
	-tr-rule-ref: selector(".AFRequiredIconStyle");
}
/* link for a stop */
af|train::stop-link {
	cursor:pointer;
	text-decoration:none;
}
/* link for the selected stop */
af|train::stop-link:selected {
	-tr-rule-ref: selector(".AFTextForeground:alias");
	cursor:default;
}
/* link for a disabled stop. Should be af|train::stop-link:disabled. */
af|train::stop-link:disabled {
	-tr-rule-ref: selector(".AFButtonForegroundDisabled:alias");
	cursor:default;
}
/* link for an unvisited enabled stop */
af|train::stop-link:unvisited {
	-tr-rule-ref: selector(".AFLinkForeground:alias");
}
/* link for a visited enabled stop. Should be af|train::stop-link:visited.
    Workaround for a skinning bug - 5558004. */
af|train::stop-link:train-visited {
	-tr-rule-ref: selector(".AFVisitedLinkForeground:alias");
}

/*
 *  stop alert icons
 */
af|train::stop-icon-error{
	background-image:url('/afr/alertModifier_error.png');
	background-repeat:no-repeat;
	cursor:pointer;
	position:absolute;
	width:7px;
	height:7px;
	margin-top:6px;
	margin-left:0px;
	text-decoration:none;
}
af|train::stop-icon-warning{
	background-image:url('/afr/alertModifier_warning.png');
	background-repeat:no-repeat;
	cursor:pointer;
	position:absolute;
	width:7px;
	height:7px;
	margin-top:6px;
	margin-left:0px;
	text-decoration:none;
}
af|train::stop-icon-confirmation{
	background-image:url('/afr/alertModifier_complete.png');
	background-repeat:no-repeat;
	cursor:pointer;
	position:absolute;
	width:7px;
	height:7px;
	margin-top:6px;
	margin-left:0px;
	text-decoration:none;
}
af|train::stop-icon-information{
	background-image:url('/afr/alertModifier_information.png');
	background-repeat:no-repeat;
	cursor:pointer;
	position:absolute;
	width:7px;
	height:7px;
	margin-top:6px;
	margin-left:0px;
	text-decoration:none;
}


/* vertical train styles */
/* vertical is used as a hint on the train rather than a pseudo-class. This is
  so that we can reuse the skin selectors for af|train, defined in Trinidad.
  Also using a pseudo-class :vertical for the af|train causes myriad issues
  with styles bleeding into one another. */
af|train-vertical {
	-tr-rule-ref: selector(".AFTrainDefault:alias");
	height: 100%;
	overflow: hidden;
	position: relative;
}

@agent ie {
	af|train-vertical {
		height:auto;
	}
}

/*
 *  parent train icons
 */
/* for cell that displays the parent-start-icon and the parent-end-icon
    respectively */
af|train-vertical::parent-start-icon-cell,
af|train-vertical::parent-end-icon-cell {
	text-align:center;
}
/* for the cell that displays the label of the parent train at the
   beginning of the train. */
af|train-vertical::parent-start-content {
	-tr-rule-ref: selector(".AFStartTextAlign:alias");
	padding-left:1px;
	padding-right:1px;
}
/* for the cell that displays the label of the parent train at the end of the
    vertical train.*/
af|train-vertical::parent-end-content {
	-tr-rule-ref: selector(".AFStartTextAlign:alias");
	padding-left:1px;
	padding-right:1px;
}
/*
 *  join styles
 */
/* for joins between stops in vertical train */
af|train-vertical::join {
	width:1px;
	height:10px;
	max-width:1px;
	min-height:10px;
	background-color:inherit;
	background-repeat:repeat;
}
/* for a join in disabled state, in vertical train. */
af|train-vertical::join:disabled {
	-tr-rule-ref: selector(".AFMediumBackground:alias");
	background-repeat:repeat;
}
/* for a join in unvisited enabled state, in the vertical train */
af|train-vertical::join:unvisited {
	-tr-rule-ref: selector(".AFVeryDarkBackground:alias");
	background-repeat:repeat;
}
/* for a join in visited enabled state, in the vertical train. Should be
    af|train-vertical::join:visited. Workaround for a skinning bug - 5558004. */
af|train-vertical::join:train-visited {
	-tr-rule-ref: selector(".AFVisitedLinkBackground:alias");
	background-repeat:repeat;
}
/* spacers used to center a join. Only used in vertical train */
af|train-vertical::join-spacer {
	width:50%;
}

/*
 *  stop - cell, icon, content styles
 */
/* Styles the row displays the entire stop info. Only used in the vertical layout. */
af|train-vertical::stop {
}
/* private */
af|train-vertical::stop-cell {
	width:100%;
	height:100%;
}
/* for the cell that displays the stop icon. */
af|train-vertical::stop-icon-cell {
	height: 13px;
	width: 13px;
}
af|train-vertical::stop-icon-selected {
	height:13px;
	width:13px;
	background-image:url('/afr/mTrain_active.png');
	background-repeat:no-repeat;
	position:absolute;
	text-decoration:none;
}
@agent ie and (version: 7.0) {
	af|train-vertical::stop-icon-selected:ltr {
		margin-left: -6px;
	}
	af|train-vertical::stop-icon-selected:rtl {
		margin-right: -6px;
	}
}
@agent gecko {
	af|train-vertical::stop-icon-selected:ltr {
		margin-left: -6px;
	}
	af|train-vertical::stop-icon-selected:rtl {
		margin-right: -6px;
	}
}
@agent webkit {
	af|train-vertical::join-spacer {
		width: 6px;
	}
}
af|train-vertical::stop-icon-disabled {
	height:13px;
	width:13px;
	background-image:url('/afr/mTrain_disabled.png');
	background-repeat:no-repeat;
	position:absolute;
	text-decoration:none;
}
@agent ie and (version: 7.0) {
	af|train-vertical::stop-icon-disabled:ltr {
		margin-left: -6px;
	}
	af|train-vertical::stop-icon-disabled:rtl {
		margin-right: -6px;
	}
}
@agent gecko {
	af|train-vertical::stop-icon-disabled:ltr {
		margin-left: -6px;
	}
	af|train-vertical::stop-icon-disabled:rtl {
		margin-right: -6px;
	}
}
af|train-vertical::stop-icon-visited {
	height:13px;
	width:13px;
	background-image:url('/afr/mTrain_visited_n.png');
	background-repeat:no-repeat;
	cursor:pointer;
	position:absolute;
	text-decoration:none;
}
af|train-vertical::stop-icon-visited:hover {
	background-image:url('/afr/mTrain_visited_mo.png');
}
af|train-vertical::stop-icon-visited:active {
	background-image:url('/afr/mTrain_visited_md.png');
}
@agent ie and (version: 7.0) {
	af|train-vertical::stop-icon-visited:ltr {
		margin-left: -6px;
	}
	af|train-vertical::stop-icon-visited:rtl {
		margin-right: -6px;
	}
}
@agent gecko {
	af|train-vertical::stop-icon-visited:ltr {
		margin-left: -6px;
	}
	af|train-vertical::stop-icon-visited:rtl {
		margin-right: -6px;
	}
}
af|train-vertical::stop-icon-unvisited {
	height:13px;
	width:13px;
	background-image:url('/afr/mTrain_unvisited_n.png');
	background-repeat:no-repeat;
	cursor:pointer;
	position:absolute;
	text-decoration:none;
}
af|train-vertical::stop-icon-unvisited:hover {
	background-image:url('/afr/mTrain_unvisited_mo.png');
}
af|train-vertical::stop-icon-unvisited:active {
	background-image:url('/afr/mTrain_unvisited_md.png');
}
@agent ie and (version: 7.0) {
	af|train-vertical::stop-icon-unvisited:ltr {
		margin-left: -6px;
	}
	af|train-vertical::stop-icon-unvisited:rtl {
		margin-right: -6px;
	}
}
@agent gecko {
	af|train-vertical::stop-icon-unvisited:ltr {
		margin-left: -6px;
	}
	af|train-vertical::stop-icon-unvisited:rtl {
		margin-right: -6px;
	}
}

/* for the cell that displays the label of the stop, in a vertical train. */
af|train-vertical::stop-content{
	max-width: 100px;
	padding: 2px 2px 2px 2px;
	-tr-rule-ref: selector(".AFStartTextAlign:alias");
}
/* for the cell that displays the label of the stop, when the stop is selected &
    in a vertical train. */
af|train-vertical::stop-content:selected{
	font-weight: bold;
	-tr-rule-ref: selector(".AFTextForeground:alias");
	text-decoration: none;
}
af|train-vertical::stop-content:required{
	-tr-rule-ref: selector(".AFRequiredIconStyle");
}
/* for the link that displays the label of the stop, in a vertical train. */
af|train-vertical::stop-link {
	cursor:pointer;
	text-decoration:none;
}
/* for the link that displays the stop label when the stop is selected.*/
af|train-vertical::stop-link:selected{
	cursor:default;
	-tr-rule-ref: selector(".AFTextForeground:alias");
}
/* for the link that displays the stop label when the stop is disabled.*/
af|train-vertical::stop-link:disabled{
	cursor:default;
	-tr-rule-ref: selector(".AFButtonForegroundDisabled:alias");
}
/* for the link that displays the stop label when the stop is unvisited &
    enabled.*/
af|train-vertical::stop-link:unvisited{
	-tr-rule-ref: selector(".AFLinkForeground:alias");
}
/* for the link that displays the stop label when the stop is visited.*/
af|train-vertical::stop-link:train-visited{
	-tr-rule-ref: selector(".AFVisitedLinkForeground:alias");
}
af|train-vertical::stop-icon-error {
	background-image:url('/afr/alertModifier_error.png');
	background-repeat:no-repeat;
	cursor:pointer;
	height:7px;
	width:7px;
	position:absolute;
	text-decoration:none;
	margin-top:6px;
	margin-left:0px;
}
af|train-vertical::stop-icon-warning {
	background-image:url('/afr/alertModifier_warning.png');
	background-repeat:no-repeat;
	cursor:pointer;
	height:7px;
	width:7px;
	position:absolute;
	text-decoration:none;
	margin-top:6px;
	margin-left:0px;
}
af|train-vertical::stop-icon-confirmation {
	background-image:url('/afr/alertModifier_complete.png');
	background-repeat:no-repeat;
	cursor:pointer;
	height:7px;
	width:7px;
	position:absolute;
	text-decoration:none;
	margin-top:6px;
	margin-left:0px;
}
af|train-vertical::stop-icon-information {
	background-image:url('/afr/alertModifier_information.png');
	background-repeat:no-repeat;
	cursor:pointer;
	height:7px;
	width:7px;
	position:absolute;
	text-decoration:none;
	margin-top:6px;
	margin-left:0px;
}

/*****  End: New Train Styles *****/

/** trainButtonBar styles **/
af|trainButtonBar {
}

af|trainButtonBar::button-cell {
	padding-left: 3px;
	padding-right: 3px;
}
af|trainButtonBar::access-key {
	-tr-rule-ref: selector(".AFFormAccessKeyStyle:alias");
}
/* These should match other button components, like commandButton, so
that a person can use the button aliases to change all buttons at once */
af|trainButtonBar::back-button,
af|trainButtonBar::next-button {
	-tr-rule-ref: selector(".AFButtonForeground:alias");
	-tr-rule-ref: selector(".AFButtonBorder:alias");
	-tr-rule-ref: selector(".AFButtonBackground:alias");
}

af|trainButtonBar::back-button:hover,
af|trainButtonBar::next-button:hover {
	-tr-rule-ref: selector(".AFButtonBorderHover:alias");
	-tr-rule-ref: selector(".AFButtonBackgroundHover:alias");
	-tr-rule-ref: selector(".AFButtonForegroundHover:alias");
}

/* purposely put disabled after hover so hover doesn't show up on disabled
and get rid of background-image */
af|trainButtonBar::back-button:disabled,
af|trainButtonBar::next-button:disabled,
af|trainButtonBar::back-button:active:disabled,
af|trainButtonBar::next-button:active:disabled,
af|trainButtonBar::back-button:hover:disabled,
af|trainButtonBar::next-button:hover:disabled {
	-tr-rule-ref: selector(".AFButtonForegroundDisabled:alias");
	-tr-rule-ref: selector(".AFButtonBorderDisabled:alias");
	-tr-rule-ref: selector(".AFButtonBackgroundDisabled:alias");
}

/** end of trainButtonBar styles **/

/* overflow spacer is needed for minimum width of overflowing components in IE */
af|breadCrumbs::overflow-spacer,
af|panelTabbed::overflow-spacer,
af|menuBar::overflow-spacer,
af|toolbar::overflow-spacer,
af|navigationPane-bar::overflow-spacer,
af|train::overflow-spacer,
af|train-vertical::overflow-spacer {
	display: none;
}

@agent ie {
	af|breadCrumbs::overflow-spacer,
	af|menuBar::overflow-spacer,
	af|navigationPane-tabs::overflow-spacer,
	af|navigationPane-bar::overflow-spacer,
	af|panelTabbed::overflow-spacer,
	af|toolbar::overflow-spacer,
	af|train::overflow-spacer,
	af|train-vertical::overflow-spacer {
		width: 120px;
		height: 0px;
		overflow: hidden;
		clear: both;
	}
}
/* end breadcrumb styles */
/*
 * chooseColor styles
 */
/* Public */

/** Public
  * Styles the color swatch on standard color palette buttons
  */
af|chooseColor::button-swatch {
	width:10px;
	height:10px;
	margin-top:1px;
	margin-right:5px;
	margin-left:0;
	-tr-rule-ref: selector(".AFButtonBorderDisabled:alias");
}
/** Public
  * Styles the color swatch on standard color palette buttons in right-to-left mode.
  */
af|chooseColor::button-swatch:rtl {
	margin-right:0;
	margin-left:5px;
}

/** Public
  * Styles the empty color swatch on standard color palette buttons
  */
af|chooseColor::button-swatch:empty {
	background-image:url('/afr/empty-swatch.png');
}

/** Public
  * Styles the standard color palette buttons.
  * Can use this to style background-image on the buttons and font.
  * Available pseudo-classes are the css-2 pseudo-classes available
  * to a button, like :hover.
  */
af|chooseColor::button {
	-tr-rule-ref: selector(".AFButtonForeground:alias");
	-tr-rule-ref: selector(".AFButtonBorder:alias");
	-tr-rule-ref: selector(".AFButtonBackground:alias");
	padding-top: 2px;
	padding-bottom: 1px;
}

/* Private, should be no need to skin this */
af|chooseColor::space-above-button {
	height:2px;
}
/* Private, should be no need to skin this  */
af|chooseColor::space-above-swatch-table {
	height:5px;
}
/* Private, should be no need to skin this  */
af|chooseColor::space-above-custom-swatch-table {
	height:7px;
}
/* Private, TODO make color an alias */
af|chooseColor::lower-swatch-row-wrapper {
	-tr-rule-ref: selector(".AFButtonBorder:alias");
}
/* Public - can change the margin and width/height of color swatch */
af|chooseColor::swatch {
	width:17px;
	height:17px;
	-tr-rule-ref: selector(".AFButtonBorder:alias");
	margin:2px;
	display:block;
	border-radius:0px;
	margin: 1px;
	background-size: cover;
}
/* Public - can change the empty swatch's background-image */
af|chooseColor::swatch:empty {
	background-image:url('/afr/empty-swatch.png');
}
/* Public - Can change swatch cells border */
af|chooseColor::swatch-cell {
	border-width:1px;
	border-style:solid;
	border-color: #FFFFFF;
	background-color:transparent;
}
/* Public */
af|chooseColor::swatch-cell:selected {
	-tr-rule-ref: selector(".AFMediumAccentBackground:alias");
	padding:0px;
}
/** Private  -  Demensions heavily depend on implementation */
af|chooseColor::custom-image-wrapper {
	border-width: 1px;
	-tr-rule-ref: selector(".AFMediumAccentBackground:alias");
	border-style:solid;
	background-image:url('/afr/customcolorpalette.png');
	position:relative;
	/** Must be explicitly specified to make custom dialog work **/
	height:156px;
	/** Must be explicitly specified to make custom dialog work **/
	width:186px;
	overflow:hidden;
}
/* Private, no need to skin */
af|chooseColor::custom-lower-block {
	margin-top:10px;
	width:100%;
}
/** Private (can use .AFLabel:alias to style font )
  * Styles the input label in the custom color picker dialog.
  */
af|chooseColor::custom-label {
	-tr-rule-ref: selector(".AFLabel:alias");
	padding: 3px 8px 0px 0px;
}
/** Private, no need to skin
  * Styles the input label in the custom color picker dialog in right-to-left mode.
  */
af|chooseColor::custom-label:rtl {
	padding: 3px 0px 0px 8px;
}
/** Private  - TODO pull out border color into an alias
  * Styles the edit fields in the popup custom color picker dialog.
  * Size change may impact the overall layout of the dialog.
  */
af|chooseColor::custom-input-content {
	-tr-rule-ref: selector(".AFFormControlContent:alias");
	padding: 1px 2px 1px 3px;
	border: 1px solid #B9B9B4;
	width:50px;
	margin-left:5px;
}
/** Private
  * Styles the edit fields in the popup custom color picker dialog in right-to-left mode.
  * Size change may impact the overall layout of the dialog.
  */
af|chooseColor::custom-input-content:rtl {
	margin-right:5px;
}
/** Private  -  Heavily coupled with rendering implemenation */
af|chooseColor::custom-slider-wrapper {
	position:relative;
	/** Must be explicitly specified to make custom dialog work **/
	height:156px;
	/** Must be explicitly specified to make custom dialog work **/
	width:15px;
}
/** Private  -  Heavily coupled with rendering implemenation */
af|chooseColor::custom-slider {
	border-width: 1px;
	-tr-rule-ref: selector(".AFVeryDarkAccentBackground:alias");
	border-style:solid;
	/** Must be explicitly specified to make custom dialog work **/
	width: 9px;
	/** Must be explicitly specified to make custom dialog work **/
	height: 156px;
	background-image:url('/afr/brightnessslider.png');
}
/** Private  -  can be public */
af|chooseColor::custom-space-before-slider {
	font-size:1px;
	width:5px;
}
/** Private  -  Heavily coupled with rendering implemenation */
af|chooseColor::custom-crosshair {
	position:absolute;
	background-image:url('/afr/crosshairs.png');

	top:0px;
	left:0px;
	z-index:1;
	/** Must be explicitly specified to make custom dialog work **/
	width:22px;
	/** Must be explicitly specified to make custom dialog work **/
	height:18px;
}
/** Private  -  demensions have impact on overall layout */
af|chooseColor::custom-double-swatch-wrapper {
	margin-left:38px;
	margin-right:38px;
	-tr-rule-ref: selector(".AFLightAccentBorder:alias");
	border-width:2px;
	border-style:solid;
	display:block;
}
/** Private  -  demension have impact on overall layout */
af|chooseColor::custom-swatch {
	border:1px solid gray;
	height:25px;
	width:30px;
}
/** Private  - Heavily coupled with rendering implemenation **/
af|chooseColor::custom-slider-thumb {
	position:absolute;
	background-image:url('/afr/slider_thumb_m_n.png');
	font-size:1px;
	left:-2px;
	/** Must be explicitly specified to make custom dialog work **/
	height:9px;
	/** Must be explicitly specified to make custom dialog work **/
	width:14px;
}
af|chooseColor::custom-slider-thumb:rtl {
	background-image:url('/afr/slider_thumb_m_n_rtl.png');
	left: auto;
	right:-2px;
}

/* chooseDate */
/* root style */
af|chooseDate {
	margin :0px 2px;
	padding: 0px 2px;
	-tr-rule-ref: selector(".AFTextBackground:alias");
	border-width: 1px;
	border-style: solid;
	border-color: #B2BEDD;
	cursor: default;
}

af|chooseDate::today {
	-tr-rule-ref: selector(".AFFormControlContentBorder:alias");
}

/* Styles for the month, year selector row padding.
  Also see where chooseDate shares styles with selectOneChoice and
  selectOneSpinbox for the month and year selectors
  8515499: blaf+ actually requires: 7px 0 7px 0, for all browsers
  but this preserves behavior*/
af|chooseDate::month-year-row {
	padding: 8px 0 3px 0;
}
@agent ie{
	af|chooseDate::month-year-row {
		padding: 8px 0 7px 0;
	}
}
af|chooseDate::prev-month-arrow-cell,
af|chooseDate::next-month-arrow-cell:rtl{
	padding: 0px 5px 0px 0px;
}
af|chooseDate::next-month-arrow-cell,
af|chooseDate::prev-month-arrow-cell:rtl{
	padding: 0px 0px 0px 5px;
}
af|chooseDate::year-selector-cell{
	padding-left: 2px;
	padding-right: 0px;
}
af|chooseDate::year-selector-cell:rtl{
	padding-right: 2px;
	padding-left: 0px;
}

af|chooseDate::grid-spacer {
	height:5px;
}
/* Styles for previous/next month arrows */
af|chooseDate::prev-month-arrow,
af|chooseDate::next-month-arrow:rtl {
	width: 8px;
	height: 11px;
	background-image: url('/afr/previous_n.png');
	background-repeat: no-repeat;
	display:block;
}
/* Icon hook for users to replace prev-month-arrow with another img or text */
af|chooseDate::prev-month-arrow-icon,
af|chooseDate::next-month-arrow-icon:rtl {
	content: inhibit;
}

af|chooseDate::next-month-arrow,
af|chooseDate::prev-month-arrow:rtl {
	width: 8px;
	height: 11px;
	background-image: url('/afr/next_n.png');
	background-repeat: no-repeat;
	display:block;
}
/* Icon hook for users to replace next-month-arrow with another img or text */
af|chooseDate::next-month-arrow-icon,
af|chooseDate::prev-month-arrow-icon:rtl {
	content: inhibit;
}
/* chooseDate: Week Header styles */
af|chooseDate::week-header-row {
	-tr-rule-ref: selector(".AFMediumBackground:alias");
	text-align: center;
}
/* Specify spacing for each cell in the week header */
/*8515499: blaf+ actually requires padding: 2px 4px; but this preserves
  appearance */
af|chooseDate::week-header-cell{
	width: 20px;
	padding: 4px 4px;
}
/* Styles for days in the grid : supply default size, font, background
    Individual day types override for border, font color below
    8515499: blaf+ actually requires height: 16px for all browsers
    but this preserves  appearance*/
af|chooseDate::days-row {
	height: 16px;
	-tr-rule-ref: selector(".AFTextBackground:alias");
	font-weight: bold;
	-tr-rule-ref: selector(".AFVerySmallFont:alias");
	text-align:center;
}
@agent ie{
	af|chooseDate::days-row {
		height: 18px;
	}
}

af|chooseDate::days-row:last af|chooseDate::next-month-day,
af|chooseDate::days-row:last af|chooseDate::regular-day {
	padding-bottom: 3px;
}

@agent gecko {
	af|chooseDate::days-row:last {
		height: 19px;
	}
}

/* Styles for grid days in current month, default is to reuse styles from days-row */
af|chooseDate::regular-day{
}

af|chooseDate::regular-day:hover {
	text-decoration: underline;
}

af|chooseDate::regular-day:disabled {
	-tr-rule-ref: selector(".AFVeryDarkAccentForeground:alias");
	text-decoration: none;
}

af|chooseDate::prev-month-day:selected,
af|chooseDate::next-month-day:selected,
af|chooseDate::regular-day:selected,
af|chooseDate::today:selected {
	-tr-rule-ref: selector(".AFDarkBackground:alias");
	-tr-rule-ref: selector(".AFExtraLightTextForeground:alias");
}

af|chooseDate::regular-day:selected:hover {
	-tr-rule-ref: selector(".AFDarkBackground:alias");
	-tr-rule-ref: selector(".AFExtraLightTextForeground:alias");
	text-decoration: underline;
}

af|chooseDate::regular-day:selected:disabled {
	-tr-rule-ref: selector(".AFVeryDarkAccentBackground:alias");
	-tr-rule-ref: selector(".AFExtraLightTextForeground:alias");
	text-decoration: none;
}

/* Previous/Next Month Dates */
af|chooseDate::prev-month-day,
af|chooseDate::next-month-day {
	-tr-rule-ref: selector(".AFDarkForeground:alias");
}

af|chooseDate::prev-month-day:hover,
af|chooseDate::next-month-day:hover {
	text-decoration: underline;
	-tr-rule-ref: selector(".AFDarkForeground:alias");
}

af|chooseDate::prev-month-day:disabled,
af|chooseDate::next-month-day:disabled {
	-tr-rule-ref: selector(".AFVeryDarkAccentForeground:alias");
	text-decoration: none;
}

af|chooseDate::prev-month-day:selected,
af|chooseDate::next-month-day:selected{
	-tr-rule-ref: selector(".AFVeryDarkAccentForeground:alias");
	text-decoration: none;
}
af|chooseDate::prev-month-day:selected:hover,
af|chooseDate::next-month-day:selected:hover{
	-tr-rule-ref: selector(".AFDarkBackground:alias");
	-tr-rule-ref: selector(".AFExtraLightTextForeground:alias");
	text-decoration: underline;
}

af|chooseDate::prev-month-day:selected:disabled,
af|chooseDate::next-month-day:selected:disabled{
	-tr-rule-ref: selector(".AFVeryDarkAccentBackground:alias");
	-tr-rule-ref: selector(".AFExtraLightTextForeground:alias");
	text-decoration: none;
}

/* Today */
af|chooseDate::today {
	-tr-rule-ref: selector(".AFFormControlContentBorder:alias");
	-tr-rule-ref: selector(".AFFormContentBorder:alias");
}

af|chooseDate::today:hover {
	padding: 1px;
	text-decoration: underline;
}

af|chooseDate::today:disabled {
	-tr-rule-ref: selector(".AFDarkAccentForeground:alias");
}

/* Padding for time and timezone selectors in chooseDate
 8515499: blaf+ actually requires padding: 0px 5px 5px 5px
  for both browsers but this preserves previous appearance*/
af|chooseDate::time-selectors-row{
	padding: 0px 5px 2px 5px;
	white-space: nowrap;
}
@agent ie{
	af|chooseDate::time-selectors-row{
		padding: 2px 5px 7px 5px;
	}
}
/*  8515499: blaf+ actually requires padding: 0px 5px 5px 5px
  for all browsers but this preserves previous appearance*/
af|chooseDate::timezone-selectors-row{
	padding: 2px 5px 2px 5px;
	white-space: nowrap;
}
@agent ie{
	af|chooseDate::timezone-selectors-row{
		padding: 2px 5px 7px 5px;
	}
}

af|chooseDate::time-separator {
	padding-left: 5px;
	padding-right: 5px;
}
/* Root style for spinboxes in chooseDate. For styling the spinbox arrows, the
chooseDate styles are grouped near the inputNumberSpinbox*/
af|chooseDate::spinbox {
}
af|chooseDate::spinbox-content{
	-tr-rule-ref: selector("af|inputNumberSpinbox::content");
	-tr-rule-ref: selector(".AFDefaultFont:alias");
	-tr-inhibit: text-align;
	-tr-inhibit: margin;
}
af|chooseDate::spinbox:error af|chooseDate::spinbox-content{
	-tr-rule-ref: selector("af|inputNumberSpinbox:error::content");
}
af|chooseDate::increment-cell,
af|chooseDate::decrement-cell {
	-tr-rule-ref: selector("af|chooseDate::spinbox-cell");
}
af|chooseDate::spinbox-incrementor-icon {
	-tr-rule-ref: selector("af|inputNumberSpinbox::incrementor-icon");
}
af|chooseDate::spinbox-incrementor-icon-style{
	-tr-rule-ref: selector("af|inputNumberSpinbox::incrementor-icon-style");
}
af|chooseDate::spinbox-decrementor-icon{
	-tr-rule-ref: selector("af|inputNumberSpinbox::decrementor-icon");
}
af|chooseDate::spinbox-decrementor-icon-style{
	-tr-rule-ref: selector("af|inputNumberSpinbox::decrementor-icon-style");
}
af|chooseDate::spinbox-incrementor-icon-style:disabled{
	-tr-rule-ref: selector("af|inputNumberSpinbox::incrementor-icon-style:disabled");
}
af|chooseDate::spinbox-incrementor-icon-style:hover{
	-tr-rule-ref: selector("af|inputNumberSpinbox::incrementor-icon-style:hover");
}
af|chooseDate::spinbox-incrementor-icon-style:active{
	-tr-rule-ref: selector("af|inputNumberSpinbox::incrementor-icon-style:active");
}
af|chooseDate::spinbox-decrementor-icon-style:disabled{
	-tr-rule-ref: selector("af|inputNumberSpinbox::decrementor-icon-style:disabled");
}
af|chooseDate::spinbox-decrementor-icon-style:hover{
	-tr-rule-ref: selector("af|inputNumberSpinbox::decrementor-icon-style:hover");
}
af|chooseDate::spinbox-decrementor-icon-style:active{
	-tr-rule-ref: selector("af|inputNumberSpinbox::decrementor-icon-style:active");
}

/* Root style for AM/PM radio buttons in chooseDate */
af|chooseDate::ampm {
	padding-top:
}
af|chooseDate::ampm-content {
	-tr-rule-ref: selector("af|selectOneRadio::content-input");
	-tr-rule-ref: selector(".AFDefaultFont:alias");
	-tr-inhibit: vertical-align;
	-tr-inhibit: padding;
	padding-top: 4px;
	white-space: nowrap;
}
af|chooseDate::ampm-content-input {
	margin-left: 8px;
}
af|chooseDate::ampm-content-input:rtl {
	margin-right: 8px;
}

/* chooseDate: month and timezone select dropdowns are styled with the
 af|chooseDate::choice-list-* keys, defined with the selectOneChoice
 equivalents that they override */
af|chooseDate::choice-list{
	height: 16px;
}
af|chooseDate::choice-list-content {
	-tr-rule-ref: selector(".AFFormControlContentBorder:alias");
	-tr-rule-ref: selector(".AFDefaultFont:alias");
	-tr-rule-ref: selector(".AFFormControlContentBackground:alias");
	-tr-inhibit: vertical-align;
}
/* ChooseDate: allow default width override for timezone. Private key */
af|chooseDate::timezone-list-content{
	-tr-rule-ref: selector("af|chooseDate::choice-list-content");
}





/* calendar */

/* calendar alias section */
.AFCalendarTimeWidth:alias {
	width: 3em;
}
/* yellowish background */
.AFCalendarTodayBackground:alias {
	background-color: #FFFCD8;
}

.AFCalendarTodayHeaderBackground:alias {
	background-color: #C4CEE0;
	color: #ffffff;
}

.AFCalendarActiveDayHeaderBackground:alias {
	background-color: #A2ADBF;
	color: #ffffff;
}

.AFCalendarDisplayRange:alias {
	text-align:center;
	padding:.2em;
	-tr-rule-ref: selector(".AFDefaultBoldFont:alias");
}


/* end calendar alias section */

/* root style This is the default width/height.
This gets automatically overwritten by the style attribute by a stretch component like
panelStretchLayout if the calendar is within a stretch component
(i.e., a component that stretches its children) This can be overwritten by using
inlineStyle */
af|calendar {
	width: 750px;
	height: 450px;
	position: relative;
	border-top: #C3CAD5 1px solid;
	border-left: #B0B9C8 1px solid;
	border-bottom: #B0B9C8 1px solid;
	border-right: #B0B9C8 1px solid;
	overflow: hidden;
}

af|calendar:printable{
	position:static;
	width:auto;
	height: auto;
}

/* turn off borders for toolbox when they are in calendar, except for the bottom in the row */
af|calendar af|toolbox::body {
	border-top: none;
	border-left: none;
	border-right: none;
	border-bottom: none;
}
af|calendar af|toolbox::row,
af|calendar af|toolbox::last-row {
	border-bottom: 1px #ACBACF solid;
	border-right: none;
}
/* All Day activity styles shared by day, week and month */
af|calendar::all-day-activity {
	-tr-rule-ref: selector(".AFMediumAccentBackground:alias");
	-tr-rule-ref: selector(".AFDefaultFont:alias");
	overflow:hidden;
	white-space: nowrap;
}

/* Used when an activity is being dragged*/
af|calendar::all-day-activity:drag-source{
	background-color: #ffffff;
	opacity: .4;
}

@agent ie {
	af|calendar::all-day-activity:drag-source {
		filter: alpha(opacity:40);
	}
}


af|calendar::all-day-activity:drag-end{
	border-right: 1px #ffffff solid;
}


af|calendar::all-day-activity:drag-end:rtl{
	-tr-inhibit: border-right;
	border-left: 1px #ffffff solid;
}

/* margin-top is to center the icon */
.AFCalendarPrevIconStyle:alias {
	padding-left: 2px;
	position: absolute;
	left: 0px;
	margin-top: .22em;
}
/* margin-top is to center the icon */
.AFCalendarNextIconStyle:alias {
	position:absolute;
	right:0px;
	padding-right: 2px;
	margin-top: .22em;
}

/* Icon style for the previous arrow in calendar. Inhibit right/padding-right we
may otherwise inherit, e.g. in RTL the keys are merged so we end up with
both left:0px and right:0px */
af|calendar::all-day-activity-prev,
af|calendar::all-day-activity-next:rtl {
	-tr-rule-ref: selector(".AFCalendarPrevIconStyle:alias");
	-tr-inhibit : right;
	-tr-inhibit : padding-right;
}
/* Icon style for the next arrow in calendar. Inhibit right/padding-right we
may otherwise inherit, e.g. in RTL the keys are merged so we end up with
both left:0px and right:0px */
af|calendar::all-day-activity-next,
af|calendar::all-day-activity-prev:rtl {
	-tr-rule-ref: selector(".AFCalendarNextIconStyle:alias");
	-tr-inhibit : left;
	-tr-inhibit : padding-left;
}
af|calendar::all-day-activity-prev-icon,
af|calendar::all-day-activity-next-icon:rtl {
	content: "<";
}
af|calendar::all-day-activity-next-icon,
af|calendar::all-day-activity-prev-icon:rtl{
	content: ">";
}


af|calendar::all-day-activity-time {
	padding-bottom: 3px;
	padding-top: 3px;
	padding-left: 3px;
	padding-right: 3px;
}

/* without inline-block in rtl mode, the right/left padding doesn't work correctly. There is
still a little gap above the time, but this is the best I can get so far.
It is also needed in IE when the text size is increased. It screws things up in Firefox, however.*/
@agent ie {
	af|calendar::all-day-activity-time {
		padding-bottom: 2px;
		padding-top: 0px;
		display: inline-block;
	}
}


af|calendar::all-day-activity-text{
	padding-left: 3px;
	padding-right: 0px;
	padding-top: 3px;
	padding-bottom: 3px;
}

@agent ie {
	/* without inline-block, the right/left padding doesn't work correctly
  in rtl mode and when the text size is increased it doesn't work correctly in IE.
  It screws things up in Firefox, however. */
	af|calendar::all-day-activity-text{
		padding-top: 0px;
		padding-bottom: 2px;
		display: inline-block;
	}
}
af|calendar::all-day-activity-text:rtl{
	padding-right: 3px;
	padding-left: 0px;
}

af|calendar::all-day-activity-duration {
	padding: 3px;
}

/* week */

af|calendar::week-vgrid {
	border-left: 2px solid #cfdceb;
	cursor: default;
	position: absolute;
	top: 0px;
	height: 100%;
	z-index: 2;
}

af|calendar::day-of-week {
	cursor: default;
	position: absolute;
	top: 0px;
	height: 100%;
}

af|calendar::activity-grid-column af|calendar::day-of-week  {
	background-color: #ffffff;
}

af|calendar af|calendar::day-of-week:today {
	-tr-rule-ref: selector(".AFCalendarTodayBackground:alias");
}

/* private style - this holds the activities in a day in the day & week view */
af|calendar::time-activities-cell {
	position: absolute;
	top: 0px;
	height: 100%;
	z-index: 2;
}


@agent ie {
	/* Needed in IE so that the grid  shows on top of the drop target day cell in week view.
     The issue is that the filter based opacities in IE are applied at the drawing screen level
     instead of CSS cascading like FF*/

	af|calendar:drop-target af|calendar::week-vgrid{
		filter: alpha(opacity:100);
	}

	af|calendar:drop-target af|calendar::day-of-week{
		filter: alpha(opacity:100);
	}

	af|calendar:drop-target af|calendar::all-day-activity{
		filter: alpha(opacity:100);
	}

	af|calendar:drop-target af|calendar::all-day-container{
		filter: alpha(opacity:100);
	}

	/* This is needed for bothe week view and month view */
	af|calendar:drop-target af|calendar::hgrid-minor,
	af|calendar:drop-target af|calendar::hgrid-major{
		filter: alpha(opacity:100);
	}

}

/* Drop target styles for week view*/
af|calendar::day-of-week:drop-target{
	background-color: #F7FDFE;
}


/* Drop target color for today */
af|calendar::day-of-week:today:drop-target {
	background-color: #FFFEEF;
}

/* We want the drop target state for calendar to have no alternate appearance; override the
   default styles that come from generic drop-target elements. */
af|calendar:drop-target {
	background-color: transparent;
	opacity: 1;
}
@agent ie {
	af|calendar:drop-target {
		filter: alpha(opacity:100);
	}
}

/* root dom element of the day part of the calendar */

af|calendar::view {
	position:absolute;
	left:0px;
	right:0px;
	bottom:0px;
}

/* Header styles for day, week, and month */
/* dom node that surounds the day-header/week-header-row and all-day-container */
af|calendar::header-all-day-container {
	padding-bottom:.5em;
}

/* This is where the header for the day is -- that's it the date we are viewing */
af|calendar::day-header-row {
	margin-left: 5em;
	margin-right:16px;
	text-align:center;
	padding-top:3px;
	padding-bottom:4px;
}

af|calendar::day-header-row:rtl {
	margin-right: 5em;
	margin-left:16px;
}
/* IT is recommended that you do not skin the height property */
af|calendar::week-header-row {
	position: relative;
	margin-left: 5em;
	margin-right:16px;
	-tr-rule-ref: selector(".AFCalendarWeekMonthHeaderHeight:alias");
}

af|calendar::week-header-row:rtl {
	margin-right: 5em;
	margin-left:16px;
}
/* see af|calendar::week af|calendar::all-day-calendar which does the same thing so the vgrid lines
will line up */
@agent ie {
	af|calendar::week-header-row {
		margin-right:0px;
		margin-left:5em;
	}

	af|calendar::week-header-row:rtl {
		margin-left:0px;
		margin-right:5em;
	}
}

af|calendar::week-header-cell {
	text-align: center;
	position: absolute;
	height:100%;
	padding-top:3px;
}



/* get the top border from the toolbox */
af|calendar::all-day-container {
	position:relative;
	margin-left:5em;
	margin-right:16px;
	margin-bottom: 1px;
	cursor: pointer;
	border:1px solid;
	border-color:#BFC6C9;
	-tr-rule-ref: selector(".AFLightBackground:alias");
	margin-bottom:5px;
	overflow: hidden;
}
/* used in both day and week view */
af|calendar::all-day-container:rtl {
	margin-right: 5em;
	margin-left: 16px;
}
/* week view should not have margin-right in IE only so the day vgrids line up.
IE counts the scrollbar in its width calculation and Firefox does not (which is probably a bug)*/
@agent ie {
	af|calendar::week af|calendar::all-day-container {
		margin-right:0px;
		margin-left:5em;
	}
	af|calendar::week af|calendar::all-day-container:rtl {
		margin-left:0px;
		margin-right:5em;
	}
}

af|calendar::day af|calendar::all-day-container:drop-target{
	background-color: #E5F6FA;
}

af|calendar::day af|calendar::all-day-activity {
	margin-top:1px;
	padding: 1px 0px 1px 0px;
	margin-left: 8px;
	margin-right: 8px;
	position: relative;
	height: 1.5em;
}

af|calendar::day af|calendar::all-day-activity:has-prev,
af|calendar::day af|calendar::all-day-activity:has-next:rtl {
	margin-left: 0px;
	margin-right: 8px;
}
af|calendar::day af|calendar::all-day-activity:has-next,
af|calendar::day af|calendar::all-day-activity:has-prev:rtl {
	margin-left: 8px;
	margin-right: 0px;
}
af|calendar::day af|calendar::all-day-activity:has-prev:has-next{
	margin-left: 0px;
	margin-right: 0px;
}



af|calendar::activity-grid-column:today {
	-tr-rule-ref: selector(".AFCalendarTodayBackground:alias");
}

/* The grid that holds the timeslots for each hour of a day and the activities for the day/week */
af|calendar::time-activity-grid-container {
	position:absolute;
	left:0px;
	right:0px;
	bottom:0px;
	overflow-x:hidden;
	overflow-y:auto;
	height:auto;
	border-top:1px solid #B4CAD7;
	background-color: #ffffff;
}
/* no need to skin this, most likely, so we can leave as private. */
af|calendar::time-activity-grid-table{
	table-layout: fixed;
	width: 100%;
}

/* width here should match the margin in day-header and the all-day-container */
af|calendar::time-column {
	width: 5em;
	text-align: left;
	border-right: #C4CEE0 1px solid;
	-tr-rule-ref: selector(".AFLightBackground:alias");
}


af|calendar::time-cell {
	position:absolute;
	width:100%;
	left:0;
	border-top:1px solid #C4CEE0;
	height: 1.5em;
}
/* no wrap is needed for Chinese characters */
af|calendar::time-text {
	-tr-rule-ref: selector(".AFDefaultFont:alias");
	text-align:right;
	padding-right:4px;
	white-space: nowrap;
}
/* private, used as an include */
.AFCalendarDayGrid:alias {
	position:absolute;
	width:100%;
	left:0;
}
/* even and odd lines in the day and week views */
af|calendar::hgrid-minor {
	-tr-rule-ref: selector(".AFCalendarDayGrid:alias");
	border-top:1px dotted #C4CEE0;
}
af|calendar::hgrid-major {
	-tr-rule-ref: selector(".AFCalendarDayGrid:alias");
	border-top:1px solid #C4CEE0;
}

af|calendar::hgrid-major:drop-target, af|calendar::hgrid-minor:drop-target {
	background-color: #EDF9FB;
	opacity: 1;
}

@agent ie {
	af|calendar::hgrid-major:drop-target, af|calendar::hgrid-minor:drop-target {
		filter: alpha(opacity:100);
	}
}

/* do not document. This is private and used for positioning */
af|calendar::time-activity-outer-container {
	z-index:2;
	position:absolute;
	left: 3px;
	right: 8px;
	cursor: pointer;
}
af|calendar::time-activity-outer-container:rtl {
	left: 8px;
	right: 3px;
}
/* work around gecko bug where left takes precedence in RTL language, when we want right to
take precedence. We inhibit left, and instead write it on the dom in code if the width is 0 and
we need it to add width to the activity */
@agent gecko {
	af|calendar::time-activity-outer-container:rtl {
		-tr-inhibit: left;
	}
}

af|calendar::time-activity-container {
	-tr-rule-ref: selector(".AFMediumAccentBackground:alias");
	overflow:hidden;
	margin:0;
	position:relative;
}

/* Used when an activity is being dragged. Hide the original activity*/
af|calendar::time-activity-outer-container:drag-source{
	display: none;
}

@agent ie {
	/* Needed in IE so that the activity shows on top of the drop target grid cell*/
	af|calendar:drop-target af|calendar::time-activity-outer-container{
		filter: alpha(opacity:100);
	}
}

af|calendar::time-activity-header {
	-tr-rule-ref: selector(".AFDarkBackground:alias");
	padding-left: 3px;
	padding-top: 2px;
	padding-bottom: 2px;
	white-space: nowrap;
}

/*
  If the activity is moveable display move cursor on the header
 */
af|calendar::time-activity-outer-container:moveable af|calendar::time-activity-header{
	cursor: move;
}

af|calendar::time-activity-header:rtl {
	padding-right:3px;
}
af|calendar::time-activity-content {
	margin: 0px;
	padding-left: 3px;
}
af|calendar::time-activity-content:rtl {
	padding-right: 3px;
}

af|calendar::time-activity-resize-grip{
	height: 3px;
	width: 100%;
	position: absolute;
	bottom: 0px;
	background-image: url('/afr/activity_resize.png');
	background-position: center bottom;
	background-repeat: no-repeat;
	text-align: center;
	cursor: s-resize;
	margin: 0px;
}


af|calendar::all-day-activity-resize-grip{
	height: 100%;
	width: 3px;
	position: absolute;
	right: 0px;
	cursor: e-resize;
}
af|calendar::all-day-activity-resize-grip:rtl{
	cursor: w-resize;
	-tr-inhibit: right;
	left: 0px;
}

/* Activity icons */
af|calendar::reminder-light-icon {
	content: url(/afr/cal_reminder.png);
	width: 12px;
	height: 12px;
}
af|calendar::recurring-light-icon {
	content: url(/afr/cal_repeat.png);
	width: 12px;
	height: 12px;
}
af|calendar::recurring-change-light-icon {
	content: url(/afr/cal_repeat_chg.png);
	width: 12px;
	height: 12px;
}


af|calendar::reminder-dark-icon {
	content: url(/afr/cal_reminder_blk.png);
	width: 12px;
	height: 12px;
}
af|calendar::recurring-dark-icon {
	content: url(/afr/cal_repeat_blk.png);
	width: 12px;
	height: 12px;
}
af|calendar::recurring-change-dark-icon {
	content: url(/afr/cal_repeat_chg_blk.png);
	width: 12px;
	height: 12px;
}

af|calendar::activity-icon-container {
	padding-left: 3px;
	padding-right: 3px;
}
/* without inline-block when the text size is increased
it doesn't work correctly in IE*/
af|calendar::all-day-container af|calendar::activity-icon-container {
	padding-top: 3px;
	padding-bottom: 3px;
}
/* calendar toolbar icons */

af|calendar::toolbar-day-icon {
	content: url(//afr/cal_day.png);
	width: 16px;
	height: 16px;
}

af|calendar::toolbar-day-icon:rtl {
	content: url(//afr/cal_day_rtl.png);
	width: 16px;
	height: 16px;
}

af|calendar::toolbar-week-icon{
	content: url(//afr/cal_week.png);
	width: 16px;
	height: 16px;
}

af|calendar::toolbar-week-icon:rtl{
	content: url(//afr/cal_week_rtl.png);
	width: 16px;
	height: 16px;
}

af|calendar::toolbar-month-icon {
	content: url(//afr/cal_month.png);
	width: 16px;
	height: 16px;
}

af|calendar::toolbar-list-icon {
	content: url(//afr/cal_list.png);
	width: 16px;
	height: 16px;
}
af|calendar::toolbar-list-icon:rtl {
	content: url(//afr/cal_list_rtl.png);
	width: 16px;
	height: 16px;
}


af|calendar::toolbar-list-icon:rtl {
	content: url(//afr/cal_list_rtl.png);
	width: 16px;
	height: 16px;
}

af|calendar::toolbar-prev-icon {
	content: "<";
}

af|calendar::toolbar-next-icon {
	content: ">";
}


/* toolbar styles */

af|calendar::toolbar-display-range {
	margin:0em .5em;
	-tr-rule-ref: selector(".AFDefaultBoldFont:alias");
	white-space:nowrap;
}

/* start calendar list styles */

af|calendar::list{
	overflow-x:auto;
	overflow-y:auto;
	height:auto;
}

af|calendar:printable af|calendar::list{
	position:static;
	overflow-x:visible;
	overflow-y:visible;
	height: auto;
	border-top:0px;
	left:auto;
	right:auto;
	bottom:auto;
}


af|calendar::list-container {
	width:100%;
}


af|calendar::list-empty {
	padding:.25em .5em;
	border-top:0px
}

/* start calendar list row styles */

af|calendar::list-row {
	-tr-rule-ref: selector(".AFLightAccentBackground:alias");
	-tr-rule-ref: selector(".AFTextForeground:alias");
}

af|calendar::list-row:today {
	-tr-rule-ref: selector(".AFCalendarTodayBackground:alias");
}



af|calendar::list-cell {
	white-space:nowrap;
	padding:.25em .5em;
}

af|calendar::list-day-of-week-column {
	vertical-align:top;
	-tr-rule-ref: selector(".AFLightBackground:alias");
}

af|calendar::list-day-of-month-column {
	vertical-align:top;
}

af|calendar::list-time-column {
	text-align:right;
}

af|calendar::list-time-column:rtl {
	text-align:left;
}

af|calendar::list-cell:stretched {
	width:95%;
}


/* end calendar list cell styles */

/* see the link section for calendar link styles*/

af|calendar::list-swatch-container {
	-tr-rule-ref: selector(".AFFormControlContentBorder:alias");
	margin-right:1px;
	margin-left:1px;
	width: 15px;
	height: 15px;
	vertical-align: top;
}

/* end calendar list styles */

/* start calendar month styles */

.AFCalendarWeekMonthHeaderHeight:alias {
	height:1.8em;
}
/* we add the z-index so the bottom border isn't hiden behind the month-grid */
af|calendar::month-header-row {
	position: relative;
	-tr-rule-ref: selector(".AFCalendarWeekMonthHeaderHeight:alias");
	border-bottom: 1px solid #B4CAD7;
	-tr-rule-ref: selector(".AFMediumBackground:alias");
	z-index: 1;
}

af|calendar::month-header-cell {
	text-align: center;
	position: absolute;
	height:100%;
	padding-top:3px;
}

/* month grid container - contains table of day cells*/
af|calendar::month-grid{
	position:absolute;
	left:0px;
	right:0px;
	bottom:0px;
	overflow: hidden;
	background-color: #ffffff;
}

af|calendar::month-grid-row {
	position: absolute;
	left: 0px;
	right: 0px;
	opacity: 1.0;
}

@agent ie {
	af|calendar::month-grid-row {
		filter: alpha(opacity:100);
	}
}

af|calendar::month-grid-cell {
	position: absolute;
	top: 0px;
	bottom: 0px;
	z-index: 1;
	border-bottom: 1px solid #CFDCEB;
	border-left: 1px solid #CFDCEB;
	background-color: #ffffff;
}
af|calendar::month-grid-cell:rtl {
	border-left: 0px solid #CFDCEB;
	border-right: 1px solid #CFDCEB;
}
af|calendar::month-grid-cell:prev-month,
af|calendar::month-grid-cell:next-month {
	-tr-rule-ref: selector(".AFMediumBackground:alias");
}
af|calendar::month-grid-cell:prev-month:today,
af|calendar::month-grid-cell:next-month:today,
af|calendar::month-grid-cell:today{
	-tr-rule-ref: selector(".AFCalendarTodayBackground:alias");
}
af|calendar::month-header-cell:today,
af|calendar::list-row:today af|calendar::list-day-of-week-column,
af|calendar::week-header-cell:today,
af|calendar::week-header-cell:today:active-day {
	-tr-rule-ref: selector(".AFCalendarTodayHeaderBackground:alias");
}

af|calendar::month-grid-cell:today af|calendar::month-grid-cell-header,
af|calendar::month-grid-cell:today:active-day af|calendar::month-grid-cell-header,
af|calendar::list-row:today:active-day af|calendar::list-day-of-week-column {
	-tr-rule-ref: selector(".AFCalendarTodayHeaderBackground:alias");
}
af|calendar::month-grid-cell:active-day af|calendar::month-grid-cell-header,
af|calendar::list-row:active-day af|calendar::list-day-of-week-column,
af|calendar::week-header-cell:active-day {
	-tr-rule-ref: selector(".AFCalendarActiveDayHeaderBackground:alias");
}

/*drop target styles during drag and drop*/
af|calendar::month-grid-cell:drop-target,
af|calendar::month-grid-cell:today:drop-target,
af|calendar::month-grid-cell:active-day:drop-target{
	background-color: #EDF9FB;
	opacity: 1;
}

@agent ie {
	af|calendar::month-grid-cell:drop-target,
	af|calendar::month-grid-cell:today:drop-target,
	af|calendar::month-grid-cell:active-day:drop-target {
		filter: alpha(opacity:100);
	}

	/* Needed in IE so that the activity shows on top of the drop target grid cell*/
	af|calendar:drop-target af|calendar::all-day-activity,
	af|calendar:drop-target af|calendar::month-time-activity{
		filter: alpha(opacity:100);
	}

	af|calendar:drop-target af|calendar::month-grid-cell{
		filter: alpha(opacity:100);
	}
}

af|calendar::month-grid-cell:drop-target af|calendar::month-grid-cell-header,
af|calendar::month-grid-cell:today:drop-target af|calendar::month-grid-cell-header,
af|calendar::month-grid-cell:active-day:drop-target af|calendar::month-grid-cell-header,
af|calendar::month-grid-cell:prev-month:drop-target af|calendar::month-grid-cell-header,
af|calendar::month-grid-cell:next-month:drop-target af|calendar::month-grid-cell-header
{
	background-color: #E5F6FA;
}

af|calendar::month-grid-cell:today:drop-target af|calendar::month-grid-cell-header-day-link,
af|calendar::month-grid-cell:active-day:drop-target af|calendar::month-grid-cell-header-day-link,
af|calendar::month-grid-cell:today:active-day:drop-target af|calendar::month-grid-cell-header-day-link
{
	-tr-rule-ref: selector(".AFLinkForeground:alias");
}

af|calendar::month-grid-cell-header-misc {
	white-space:nowrap;
	font-style:italic;
	position:absolute;
	float:left;
	left:2px;
}


af|calendar::month-grid-cell-header {
	-tr-rule-ref: selector(".AFLightBackground:alias");
	border-bottom: 1px solid #CFDCEB;
	padding-bottom: 3px;
	padding-top: 3px;
	width: 100%;
	text-align: right;
	-tr-rule-ref: selector(".AFDefaultFont:alias");
}
/* day view's all-day-activities are not positioned and the week/month activites are. */
/* the week/month all-day-activities need a little left/right padding so they don't blend into
one another */
af|calendar::month af|calendar::all-day-activity,
af|calendar::week af|calendar::all-day-activity {
	padding-left: 1px;
	padding-right: 1px;
	position:absolute;
	z-index: 5;
	border-top:1px solid white;
}
af|calendar::month af|calendar::all-day-activity {
	height:1.5em;
}
af|calendar::week af|calendar::all-day-activity {
	height:1.5em;
}

af|calendar::all-day-activity-text-wrapper {
	position: absolute;
	left: 0px;
	right: 0px;
	top: 0px;
	bottom: 0px;
	overflow:hidden;
	white-space: nowrap;
	padding-top: 2px;
}
/* private. used to position only */
af|calendar::month-time-activity-wrapper {
	position:absolute;
	white-space:nowrap;
	overflow:hidden;
	z-index:5;
}

/* The activity text is absolutely positioned to appear to the right of the Previous Arrow (if ltr, NextArrow for rtl).
The left is set to: the icon length + its padding-left + spacing between the icon and the text (12 + 2 + 3) */
af|calendar::day af|calendar::all-day-activity:has-prev af|calendar::all-day-activity-text-wrapper,
af|calendar::day af|calendar::all-day-activity:has-next af|calendar::all-day-activity-text-wrapper:rtl,
af|calendar::week af|calendar::all-day-activity:has-prev af|calendar::all-day-activity-text-wrapper,
af|calendar::week af|calendar::all-day-activity:has-next af|calendar::all-day-activity-text-wrapper:rtl,
af|calendar::month af|calendar::all-day-activity:has-prev af|calendar::all-day-activity-text-wrapper,
af|calendar::month af|calendar::all-day-activity:has-next af|calendar::all-day-activity-text-wrapper:rtl{
	left: 17px;
	right: 0px;
}

/* The activity text is absolutely positioned to appear to the left of the Next Arrow (if ltr, PreviousArrow for rtl).
The right is set to: the icon length + its padding-left + spacing between the icon and the text (12 + 2 + 3) */
af|calendar::day af|calendar::all-day-activity:has-next af|calendar::all-day-activity-text-wrapper,
af|calendar::day af|calendar::all-day-activity:has-prev af|calendar::all-day-activity-text-wrapper:rtl,
af|calendar::week af|calendar::all-day-activity:has-next af|calendar::all-day-activity-text-wrapper,
af|calendar::week af|calendar::all-day-activity:has-prev af|calendar::all-day-activity-text-wrapper:rtl,
af|calendar::month af|calendar::all-day-activity:has-next af|calendar::all-day-activity-text-wrapper,
af|calendar::month af|calendar::all-day-activity:has-prev af|calendar::all-day-activity-text-wrapper:rtl {
	left: 0px;
	right: 17px;
}

/* The activity text is absolutely positioned to appear between the Previous Arrow and Next Arrow.
The left/right are set to: the icon length + its padding-left + spacing between the icon and the text (12 + 2 + 3) */
af|calendar::day af|calendar::all-day-activity:has-prev:has-next  af|calendar::all-day-activity-text-wrapper,
af|calendar::week af|calendar::all-day-activity:has-prev:has-next  af|calendar::all-day-activity-text-wrapper,
af|calendar::month af|calendar::all-day-activity:has-prev:has-next  af|calendar::all-day-activity-text-wrapper{
	left: 17px;
	right: 17px;
}


af|calendar::month-time-activity {
	white-space:nowrap;
	margin-right: 5px;
	margin-left: 5px;
	height:1.5em;
	overflow:hidden;
	-tr-rule-ref: selector(".AFDefaultFont:alias");
}

/* Used when an activity is being dragged*/
af|calendar::month-time-activity:drag-source{
	background-color: #ffffff;
	opacity: .4;
}

@agent ie {
	af|calendar::month-time-activity:drag-source {
		filter: alpha(opacity:40);
	}
}

af|calendar::month-overflow-link-wrapper {
	position: absolute;
	z-index: 5;
	text-align: center;
}

/* end calendar month styles */

/* end calendar styles */





/*
 * inputColor styles
 */

/* Underline the access key for form labels */
af|inputColor::access-key {
	-tr-rule-ref: selector(".AFFormAccessKeyStyle:alias");
}
/** public, styles the edit field of the inputColor */
af|inputColor::content {
	-tr-rule-ref: selector(".AFFormControlContentBorder:alias");
	-tr-rule-ref: selector(".AFFormControlContentBackground:alias");
}

/** Private
 * The style of the container element that holds both the swatch and the glyph.
 * The glyph will be supported later.
 */
af|inputColor::swatch-container {
	-tr-rule-ref: selector(".AFFormControlContentBorder:alias");
	margin-right:1px;
	margin-left:1px;
	width: 15px;
	height: 15px;
	vertical-align: top;
}
af|inputColor::launch-icon-style {
	border-style: solid;
	border-width: 1px;
	border-top-color: #656565;
	border-left-color: #768092;
	border-right-color: #768092;
	border-bottom-color: #ACBACF;
	display: block;
	overflow:hidden;
	background-image:url("/afr/arrow_md.png");
	width: 9px;
	height: 15px;
	background-repeat:no-repeat;
}

af|inputColor::launch-icon-style:disabled {
	display: none;
}

/* Use the above icon for the richcomponents-simple skin, therefore we need to null
   out Trinidad's simple icon */
af|inputColor::launch-icon {
	content: inhibit;
}

af|inputNumberSpinbox {
}

af|inputNumberSpinbox::content {
	-tr-rule-ref: selector(".AFFormControlContentBorder:alias");
	-tr-rule-ref: selector(".AFFormControlContentBackground:alias");
	margin-right: 1px;
}

af|inputNumberSpinbox::access-key {
	-tr-rule-ref: selector(".AFFormAccessKeyStyle:alias");
}
af|inputNumberSpinbox::increment-cell,
af|inputNumberSpinbox::decrement-cell {
	-tr-rule-ref: selector("af|inputNumberSpinbox::spinbox-cell");
}
/**
 * This key uses background-image to set the increment/decrement image.
If you want to use text instead of a background-image, you can
use af|inputNumberSpinbox::incrementor-icon {content:"Text"} or
af|inputNumberSpinbox::decrementor-icon {content:"Text"}  */

af|inputNumberSpinbox::incrementor-icon-style,
af|inputNumberSpinbox::decrementor-icon-style
{
	display: block;
	width: 11px;
	height: 6px;
	background-repeat: no-repeat;
	background-position: center center;
	padding:0px;
}
/* tweak this up one pixel so it matches the look of the decrementor button better */
af|inputNumberSpinbox::incrementor-icon-style {
	height: 5px;
}

af|inputNumberSpinbox::incrementor-icon-style
{
	background-image: url("/afr/spinbox_arrow_up.png");
}
af|inputNumberSpinbox::decrementor-icon-style
{
	background-image: url("/afr/spinbox_arrow_dn.png");
}
af|inputNumberSpinbox::incrementor-icon-style:disabled
{
	background-image: url("/afr/spinbox_arrow_up_d.png");
}
af|inputNumberSpinbox::decrementor-icon-style:disabled
{
	background-image:url("/afr/spinbox_arrow_dn_d.png");
}
/* Spinbox icons */
af|inputNumberSpinbox::incrementor-icon,
af|inputNumberSpinbox::decrementor-icon,
af|inputNumberSpinbox::incrementor-disabled-icon,
af|inputNumberSpinbox::decrementor-disabled-icon,
af|chooseDate::spinbox-incrementor-disabled-icon,
af|chooseDate::spinbox-decrementor-disabled-icon
{
	content: inhibit;
}

@agent ie {
	HTML:maximized {
		overflow: auto;
	}
}

/* Start panelSplitter */
af|panelSplitter {
	-tr-collapse-animation-duration: 200;
	-tr-first-border: all;
	-tr-second-border: all;
}
/* The collapse icon in horizontal splitters */
af|panelSplitter::horizontal-collapse-icon {
	width: 9px;
	height: 23px;
	content: url("/component/img_metro/splitterhc.png");
	cursor: pointer;
}
/* The restore icon in horizontal splitters */
af|panelSplitter::horizontal-restore-icon {
	width: 9px;
	height: 23px;
	content: url("/component/img_metro/splitterhr.png");
	cursor: pointer;
}
/* The collapse icon in vertial splitters */
af|panelSplitter::vertical-collapse-icon {
	width: 23px;
	height: 9px;
	content: url("/component/img_metro/splittervc.png");
	cursor: pointer;

	/* Need to force vertical-align:top on the image, otherwise
     image is offset several pixels from the top of the containing
     anchor on Firefox (and as a result image is clipped). */
	vertical-align:top;
}
/* The restore icon in vertical splitter */
af|panelSplitter::vertical-restore-icon {
	width: 23px;
	height: 9px;
	content: url("/component/img_metro/splittervr.png");
	cursor: pointer;

	/* Need to force vertical-align:top on the image, otherwise
     image is offset several pixels from the top of the containing
     anchor on Firefox (and as a result image is clipped). */
	vertical-align:top;
}
/*
  Styles collapse/restore icons in vertical splitters.
  Can be used to set gradient images.
*/
af|panelSplitter::vertical-icon-style {
	background-color:#FFFFFF;
	cursor: default;
}

af|panelSplitter::vertical-divider:disclosed af|panelSplitter::vertical-icon-style {
	margin-bottom: 0;
	margin-top: 0;
}

af|panelSplitter::vertical-divider:not(.p_AFPositionedFromEnd):not(.p_AFDisclosed) af|panelSplitter::vertical-icon-style {
	margin-bottom: -7px;
}

af|panelSplitter::vertical-divider.p_AFPositionedFromEnd:not(.p_AFDisclosed) af|panelSplitter::vertical-icon-style {
	margin-top: -7px;
}

@agent gecko {
	af|panelSplitter::vertical-icon-style {
		/* If we do not set this display property then the anchor will not consume the space used by the
       child IMG element in FF2 and FF3. */
		display: -moz-box;
	}
}
@agent ie, webkit {
	af|panelSplitter::vertical-icon-style {
		/* If we do not set this display property then the anchor will not consume the space used by the
       child IMG element in IE8 and Safari. */
		display: inline-block;
	}
}
/*
  Styles collapse/restore icons in horizontal splitters.
  Can be used to set gradient images.
*/
af|panelSplitter::horizontal-icon-style {
	background-color:#FFFFFF;
	cursor: default;
}

af|panelSplitter::horizontal-divider:disclosed af|panelSplitter::horizontal-icon-style {
	margin-left: 0;
	margin-right: 0;
}

af|panelSplitter::horizontal-divider:not(.p_AFPositionedFromEnd):not(.p_AFDisclosed) af|panelSplitter::horizontal-icon-style {
	margin-right: -7px;
}

af|panelSplitter::horizontal-divider.p_AFPositionedFromEnd:not(.p_AFDisclosed) af|panelSplitter::horizontal-icon-style {
	margin-left: -7px;
}

@agent gecko {
	af|panelSplitter::horizontal-icon-style {
		/* If we do not set this display property then the anchor will not consume the space used by the
       child IMG element in FF2 and FF3. */
		display: -moz-box;
	}
}
@agent ie, webkit {
	af|panelSplitter::horizontal-icon-style {
		/* If we do not set this display property then the anchor will not consume the space used by the
       child IMG element in IE8 and Safari. */
		display: inline-block;
	}
}

/*
  Note: we do not currently support setting padding/border on
  af|panelSplitter.
*/
af|panelSplitter {
	-tr-divider-size: -1; /* the number of pixels between the two splitter panes for the divider */
	position: relative;
	width: 300px;
	height: 300px;
	overflow: hidden;
}

/*
  Styles both panes in the splitter.
  Note: we do not currently support setting padding on
  af|panelSplitter::pane.  Also, border-width is fixed at 1px.
*/
af|panelSplitter::pane {
	position: absolute;
	overflow: hidden;

	/* Tweak pane z-index so that the divider appears above panes.  This
     is necessary for proper drag feedback (since we drag the divider
     itself) */
	z-index:0;
}

/*
 * Printable panel splitter: turn off width, height and overflow.  This
 * should perhaps be an @media selector, but then it would
 * not show up as expected during viewing of the printable page,
 * and skinning doesn't yet support @media!
 */
af|panelSplitter:printable {
	width: auto;
	height: auto;
	overflow: visible;
}
@agent email
{
	af|panelSplitter {
		width: auto;
		height: auto;
		overflow: visible;
	}
}

/*
 Styles the divider in horizontal splitters
 Note: We do not currently support setting border or padding on divider
 */
af|panelSplitter::horizontal-divider {
	position: absolute;
	cursor: e-resize;

	/* Tweak divider z-index so that it appears above panes.  This
     is necessary for proper drag feedback (since we drag the divider
     itself) */
	z-index:999;
}
@agent gecko {
	af|panelSplitter::horizontal-divider {
		/* This is needed or else FF2 and FF3 will let highlight pane contents during the drag. */
		-moz-user-select: none;
	}
}

/*
 Styles the divider in vertical splitters
 Note: We do not currently support setting border or padding on divider
 */
af|panelSplitter::vertical-divider {
	position: absolute;
	cursor: n-resize;

	/* Tweak divider z-index so that it appears above panes.  This
     is necessary for proper drag feedback (since we drag the divider
     itself) */
	z-index:999;
}
@agent gecko {
	af|panelSplitter::vertical-divider {
		/* This is needed or else FF2 and FF3 will let highlight pane contents during the drag. */
		-moz-user-select: none;
	}
}

/* Styles the container for the collapse/restore button in horizontal (side-by-side) splitters.
   Generally defines a vertical-align and padding-top or padding-bottom. */
af|panelSplitter::horizontal-icon-container {
	vertical-align: middle;
}
@agent gecko {
	af|panelSplitter::horizontal-icon-container {
		/* This is needed or else FF2 and FF3 will let you drag the container element instead of
       invoking mouse events to move the splitter position. */
		-moz-user-select: none;
	}
}

/* Styles the container for the collapse/restore button in vertical (one above the other) splitters.
   Generally defines a text-align and padding-left or padding-right. */
af|panelSplitter::vertical-icon-container {
	position: absolute;
	top: 0px;
	bottom: 0px;
	left: 0px;
	right: 0px;
	height: 7px;
}
af|panelSplitter::vertical-icon-container {
	text-align: center;
}
@agent gecko {
	af|panelSplitter::vertical-icon-container {
		/* This is needed or else FF2 and FF3 will let you drag the container element instead of
       invoking mouse events to move the splitter position. */
		-moz-user-select: none;
	}
}

/* Use default cursor if in print mode */
af|panelSplitter:printable af|panelSplitter::horizontal-divider,
af|panelSplitter:printable af|panelSplitter::vertical-divider {
	cursor: default;
}

/* Internet Explorer hack for how it ignores event targets for mouse over events when the element
   doesn't contain anything interactive.  By having a background-image, the divider is then treated
   as a first class citizen and can be an event target. */
@agent ie {
	af|panelSplitter::horizontal-divider,
	af|panelSplitter::vertical-divider {
		background-image: url('/afr/t.gif');
		background-repeat: no-repeat;
	}
}

/* Styles the hilighter that appears in the horizontal divider when the divider is hovered. */
af|panelSplitter::horizontal-highlighter {
	position: absolute;
	overflow: hidden;
	-tr-rule-ref: selector(".AFDarkAccentBackground:alias");
	height:100%;
	width:1px;
	top:0px;
	left:3px;
}
af|panelSplitter::horizontal-highlighter:flow {
	left: auto;
	margin-left: 3px;
}

/* Styles the hilighter that appears in the vertial divider when the divider is hovered. */
af|panelSplitter::vertical-highlighter {
	position: absolute;
	overflow: hidden;
	-tr-rule-ref: selector(".AFDarkAccentBackground:alias");
	width:100%;
	height:1px;
	top:3px;
	left:0px;
}

/* End panelSplitter */

af|panelBorderLayout {
}

af|panelGroupLayout {
}

/* TEMPLATE */

/* Styles for stretching a component giving root visual appearance, e.g. page background.
   Generally this shouldn't be needed but there are some legacy users that have page templates
   where they have wrapper layout elements that do not stretch and want an inner layout element
   to be stretched to fill the browser viewport.
   The reason why just .AFVisualRoot will not suffice is because
   we cannot guarantee order of definitions in skinning.  We can
   only increase selector specificity.
   Note: AFVisualRoot is deprecated. */
.AFVisualRoot,
af|panelAccordion.AFVisualRoot,
af|panelSplitter.AFVisualRoot,
af|panelStretchLayout.AFVisualRoot,
af|panelTabbed.AFVisualRoot,
af|region.AFVisualRoot,
af|carousel.AFVisualRoot,
af|decorativeBox.AFVisualRoot {
	position: absolute;
	width: 100%;
	height: 100%;
}

/* Workaround for bug in IE 7.0.5730.11 which incorrectly calculates the need for
   horizontal scrolling. Bug still exists in IE8 when using IE7 rendering modes but is fixed in the
   pure IE8 rendering mode. */
@agent ie and (version: 7.0) {
	.AFIEOverflowWorkaround {
		width: 90%;
	}
}

/* A marker style class that will declaratively stretch a component horizontally in a flowing
   container. This style class should be used instead of attempting to use a percentage width as an
   inlineStyle width.
   Features:
    * Automatically applies stretching to just the components that can be stretched horizontally.
    * Provides a work around for a bug in Internet Explorer 7. In this browser, a
      horizontally-stretched component can cause a horizontal scroll bar to appear. This scroll bar
      lets you scroll the distance equal to the width of the vertical scroll bar. This scroll bar
      should not appear at all. To work around this issue, this style class will use a smaller
      stretched width in order to reduce the chance of encountering this bug.
  If your component is already being stretched both horizontally and vertically by its parent
  component then this style class will not be needed (it would be redundant). */
/* Disabling of the left and right borders may become obsolete in the future once browsers implement
   the proposed CSS3 box-sizing:border-box; style.  Note that to support the old browsers, we need
   to have several agent blocks that can use the old work around and then in the common definition,
   use the proposed CSS3 standard, box-sizing.  Note that there is no "margin-box" so we still need
   to disable margins in the common definition. */
HTML BODY .AFStretchWidth,
HTML BODY .AFStretchWidth:hover,
HTML BODY .AFStretchWidth:active,
HTML BODY .AFStretchWidth:active:hover,
HTML BODY .AFStretchWidth:focus,
HTML BODY .AFStretchWidth:focus:active,
HTML BODY .AFStretchWidth:focus:hover,
HTML BODY .AFStretchWidth:focus:active:hover,
HTML BODY .AFAuxiliaryStretchWidth,
HTML BODY .AFAuxiliaryStretchWidth:hover,
HTML BODY .AFAuxiliaryStretchWidth:active,
HTML BODY .AFAuxiliaryStretchWidth:active:hover,
HTML BODY .AFAuxiliaryStretchWidth:focus,
HTML BODY .AFAuxiliaryStretchWidth:focus:active,
HTML BODY .AFAuxiliaryStretchWidth:focus:hover,
HTML BODY .AFAuxiliaryStretchWidth:focus:active:hover {
	box-sizing: border-box;
	margin-left: 0px;
	margin-right: 0px;
}
/* Gecko browsers support "-moz-box-sizing" (and complain about "box-sizing" so inhibit it) */
@agent gecko {
	HTML BODY .AFStretchWidth,
	HTML BODY .AFStretchWidth:hover,
	HTML BODY .AFStretchWidth:active,
	HTML BODY .AFStretchWidth:active:hover,
	HTML BODY .AFStretchWidth:focus,
	HTML BODY .AFStretchWidth:focus:active,
	HTML BODY .AFStretchWidth:focus:hover,
	HTML BODY .AFStretchWidth:focus:active:hover,
	HTML BODY .AFAuxiliaryStretchWidth,
	HTML BODY .AFAuxiliaryStretchWidth:hover,
	HTML BODY .AFAuxiliaryStretchWidth:active,
	HTML BODY .AFAuxiliaryStretchWidth:active:hover,
	HTML BODY .AFAuxiliaryStretchWidth:focus,
	HTML BODY .AFAuxiliaryStretchWidth:focus:active,
	HTML BODY .AFAuxiliaryStretchWidth:focus:hover,
	HTML BODY .AFAuxiliaryStretchWidth:focus:active:hover {
		-moz-box-sizing: border-box;
		-tr-inhibit: box-sizing;
	}
}
/* WebKit browsers support "-webkit-box-sizing" */
@agent webkit {
	HTML BODY .AFStretchWidth,
	HTML BODY .AFStretchWidth:hover,
	HTML BODY .AFStretchWidth:active,
	HTML BODY .AFStretchWidth:active:hover,
	HTML BODY .AFStretchWidth:focus,
	HTML BODY .AFStretchWidth:focus:active,
	HTML BODY .AFStretchWidth:focus:hover,
	HTML BODY .AFStretchWidth:focus:active:hover,
	HTML BODY .AFAuxiliaryStretchWidth,
	HTML BODY .AFAuxiliaryStretchWidth:hover,
	HTML BODY .AFAuxiliaryStretchWidth:active,
	HTML BODY .AFAuxiliaryStretchWidth:active:hover,
	HTML BODY .AFAuxiliaryStretchWidth:focus,
	HTML BODY .AFAuxiliaryStretchWidth:focus:active,
	HTML BODY .AFAuxiliaryStretchWidth:focus:hover,
	HTML BODY .AFAuxiliaryStretchWidth:focus:active:hover {
		-webkit-box-sizing: border-box;
	}
}
/* IE8 and later support "-ms-box-sizing" */
@agent ie {
	HTML BODY .AFStretchWidth,
	HTML BODY .AFStretchWidth:hover,
	HTML BODY .AFStretchWidth:active,
	HTML BODY .AFStretchWidth:active:hover,
	HTML BODY .AFStretchWidth:focus,
	HTML BODY .AFStretchWidth:focus:active,
	HTML BODY .AFStretchWidth:focus:hover,
	HTML BODY .AFStretchWidth:focus:active:hover,
	HTML BODY .AFAuxiliaryStretchWidth,
	HTML BODY .AFAuxiliaryStretchWidth:hover,
	HTML BODY .AFAuxiliaryStretchWidth:active,
	HTML BODY .AFAuxiliaryStretchWidth:active:hover,
	HTML BODY .AFAuxiliaryStretchWidth:focus,
	HTML BODY .AFAuxiliaryStretchWidth:focus:active,
	HTML BODY .AFAuxiliaryStretchWidth:focus:hover,
	HTML BODY .AFAuxiliaryStretchWidth:focus:active:hover {
		-ms-box-sizing: border-box;
	}
}

/*ICR_StretchWidth_AF*/
HTML BODY af|activeImage.AFStretchWidth,
HTML BODY af|calendar.AFStretchWidth,
HTML BODY af|carousel.AFStretchWidth,
HTML BODY af|chooseDate.AFStretchWidth
HTML BODY af|decorativeBox.AFStretchWidth,
HTML BODY af|goButton.AFStretchWidth,
HTML BODY af|image.AFStretchWidth,
HTML BODY af|inlineFrame.AFStretchWidth,
HTML BODY af|inputComboboxListOfValues.AFStretchWidth,
HTML BODY af|inputDate.AFStretchWidth,
HTML BODY af|inputFile.AFStretchWidth,
HTML BODY af|inputListOfValues.AFStretchWidth,
HTML BODY af|inputNumberSlider.AFStretchWidth,
HTML BODY af|inputRangeSlider.AFStretchWidth,
HTML BODY af|inputText.AFStretchWidth,
HTML BODY af|panelAccordion.AFStretchWidth,
HTML BODY af|panelBox.AFStretchWidth,
HTML BODY af|panelCollection.AFStretchWidth,
HTML BODY af|panelGroupLayout.AFStretchWidth,
HTML BODY af|panelHeader.AFStretchWidth,
HTML BODY af|panelLabelAndMessage.AFStretchWidth,
HTML BODY af|panelSplitter.AFStretchWidth,
HTML BODY af|panelStretchLayout.AFStretchWidth,
HTML BODY af|panelTabbed.AFStretchWidth,
HTML BODY af|query.AFStretchWidth,
HTML BODY af|resetButton.AFStretchWidth,
HTML BODY af|richTextEditor.AFStretchWidth,
HTML BODY af|selectManyChoice.AFStretchWidth,
HTML BODY af|selectOneChoice.AFStretchWidth,
HTML BODY af|showDetailHeader.AFStretchWidth,
HTML BODY af|table.AFStretchWidth,
HTML BODY af|tree.AFStretchWidth,
HTML BODY af|treeTable.AFStretchWidth,
HTML BODY af|activeImage.AFAuxiliaryStretchWidth,
HTML BODY af|calendar.AFAuxiliaryStretchWidth,
HTML BODY af|carousel.AFAuxiliaryStretchWidth,
HTML BODY af|chooseDate.AFAuxiliaryStretchWidth,
HTML BODY af|decorativeBox.AFAuxiliaryStretchWidth,
HTML BODY af|goButton.AFAuxiliaryStretchWidth,
HTML BODY af|image.AFAuxiliaryStretchWidth,
HTML BODY af|inlineFrame.AFAuxiliaryStretchWidth,
HTML BODY af|inputComboboxListOfValues.AFAuxiliaryStretchWidth,
HTML BODY af|inputDate.AFAuxiliaryStretchWidth,
HTML BODY af|inputFile.AFAuxiliaryStretchWidth,
HTML BODY af|inputListOfValues.AFAuxiliaryStretchWidth,
HTML BODY af|inputNumberSlider.AFAuxiliaryStretchWidth,
HTML BODY af|inputRangeSlider.AFAuxiliaryStretchWidth,
HTML BODY af|inputText.AFAuxiliaryStretchWidth,
HTML BODY af|panelAccordion.AFAuxiliaryStretchWidth,
HTML BODY af|panelBox.AFAuxiliaryStretchWidth,
HTML BODY af|panelCollection.AFAuxiliaryStretchWidth,
HTML BODY af|panelGroupLayout.AFAuxiliaryStretchWidth,
HTML BODY af|panelHeader.AFAuxiliaryStretchWidth,
HTML BODY af|panelLabelAndMessage.AFAuxiliaryStretchWidth,
HTML BODY af|panelSplitter.AFAuxiliaryStretchWidth,
HTML BODY af|panelStretchLayout.AFAuxiliaryStretchWidth,
HTML BODY af|panelTabbed.AFAuxiliaryStretchWidth,
HTML BODY af|query.AFAuxiliaryStretchWidth,
HTML BODY af|resetButton.AFAuxiliaryStretchWidth,
HTML BODY af|richTextEditor.AFAuxiliaryStretchWidth,
HTML BODY af|selectManyChoice.AFAuxiliaryStretchWidth,
HTML BODY af|selectOneChoice.AFAuxiliaryStretchWidth,
HTML BODY af|showDetailHeader.AFAuxiliaryStretchWidth,
HTML BODY af|table.AFAuxiliaryStretchWidth,
HTML BODY af|tree.AFAuxiliaryStretchWidth,
HTML BODY af|treeTable.AFAuxiliaryStretchWidth {
	width: 100%;
}

/* Content stretching for labelled components.
   NOTE: If these components had a style class marker for simple, we might be able to use 100%
         instead of just a thinner % for all cases. */
HTML BODY af|inputComboboxListOfValues.AFStretchWidth .AFContentCell,
HTML BODY af|inputComboboxListOfValues.AFStretchWidth af|inputComboboxListOfValues::content,
HTML BODY af|inputDate.AFStretchWidth .AFContentCell,
HTML BODY af|inputDate.AFStretchWidth af|inputDate::content,
HTML BODY af|inputFile.AFStretchWidth .AFContentCell,
HTML BODY af|inputFile.AFStretchWidth af|inputFile::content,
HTML BODY af|inputListOfValues.AFStretchWidth .AFContentCell,
HTML BODY af|inputListOfValues.AFStretchWidth af|inputListOfValues::content,
HTML BODY af|inputNumberSlider.AFStretchWidth .AFContentCell,
HTML BODY af|inputNumberSlider.AFStretchWidth af|inputNumberSlider::content,
HTML BODY af|inputRangeSlider.AFStretchWidth .AFContentCell,
HTML BODY af|inputRangeSlider.AFStretchWidth af|inputRangeSlider::content,
HTML BODY af|inputText.AFStretchWidth .AFContentCell,
HTML BODY af|inputText.AFStretchWidth af|inputText::content,
HTML BODY af|panelLabelAndMessage.AFStretchWidth .AFContentCell,
HTML BODY af|panelLabelAndMessage.AFStretchWidth af|panelLabelAndMessage::content-cell,
HTML BODY af|richTextEditor.AFStretchWidth .AFContentCell,
HTML BODY af|richTextEditor.AFStretchWidth af|richTextEditor::content,
HTML BODY af|selectManyChoice.AFStretchWidth .AFContentCell,
HTML BODY af|selectManyChoice.AFStretchWidth af|selectManyChoice::content,
HTML BODY af|selectOneChoice.AFStretchWidth .AFContentCell,
HTML BODY af|selectOneChoice.AFStretchWidth af|selectOneChoice::content {
	width: 90%;
}

/* A marker style class that can be used to turn off borders that components have assigned to their
   root elements.  This cannot and will not affect borders that are applied to internal elements of
   components nor for components whose borders are applied via inline styles or from skin
   definitions with high specificity weights. */
HTML BODY .AFHideBorder,
HTML BODY .AFHideBorder:hover,
HTML BODY .AFHideBorder:active,
HTML BODY .AFHideBorder:active:hover,
HTML BODY .AFHideBorder:focus,
HTML BODY .AFHideBorder:focus:active,
HTML BODY .AFHideBorder:focus:hover,
HTML BODY .AFHideBorder:focus:active:hover {
	border-width: 0px;
	border-style: none;
}

/* style for legacy branding text (non-branding bar use cases) */
.AFBranding {
	font-weight: bold;
	font-size: 18px;
}

/* style for a branding bar container (e.g. on an af:panelBorderLayout or horizontal
   af:panelGroupLayout) */
.AFBrandingBar {
	height: 26px;
}

/* style for a container (e.g. an af:panelGroupLayout) for items inside of the branding bar
   container */
.AFBrandingBarItem {
	display: block;
	white-space: nowrap;
	height: 2em;
}

/* style for a decorative branding logo (e.g. on an af:spacer) placed inside of a branding bar item
   wrapper */
.AFBrandingBarLogo {
	display: block;
	width: 119px;
	height: 2em;
	background-image: url('/afr/logo-simple.png');
	background-position: center;
	background-repeat: no-repeat;
}

/* style for branding page title text (e.g. on an af:outputText) placed inside of a branding bar
   item wrapper */
.AFBrandingBarTitle {
	display: block;
	font-weight: bold;
	font-size: 18px;
	padding-top: 0.2em;
}
@accessibility-profile large-fonts {
	.AFBrandingBarTitle {
		font-size: large;
	}
}

/* style for supporting padding of navigationPane buttons when in a branding bar so that it can line
   up vertically */
.AFBrandingBar af|navigationPane-buttons {
	display: block;
	padding-top: 0.5em;
}

/* style for supporting padding of the status indicator when in a branding bar so that it can line
   up vertically */
.AFBrandingBar af|statusIndicator {
	display: block;
	padding: 0.5em 0.5em 0px 0.5em;
}

/* copy over from blafplus-medium */


/* start form components blafplus-medium definitions
   these extend the simple skin definitions (see richcomponents-simple-desktop.css &
   base-desktop.xss) */
af|selectBooleanRadio::native-input,
af|selectOneRadio::native-input,
af|selectBooleanCheckbox::native-input,
af|selectManyCheckbox::native-input {
}

@agent gecko {
	/*
    start private
  */
	/* on FF, I am setting the margin to 0px on the input element so that the span can adjust the padding
     for the proper look for warnings and errors. This is a private key that shouldn't need to be skinned.
     ChooseDate uses the selectOneRadio so these keys also appear in it DOM
  */
	af|selectBooleanRadio::native-input,
	af|selectOneRadio::native-input {
		margin: 0px;
	}
	af|selectBooleanCheckbox::native-input,
	af|selectManyCheckbox::native-input {
		margin: 2px 0px 1px;
	}
	af|chooseDate::ampm-content-input af|selectOneRadio::native-input{
		margin: 0px 2px 2px 1px;
	}
	/*
    end private
  */
	af|selectBooleanCheckbox::content-input,
	af|selectManyCheckbox::content-input {
		padding: 3px 2px 1px;
		vertical-align: -10%;
	}

	/* adjust the item-text so that it lines up with the label*/
	af|selectBooleanRadio::item-text,
	af|selectOneRadio::item-text,
	af|chooseDate::ampm-item-text{
		vertical-align:25%;
	}

	/* adjust the padding of the span to give a balanced error and warning background */
	af|selectBooleanRadio::content-input,
	af|selectOneRadio::content-input {
		padding: 4px 3px 0px 2px;
		vertical-align:10%;
	}
	af|selectBooleanCheckbox:read-only::content-input,
	af|selectManyCheckbox:read-only::content-input {
		font-size: 13px;
		vertical-align: -13%;
	}
}
@agent ie {
	/* alignment on IE is different than FF */
	af|selectBooleanRadio::content-input,
	af|selectOneRadio::content-input {
		vertical-align: middle;
	}
	af|selectBooleanRadio::native-input,
	af|selectOneRadio::native-input {
		overflow: hidden;
		width: 13px;
		height: 13px;
		margin : 2px;
		padding : 1px;
	}

	af|selectOneRadio::item-text {
		padding-left: 2px;
	}
	af|selectBooleanCheckbox::content-input,
	af|selectManyCheckbox::content-input {
		vertical-align: middle;
	}
	af|selectBooleanCheckbox::content-input,
	af|selectManyCheckbox::content-input,
	af|selectBooleanCheckbox::native-input,
	af|selectManyCheckbox::native-input {
		padding: 0px;
	}
	af|selectBooleanCheckbox::item-text,
	af|selectManyCheckbox::item-text {
		margin: 0px 3px;
	}
	af|selectBooleanCheckbox::native-input,
	af|selectManyCheckbox::native-input {
		overflow: hidden;
		width: 13px;
		height: 13px;
	}
}

@agent ie and (version: 7.0) {
	af|selectBooleanCheckbox::content-input,
	af|selectManyCheckbox::content-input {
		vertical-align: top;
	}
	af|selectBooleanRadio::content-input,
	af|selectBooleanCheckbox::content-input,
	af|selectManyCheckbox::content-input,
	af|selectOneRadio::content-input {
		padding: 2px;
	}

	af|selectBooleanCheckbox::native-input,
	af|selectManyCheckbox::native-input {
		margin: 1px 1px 2px;
	}

	af|selectBooleanRadio::native-input,
	af|selectOneRadio::native-input {
		margin: 0px 2px 2px 1px;
	}
}

.AFPanelFormLayoutContentCell af|selectBooleanCheckbox::native-input {
	margin-top: 8px;
}

/* adjust the padding of the span to give a balanced error and warning background */
af|selectBooleanCheckbox::content-input,
af|selectManyCheckbox::content-input {
	margin: 0px;
}

af|selectBooleanCheckbox::item-text,
af|selectManyCheckbox::item-text {
	margin: 0px 1px;
}
/* disabled styles. Show the item as disabled in selectOneRadio/selectoneRadio */
af|selectBooleanRadio:disabled::content,
af|selectBooleanCheckbox:disabled::content,
af|selectManyCheckbox:disabled::item-text,
af|selectManyCheckbox::item-text:disabled,
af|selectOneRadio:disabled::content,
af|selectOneRadio::item-text:disabled,
af|chooseDate::ampm-item-text:content {
	-tr-rule-ref: selector(".AFFormControlContentForegroundDisabled:alias");
}

/* Underline the access key for SelectBoolean choices */
af|selectBooleanCheckbox::access-key,
af|selectBooleanRadio::access-key {
	-tr-rule-ref: selector(".AFFormAccessKeyStyle:alias");
}

/* Underline the access key for SelectMany choices */
af|selectManyCheckbox::access-key,
af|selectManyShuttle::access-key,
af|selectManyChoice::access-key,
af|selectManyListbox::access-key {
	-tr-rule-ref: selector(".AFFormAccessKeyStyle:alias");
}

/* Private styleclass - do not document.
  This style should not be necessary, but without
  it the IE override is getting dropped!  Looks like
  a bug in the skinning code */
af|selectManyCheckbox::icon-style,
af|selectBooleanCheckbox::icon-style {
	margin: 0px;
}

@agent ie {
	af|selectManyCheckbox::icon-style,
	af|selectBooleanCheckbox::icon-style {
		margin: 2px;
	}
}

af|selectManyCheckbox::selected-icon,
af|selectBooleanCheckbox::selected-icon {
	content: url(/afr/checkMark_readonly.png);
	width: 13px;
	height: 13px;
}

af|selectManyCheckbox::unselected-icon,
af|selectBooleanCheckbox::unselected-icon {
	content: url(/afr/checkMark_NS_readonly.png);
	width: 13px;
	height: 13px;
}

/* commandNavigationItem */

/* style for navItem's icon */
af|commandNavigationItem::icon-style {
	padding-right: 5px;
	vertical-align: middle;
	border: 0px;
}

/* style for navItem's icon when going rtl*/
af|commandNavigationItem::icon-style:rtl {
	padding-left: 5px;
	vertical-align: middle;
	border: 0px;
}

/* Make the border color override the border color from the table entry.  While, in
theory, we could have entries for each possible border color, in practive, this is
overkill, this single color is good enough for all cases
*/
af|region af|region::table,
af|panelBox af|panelBox::table {
	-tr-rule-ref: selector(".AFPanelBoxHighlightDefaultBorder:alias");
}

/* af:panelBox styles */
af|panelBox {
	-tr-animation-duration: 200;
	-tr-header-height: 32px;
	-tr-rule-ref: selector(".MetroPanelBoxBorder:alias");
	margin: auto;
}
@accessibility-profile large-fonts {
	af|panelBox {
		-tr-header-height: 2.5em;
	}
}

af|panelBox:stretched,
af|panelHeader:stretched,
af|showDetailHeader:stretched,
af|query:stretched {
	position: relative;
	width: 500px;
	height: 300px;
	overflow: hidden;
}

af|query:stretched af|query::content0,
af|query:stretched af|query::content1,
af|query:stretched af|query::content2,
af|query:stretched af|query::content3,
af|query:stretched af|query::content4,
af|query:stretched af|query::content5 {
	overflow: auto;
}

/* panelBox table contains the header bottom border */
af|region::table,
af|panelBox::table {
	width: 100%;
	-tr-rule-ref: selector(".MetroPanelBoxHeaderFont:alias");
	-tr-rule-ref: selector(".MetroPanelBoxHeaderBackground:alias");
	font-weight: 700;
	-webkit-font-smoothing: antialiased;
	-moz-osx-font-smoothing: grayscale;
	background-repeat: no-repeat;
	background-position: 0;
}

/* Icon hook for users to replace the undisclosed icon with another img or text */
af|region::undisclosed-icon,
af|panelBox::undisclosed-icon {
	content:url('/component/img_metro/disclosure_collapsed.png');
}

af|query::undisclosed-icon{
	content:url('/component/img_metro/disclosure_collapsed.png');
	height: 11px;
	width:11px;
}

/* Icon hook for users to replace the disclosed icon with another img or text */
af|region::disclosed-icon,
af|panelBox::disclosed-icon {
	content: url('/component/img_metro/disclosure_expanded.png');
}

af|query::disclosed-icon {
	content: url('/component/img_metro/disclosure_expanded.png');
	height: 11px;
	width:11px;
}

/* All panelbox (and region) center content items support l/r 2px padding */
af|region::icon-style,
af|region::disclosure-icon-container,
af|region::header-text,
af|panelBox::icon-style,
af|panelBox::disclosure-icon-container,
af|panelBox::header-text {
	padding: 0px 2px 0px 2px;
	vertical-align: middle;
	white-space:nowrap;
	outline: none;
}

af|region::header-element,
af|panelBox::header-element {
	-tr-rule-ref: selector(".AFDefaultBoldFont:alias");
	-tr-rule-ref: selector(".MetroPanelBoxHeaderFont:alias");
	padding: 5px 0;
	margin: 0;
	width: 100%;
	line-height: 160%
}

af|region::center,
af|panelBox::center {
	-tr-rule-ref: selector(".MetroPanelBoxBorderHeader:alias");
}

af|panelBox::toolbar,
af|panelBox::menu,
af|region::toolbar,
af|region::menu {
	padding: 0px;
	vertical-align: middle;
}

/* Override toolbars padding so it has l/r 2px padding like rest of panelBox center content items */
af|panelBox::toolbar af|toolbar::body {
	padding: 0px 2px 0px 2px;
}

af|panelBox af|panelBox::menu af|menuBar,
af|region af|region::menu af|menuBar{
	border-right: 0px solid #DEADBE;
	background-color:transparent;
	padding: 0px;
}

/* In simple, panelBox uses these various aliases to assign background color and border color.
   In medium, the header aliases are inhibited, and png background images are used instead
     while the content section still uses background color and borders. */
af|panelBox::header-start,
af|panelBox::header-end:rtl,
af|region::header-start,
af|region::header-end:rtl {
	-tr-rule-ref: selector(".AFPanelBoxHeaderStart:alias");
}
af|panelBox::footer-start,
af|panelBox::footer-end:rtl,
af|region::footer-start,
af|region::footer-end:rtl {
	-tr-rule-ref: selector(".AFPanelBoxFooterStart:alias");
}

af|panelBox::header-center,
af|region::header-center {
	-tr-rule-ref: selector(".AFPanelBoxHeaderCenter:alias");
}
af|panelBox::footer-center,
af|region::footer-center {
	-tr-rule-ref: selector(".AFPanelBoxFooterCenter:alias");
}

@agent ie, webkit {
	af|panelBox::header-center {
		text-overflow: ellipsis;
	}
	af|panelBox::footer-center {
		text-overflow: ellipsis;
	}
}

af|panelBox::header-end,
af|panelBox::header-start:rtl,
af|region::header-end,
af|region::header-start:rtl {
	-tr-rule-ref: selector(".AFPanelBoxHeaderEnd:alias");
}
af|panelBox::footer-end,
af|panelBox::footer-start:rtl,
af|region::footer-end,
af|region::footer-start:rtl {
	-tr-rule-ref: selector(".AFPanelBoxFooterEnd:alias");
}

/* panelBox content includes the left, right and bottom borders for the content area */
af|region::content,
af|panelBox::content {
	padding: 8px 8px 0;
}

/* panelBox Core Default */
/* region's only state right now is :core and :default */
af|panelBox::header-start:core:default,
af|panelBox::header-center:core:default,
af|panelBox::header-end:core:default,
af|region::header-start:core:default,
af|region::header-center:core:default,
af|region::header-end:core:default {
	-tr-rule-ref: selector(".AFPanelBoxHeaderCoreDefault:alias");
}
af|panelBox::content:core:default,
af|region::content:core:default {
	-tr-rule-ref: selector(".AFPanelBoxContentCoreDefault:alias");
}

/* panelBox Core Light */
af|panelBox::header-start:core:light,
af|panelBox::header-center:core:light,
af|panelBox::header-end:core:light {
	-tr-rule-ref: selector(".AFPanelBoxHeaderCoreLight:alias");
}

af|panelBox::content:core:light {
	-tr-rule-ref: selector(".AFPanelBoxContentCoreLight:alias");
}

/* panelBox Core Medium */
af|panelBox::header-start:core:medium,
af|panelBox::header-center:core:medium,
af|panelBox::header-end:core:medium {
	-tr-rule-ref: selector(".AFPanelBoxHeaderCoreMedium:alias");
}

af|panelBox::content:core:medium {
	-tr-rule-ref: selector(".AFPanelBoxContentCoreMedium:alias");
}

/* panelBox Core Dark */
af|panelBox::header-start:core:dark,
af|panelBox::header-center:core:dark,
af|panelBox::header-end:core:dark {
	-tr-rule-ref: selector(".AFPanelBoxHeaderCoreDark:alias");
}

af|panelBox::content:core:dark {
	-tr-rule-ref: selector(".AFPanelBoxContentCoreDark:alias");
}

/* panelBox highlight default */
af|panelBox::header-start:highlight:default,
af|panelBox::header-center:highlight:default,
af|panelBox::header-end:highlight:default {
	-tr-rule-ref: selector(".AFPanelBoxHeaderHighlightDefault:alias");
}

af|panelBox::content:highlight:default {
	-tr-rule-ref: selector(".AFPanelBoxContentHighlightDefault:alias");
}

/* panelBox highlight light */
af|panelBox::header-start:highlight:light,
af|panelBox::header-center:highlight:light,
af|panelBox::header-end:highlight:light {
	-tr-rule-ref: selector(".AFPanelBoxHeaderHighlightLight:alias");
}

af|panelBox::content:highlight:light {
	-tr-rule-ref: selector(".AFPanelBoxContentHighlightLight:alias");
}

/* the border between content and header */
af|panelBox::table:highlight:light {
	border-bottom-color: #D7D9B6;
}

/* panelBox Highlight Medium */
af|panelBox::header-start:highlight:medium,
af|panelBox::header-center:highlight:medium,
af|panelBox::header-end:highlight:medium {
	-tr-rule-ref: selector(".AFPanelBoxHeaderHighlightMedium:alias");
}

af|panelBox::content:highlight:medium {
	-tr-rule-ref: selector(".AFPanelBoxContentHighlightMedium:alias");
}

/* the border between content and header */
af|panelBox::table:highlight:medium {
	border-bottom-color: #CCC5A5;
}

/* panelBox Highlight Dark */
af|panelBox::header-start:highlight:dark,
af|panelBox::header-center:highlight:dark,
af|panelBox::header-end:highlight:dark {
	-tr-rule-ref: selector(".AFPanelBoxHeaderHighlightDark:alias");
}

af|panelBox::content:highlight:dark {
	-tr-rule-ref: selector(".AFPanelBoxContentHighlightDark:alias");
}

/* the border between content and header */
af|panelBox::table:highlight:dark {
	border-bottom-color: #8FA6A0;
}

/* end panelBox in simple */

/* start of panelFormLayout styles */


/* Provides additional nesting to forms in addition to the padding from
   .AFPanelFormLayoutContentCell */


/* The styles for a form item when the form item is being rendered in a panelFormLayout (as opposed
   to being rendered stand-alone or in some other kind of form layout component).
   The panelLabelAndMessage component is an example of one component whose padding needs to be
   adjusted when placed in a panelFormLayout vs. being stand-alone on the page. The
   af|panelFormLayout::content-cell was added for cases when */
.AFPanelFormLayoutContentCell {
	-tr-rule-ref: selector(".AFPanelFormLayoutHorizontalPadding:alias");
	-tr-rule-ref: selector(".AFStartTextAlign:alias");
	vertical-align: top;
	-tr-rule-ref: selector(".AFDefaultFontFamily:alias");
}
.p_AFReadOnly .AFPanelFormLayoutContentCell {
  padding-top: 7px;
}
/* end of panelFormLayout styles */


/* start of panelLabelAndMessage styles */

af|panelLabelAndMessage {
}

/* Underline the access key for panelLabelAndMessage labels */
af|panelLabelAndMessage::access-key{
	-tr-rule-ref: selector(".AFFormAccessKeyStyle:alias");
}

/* Inherit from trinidad */
af|panelLabelAndMessage::label {
}

/* The main content cell, contains child components and the end facet */
af|panelLabelAndMessage::content-cell {
}

af|panelLabelAndMessage::end-facet {
	-tr-rule-ref: selector(".AFDefaultFont:alias");
	-tr-rule-ref: selector(".AFStartPadding:alias");
}

/* start private */

/* help facet is private until we have a resolution on how we are handling help facets */
af|panelLabelAndMessage::help-facet {
	-tr-rule-ref: selector(".AFSmallFont:alias");
	-tr-rule-ref: selector(".AFLabelTextForeground:alias");
}

/* end private */

/* end of panelLabelAndMessage styles */

/* start of decorativeBox styles */
af|decorativeBox {
	-tr-rule-ref: selector(".MetroPageBlock:alias");
	/*
   We tack on a "font-size:small" onto af|decorativeBox.  This way, "em" units on topHeight, etc.
   will always resolve to a consistent number of pixels by the browser no matter what the font-size
   is set to on the parent element of the decorativeBox.  A very common use case might be to specify
   a topHeight value equal af|navigationPane-tabs-tr-tab-bar-height which might be an "em" value.
  */
	width: 500px;
	height: 300px;
	/*
  min-width is required for IE7 compatibility in displaying the center facet contents in flow mode
  */
	min-width: 10px;
	overflow: hidden;
}

af|decorativeBox::center {
	padding: 0px;
}
/* end of decorativeBox styles */

af|panelStretchLayout {
	position: relative;
	width: 500px;
	height: 300px;
	overflow: hidden;
}

/* This icon gives a graphical representation that content is loading (e.g. carousel, inlineFrame).
   If you are editing this alias, you should also edit .AFStatusIconStyle:alias and
   .AFBackgroundImageStatus:alias since components will choose among these icons automatically
   under the necessary circumstances.
   This typically defines a content URL for an animated image, the width of this image, and the
   height of this image. */
.AFStatusIcon:alias {
	content: url(/afr/ring_60.gif);
	width: 60px;
	height: 60px;
}

/* This style is for the element that contains a .AFStatusIcon:alias icon (e.g. carousel,
   inlineFrame).
   If you are editing this alias, you should also edit .AFStatusIcon:alias and
   .AFBackgroundImageStatus:alias since components will choose among these icons automatically
   under the necessary circumstances.
   This typically defines a background-image to an alpha-transparent image that lets
   a binary-transparent animated status-icon image blend well on any background when these 2 images
   are stacked.  It also typically defines a width and height are for the dimensions of this
   element. */
.AFStatusIconStyle:alias {
	background-repeat: no-repeat;
	background-position: center center;
	background-image: url('/afr/cloud_60.png');
	width: 60px;
	height: 60px;
}

/* This style is for an element that displays a loading status icon when
    the other loading status icon selectors (.AFStatusIcon:alias and
   .AFStatusIconStyle:alias) cannot be used (like an inlineFrame
   that isn't being stretched by its parent component).
   If you are editing this alias, you should also edit .AFStatusIcon:alias and
   .AFStatusIconStyle:alias since components will choose among these icons automatically
   under the necessary circumstances.
   This typically defines a background-image that references a single image
   file that is animated and binary-transparent.  However, in browsers that
   support it, you can use this to define multiple concurrent background
   images where one image is animated and binary-transparent and the
   other image is non-animated and alpha-transparent so that the
   overall combined icon will blend smoothly with whatever coloring is
   behind the icon. */
.AFBackgroundImageStatus:alias {
	background-repeat: no-repeat, no-repeat;
	background-position: center center, center center;
	background-image: url('/afr/ring_60.gif'), url('/afr/cloud_60.png');
}
/* No version of Internet Explorer supports multiple background images and instead use a version of
   the ring that will be more legible without the cloud behind it. */
@agent ie {
	.AFBackgroundImageStatus:alias {
		background-repeat: no-repeat;
		background-position: center center;
		background-image: url('/afr/ring_primordial_60.gif');
	}
}
/* Firefox versions earlier than 3.6 (Gecko 1.9.2.0) do no support multiple background images and
   instead use a version of the ring that will be more legible without the cloud behind it.
   Note that this version of Trinidad does not support max-version so this definition uses several or-ed versions. */
@agent gecko and (version: 1.7) {
	.AFBackgroundImageStatus:alias {
		background-repeat: no-repeat;
		background-position: center center;
		background-image: url('/afr/ring_primordial_60.gif');
	}
}
@agent gecko and (version: 1.8) {
	.AFBackgroundImageStatus:alias {
		background-repeat: no-repeat;
		background-position: center center;
		background-image: url('/afr/ring_primordial_60.gif');
	}
}
@agent gecko and (version: 1.9.0) {
	.AFBackgroundImageStatus:alias {
		background-repeat: no-repeat;
		background-position: center center;
		background-image: url('/afr/ring_primordial_60.gif');
	}
}
@agent gecko and (version: 1.9.1) {
	.AFBackgroundImageStatus:alias {
		background-repeat: no-repeat;
		background-position: center center;
		background-image: url('/afr/ring_primordial_60.gif');
	}
}

/* Style for the root DOM element of the inlineFrame component.
   Typically no styles would be defined with this selector but for backward-compatibility purposes,
   this can be used for defining a background-image that will be displayed as a loading indicator
   when the iframe is not being stretched by an ancestor using af|inlineFrame:busy:flow.
   See af|inlineFrame::status-icon and af|inlineFrame::status-icon-style for the case when it is
   being stretched by an ancestor.
   It is suggested to use the .AFBackgroundImageStatus:alias rule ref in this selector when the
   busy pseudo-class is used. */
af|inlineFrame {
	/* intentionally empty:
     - see fusionFx-v1-desktop.css where these icons are actually used
     - this goes for af|inlineFrame::status-icon and af|inlineFrame::status-icon-style too */
}

/* This style is for the element that contains the status-icon.  This typically defines a
   background-image to an alpha-transparent image that lets a binary-transparent animated
   status-icon image blend well on any background when these 2 images are stacked.  Also typically a
   width and height are defined for the dimensions of this container.  It is suggested to use the
   .AFStatusIconStyle:alias rule ref in this selector.
   For backward-compatibility purposes, this selector is only used on inlineFrames that are
   stretched by their ancestor. */
af|inlineFrame::status-icon-style {
	display: none; /* hidden by default */
	position: absolute;
	top: 50%;
	left: 50%;
	margin-left: -30px;
	margin-top: -30px;
}
af|inlineFrame:busy af|inlineFrame::status-icon-style {
	display: block; /* only shown when the inlineFrame is currently busy */
}

/* Make the top border of selectable iframe's big enough for user's to click on */
af|inlineFrame:inline-selectable {
	border-top: 10px solid blue;
}

/* Gecko outline doesn't seem to work on iframes, so use normal selection style */
@agent gecko {
	af|inlineFrame:inline-selected {
		-tr-rule-ref: selector(".AFInlineSelected:alias");
	}
}

af|carousel,
af|carouselItem {
	position: relative;
	width: 500px;
	height: 300px;
	overflow: hidden;
}
af|carousel {
	-tr-spin-animation-duration: 200;
	-tr-status-type: text;
}
/* IE performs animations very poorly when elements have opacity set, disable them for IE. */
@agent ie {
	af|carousel {
		-tr-overlay-opacity: none;
	}
}
/* Prior to Gecko 1.9.1, Gecko performs animations very poorly when elements have opacity set,
   disable them for these versions of Gecko. */
@agent gecko and (version: 1.9.0) and (version: 1.8) {
	af|carousel {
		-tr-overlay-opacity: none;
	}
}

/*
 * Printable panel stretch layout: turn off width, height and overflow.  This
 * should perhaps be a @media selector, but then it would
 * not show up as expected during viewing of the printable page,
 * and skinning doesn't yet support @media!
 * TODO AdamWiner: it is not obvious to me why position:static actually
 *  fixes it.  A CSS master needs to figure out the right thing.
 */
af|carousel:printable,
af|carouselItem:printable,
af|panelStretchLayout:printable {
	position:static;
	overflow:visible;
}
af|carousel:printable {
	height: auto;
}
af|carouselItem:printable {
	overflow: visible;
	width: auto;
	height: auto;
}

/* alias for the decoration around the af|carousel::item and af:carousel::view to provide its border or shadows */
.AFCarouselItemBorder:alias {
	border: 1px solid gray;
}

/* The is the databody viewport.
   The typical styles that one would apply to this pseudo element would be possibly a border or shadow but only if
   displayItems="oneByOne", never any styles for displayItems="circular". */
af|carousel::view {
	position: absolute;
	top: 0;
	bottom: 0;
	left: 0;
	right: 0;
	overflow: hidden;
}
af|carousel::view:one-by-one {
	-tr-rule-ref: selector(".AFCarouselItemBorder:alias");
}

af|carousel::item {
	display: none;
	background-color: white;
	color: black;
	-tr-children-theme: default;
	overflow: hidden;
	position: absolute;
}
af|carousel::item:circular {
	-tr-rule-ref: selector(".AFCarouselItemBorder:alias");
}

/* The overlay provides a visual indication that a given item is not selected, e.g. sits in the
   background. */
af|carousel::item-overlay {
	background-color: white;
	top: 0px;
	bottom: 0px;
	left: 0px;
	right: 0px;
	position: absolute;
	display: none;
}

/* Container for the control area.
   Use this for defining a background color or border if desired. */
af|carousel::control-area {
	position: absolute;
	top: 0px;
	bottom: 0px;
	left: 0px;
	right: 0px;
	overflow: hidden;
}
af|carousel::control-area:small,
af|carousel::control-area:compact {
	top: auto;
}

/* Container for displaying the spun-to item's text attribute. */
af|carousel::item-text {
	-tr-rule-ref: selector(".AFDefaultBoldFont:alias");
	position: absolute;
	text-align: center;
	white-space: nowrap;
	overflow: hidden;
}
@agent ie, webkit {
	af|carousel::item-text {
		text-overflow: ellipsis;
	}
}
af|carousel::item-text:vertical,
af|carousel::control-area:small:vertical,
af|carousel::control-area:compact:vertical {
	z-index: 301;
	background-color: white;
	color: black;
	border: 1px solid gray;
	padding: 2px;
}
af|carousel::item-text:small,
af|carousel::item-text:compact {
	padding: 0px 2px;
}
af|carousel::item-text:vertical:small,
af|carousel::item-text:vertical:compact {
	border: 0px solid transparent;
}

/* Container for displaying the currently selected item number, e.g. "4" or "4 of 11". */
af|carousel::spin-info {
	-tr-rule-ref: selector(".AFDefaultFont:alias");
	white-space: nowrap;
	position: absolute;
	left: 0px;
	bottom: 0px;
	right: 0px;
	overflow: hidden;
	text-align: center;
}
af|carousel::spin-info:vertical:ltr {
	left: auto;
	top: 0px;
	text-align: left;
	white-space: normal;
}
af|carousel::spin-info:vertical:rtl {
	right: auto;
	top: 0px;
	text-align: right;
	white-space: normal;
}
af|carousel::spin-info:small:vertical,
af|carousel::spin-info:compact:vertical {
	top: auto;
	bottom: 0px;
	left: 0px;
	right: 0px;
	text-align: center;
}

af|carousel::spin-bar {
	background-repeat: repeat-x;
	background-image: url('/afr/carousel-spin-bar-h.png');
	background-position: center center;
	overflow: hidden;
	position: absolute;
	left: 15%;
	right: 15%;
	height: 24px;
}
af|carousel::spin-bar:disabled {
	background-image: url('/afr/carousel-spin-bar-h-d.png');
}

af|carousel::spin-bar:vertical {
	background-repeat: repeat-y;
	background-image: url('/afr/carousel-spin-bar-v.png');
	top: 10%;
	bottom: 10%;
	width: 24px;
	left: auto;
	right: auto;
	height: auto;
}
af|carousel::spin-bar:vertical:disabled {
	background-image: url('/afr/carousel-spin-bar-v-d.png');
}

af|carousel::spin-h-previous-icon,
af|carousel::spin-h-thumb-icon,
af|carousel::spin-h-next-icon,
af|carousel::spin-v-previous-icon,
af|carousel::spin-v-thumb-icon,
af|carousel::spin-v-next-icon {
	content: inhibit;
}

/* Disabled buttons should not give the appearance of being clickable. */
af|carousel::spin-h-previous-icon-style:disabled,
af|carousel::spin-h-next-icon-style:disabled,
af|carousel::spin-v-previous-icon-style:disabled,
af|carousel::spin-v-next-icon-style:disabled {
	cursor: default;
}

af|carousel::spin-h-previous-icon-style,
af|carousel::spin-h-thumb-icon-style,
af|carousel::spin-h-next-icon-style {
	background-repeat: no-repeat;
	position: absolute;
	height: 24px;
	width: 11px;
}

af|carousel::spin-v-previous-icon-style,
af|carousel::spin-v-thumb-icon-style,
af|carousel::spin-v-next-icon-style {
	background-repeat: no-repeat;
	position: absolute;
	height: 11px;
	width: 24px;
}

af|carousel::spin-h-previous-icon-style:ltr,
af|carousel::spin-h-next-icon-style:rtl {
	background-image: url('/afr/carousel-spin-left.png');
	right: 85%;
}
af|carousel::spin-h-previous-icon-style:disabled:ltr,
af|carousel::spin-h-next-icon-style:disabled:rtl {
	background-image: url('/afr/carousel-spin-left-d.png');
}

af|carousel::spin-h-next-icon-style:ltr,
af|carousel::spin-h-previous-icon-style:rtl {
	background-image: url('/afr/carousel-spin-right.png');
	left: 85%;
}
af|carousel::spin-h-next-icon-style:disabled:ltr,
af|carousel::spin-h-previous-icon-style:disabled:rtl {
	background-image: url('/afr/carousel-spin-right-d.png');
}

af|carousel::spin-v-previous-icon-style {
	background-image: url('/afr/carousel-spin-up.png');
	bottom: 90%;
}
af|carousel::spin-v-previous-icon-style:disabled {
	background-image: url('/afr/carousel-spin-up-d.png');
}

af|carousel::spin-v-next-icon-style {
	background-image: url('/afr/carousel-spin-down.png');
	top: 90%;
}
af|carousel::spin-v-next-icon-style:disabled {
	background-image: url('/afr/carousel-spin-down-d.png');
}

af|carousel::spin-h-thumb-icon-style {
	background-image: url('/afr/carousel-spin-marker-h.png');
}
af|carousel::spin-h-thumb-icon-style:disabled {
	background-image: url('/afr/carousel-spin-marker-h-d.png');
}

af|carousel::spin-v-thumb-icon-style:ltr {
	background-image: url('/afr/carousel-spin-marker-v.png');
}
af|carousel::spin-v-thumb-icon-style:disabled:ltr {
	background-image: url('/afr/carousel-spin-marker-v-d.png');
}
af|carousel::spin-v-thumb-icon-style:rtl {
	background-image: url('/afr/carousel-spin-marker-v-rtl.png');
}
af|carousel::spin-v-thumb-icon-style:disabled:rtl {
	background-image: url('/afr/carousel-spin-marker-v-rtl-d.png');
}

af|carousel::spin-h-previous-icon-style:compact,
af|carousel::spin-h-previous-icon-style:small,
af|carousel::spin-v-previous-icon-style:compact,
af|carousel::spin-v-previous-icon-style:small {
	width: 18px;
	height: 17px;
	top: 0px;
	bottom: auto;
}
af|carousel::spin-h-next-icon-style:compact,
af|carousel::spin-h-next-icon-style:small,
af|carousel::spin-v-next-icon-style:compact,
af|carousel::spin-v-next-icon-style:small {
	width: 18px;
	height: 17px;
	top: 0px;
	bottom: auto;
}
af|carousel::spin-h-previous-icon-style:compact:ltr,
af|carousel::spin-h-previous-icon-style:small:ltr,
af|carousel::spin-v-previous-icon-style:compact:ltr,
af|carousel::spin-v-previous-icon-style:small:ltr,
af|carousel::spin-h-next-icon-style:compact:rtl,
af|carousel::spin-h-next-icon-style:small:rtl,
af|carousel::spin-v-next-icon-style:compact:rtl,
af|carousel::spin-v-next-icon-style:small:rtl {
	left: 0px;
	right: auto;
}
af|carousel::spin-h-previous-icon-style:compact:rtl,
af|carousel::spin-h-previous-icon-style:small:rtl,
af|carousel::spin-v-previous-icon-style:compact:rtl,
af|carousel::spin-v-previous-icon-style:small:rtl,
af|carousel::spin-h-next-icon-style:compact:ltr,
af|carousel::spin-h-next-icon-style:small:ltr,
af|carousel::spin-v-next-icon-style:compact:ltr,
af|carousel::spin-v-next-icon-style:small:ltr {
	left: auto;
	right: 0px;
}

af|carousel::spin-h-previous-icon-style:compact:ltr,
af|carousel::spin-h-previous-icon-style:small:ltr {
	background-image: url('/afr/singleCard_left_ena.png');
}
af|carousel::spin-h-previous-icon-style:compact:hover:ltr,
af|carousel::spin-h-previous-icon-style:small:hover:ltr {
	background-image: url('/afr/singleCard_left_ovr.png');
}
af|carousel::spin-h-previous-icon-style:compact:active:hover:ltr,
af|carousel::spin-h-previous-icon-style:small:active:hover:ltr {
	background-image: url('/afr/singleCard_left_dwn.png');
}
af|carousel::spin-h-previous-icon-style:compact:disabled:ltr,
af|carousel::spin-h-previous-icon-style:compact:disabled:hover:ltr,
af|carousel::spin-h-previous-icon-style:compact:disabled:active:hover:ltr,
af|carousel::spin-h-previous-icon-style:small:disabled:ltr,
af|carousel::spin-h-previous-icon-style:small:disabled:hover:ltr,
af|carousel::spin-h-previous-icon-style:small:disabled:active:hover:ltr {
	background-image: url('/afr/singleCard_left_dis.png');
}

af|carousel::spin-h-next-icon-style:compact:ltr,
af|carousel::spin-h-next-icon-style:small:ltr {
	background-image: url('/afr/singleCard_right_ena.png');
}
af|carousel::spin-h-next-icon-style:compact:hover:ltr,
af|carousel::spin-h-next-icon-style:small:hover:ltr {
	background-image: url('/afr/singleCard_right_ovr.png');
}
af|carousel::spin-h-next-icon-style:compact:active:hover:ltr,
af|carousel::spin-h-next-icon-style:small:active:hover:ltr {
	background-image: url('/afr/singleCard_right_dwn.png');
}
af|carousel::spin-h-next-icon-style:compact:disabled:ltr,
af|carousel::spin-h-next-icon-style:compact:disabled:hover:ltr,
af|carousel::spin-h-next-icon-style:compact:disabled:active:hover:ltr,
af|carousel::spin-h-next-icon-style:small:disabled:ltr,
af|carousel::spin-h-next-icon-style:small:disabled:hover:ltr,
af|carousel::spin-h-next-icon-style:small:disabled:active:hover:ltr {
	background-image: url('/afr/singleCard_right_dis.png');
}

af|carousel::spin-v-previous-icon-style:compact:ltr,
af|carousel::spin-v-previous-icon-style:small:ltr {
	background-image: url('/afr/singleCard_up_ena.png');
}
af|carousel::spin-v-previous-icon-style:compact:hover:ltr,
af|carousel::spin-v-previous-icon-style:small:hover:ltr {
	background-image: url('/afr/singleCard_up_ovr.png');
}
af|carousel::spin-v-previous-icon-style:compact:active:hover:ltr,
af|carousel::spin-v-previous-icon-style:small:active:hover:ltr {
	background-image: url('/afr/singleCard_up_dwn.png');
}
af|carousel::spin-v-previous-icon-style:compact:disabled:ltr,
af|carousel::spin-v-previous-icon-style:compact:disabled:hover:ltr,
af|carousel::spin-v-previous-icon-style:compact:disabled:active:hover:ltr,
af|carousel::spin-v-previous-icon-style:small:disabled:ltr,
af|carousel::spin-v-previous-icon-style:small:disabled:hover:ltr,
af|carousel::spin-v-previous-icon-style:small:disabled:active:hover:ltr {
	background-image: url('/afr/singleCard_up_dis.png');
}

af|carousel::spin-v-next-icon-style:compact:ltr,
af|carousel::spin-v-next-icon-style:small:ltr {
	background-image: url('/afr/singleCard_down_ena.png');
}
af|carousel::spin-v-next-icon-style:compact:hover:ltr,
af|carousel::spin-v-next-icon-style:small:hover:ltr {
	background-image: url('/afr/singleCard_down_ovr.png');
}
af|carousel::spin-v-next-icon-style:compact:active:hover:ltr,
af|carousel::spin-v-next-icon-style:small:active:hover:ltr {
	background-image: url('/afr/singleCard_down_dwn.png');
}
af|carousel::spin-v-next-icon-style:compact:disabled:ltr,
af|carousel::spin-v-next-icon-style:compact:disabled:hover:ltr,
af|carousel::spin-v-next-icon-style:compact:disabled:active:hover:ltr,
af|carousel::spin-v-next-icon-style:small:disabled:ltr,
af|carousel::spin-v-next-icon-style:small:disabled:hover:ltr,
af|carousel::spin-v-next-icon-style:small:disabled:active:hover:ltr {
	background-image: url('/afr/singleCard_down_dis.png');
}

af|carousel::spin-h-previous-icon-style:compact:rtl,
af|carousel::spin-h-previous-icon-style:small:rtl {
	background-image: url('/afr/singleCard_right_ena_rtl.png');
}
af|carousel::spin-h-previous-icon-style:compact:hover:rtl,
af|carousel::spin-h-previous-icon-style:small:hover:rtl {
	background-image: url('/afr/singleCard_right_ovr_rtl.png');
}
af|carousel::spin-h-previous-icon-style:compact:active:hover:rtl,
af|carousel::spin-h-previous-icon-style:small:active:hover:rtl {
	background-image: url('/afr/singleCard_right_dwn_rtl.png');
}
af|carousel::spin-h-previous-icon-style:compact:disabled:rtl,
af|carousel::spin-h-previous-icon-style:compact:hover:disabled:rtl,
af|carousel::spin-h-previous-icon-style:compact:active:hover:disabled:rtl,
af|carousel::spin-h-previous-icon-style:small:disabled:rtl,
af|carousel::spin-h-previous-icon-style:small:disabled:hover:rtl,
af|carousel::spin-h-previous-icon-style:small:disabled:active:hover:rtl {
	background-image: url('/afr/singleCard_right_dis_rtl.png');
}

af|carousel::spin-h-next-icon-style:compact:rtl,
af|carousel::spin-h-next-icon-style:small:rtl {
	background-image: url('/afr/singleCard_left_ena_rtl.png');
}
af|carousel::spin-h-next-icon-style:compact:hover:rtl,
af|carousel::spin-h-next-icon-style:small:hover:rtl {
	background-image: url('/afr/singleCard_left_ovr_rtl.png');
}
af|carousel::spin-h-next-icon-style:compact:active:hover:rtl,
af|carousel::spin-h-next-icon-style:small:active:hover:rtl {
	background-image: url('/afr/singleCard_left_dwn_rtl.png');
}
af|carousel::spin-h-next-icon-style:compact:disabled:rtl,
af|carousel::spin-h-next-icon-style:compact:disabled:hover:rtl,
af|carousel::spin-h-next-icon-style:compact:disabled:active:hover:rtl,
af|carousel::spin-h-next-icon-style:small:disabled:rtl,
af|carousel::spin-h-next-icon-style:small:disabled:hover:rtl,
af|carousel::spin-h-next-icon-style:small:disabled:active:hover:rtl {
	background-image: url('/afr/singleCard_left_dis_rtl.png');
}

af|carousel::spin-v-previous-icon-style:compact:rtl,
af|carousel::spin-v-previous-icon-style:small:rtl {
	background-image: url('/afr/singleCard_up_ena_rtl.png');
}
af|carousel::spin-v-previous-icon-style:compact:hover:rtl,
af|carousel::spin-v-previous-icon-style:small:hover:rtl {
	background-image: url('/afr/singleCard_up_ovr_rtl.png');
}
af|carousel::spin-v-previous-icon-style:compact:active:hover:rtl,
af|carousel::spin-v-previous-icon-style:small:active:hover:rtl {
	background-image: url('/afr/singleCard_up_dwn_rtl.png');
}
af|carousel::spin-v-previous-icon-style:compact:disabled:rtl,
af|carousel::spin-v-previous-icon-style:compact:disabled:hover:rtl,
af|carousel::spin-v-previous-icon-style:compact:disabled:active:hover:rtl,
af|carousel::spin-v-previous-icon-style:small:disabled:rtl,
af|carousel::spin-v-previous-icon-style:small:disabled:hover:rtl,
af|carousel::spin-v-previous-icon-style:small:disabled:active:hover:rtl {
	background-image: url('/afr/singleCard_up_dis_rtl.png');
}

af|carousel::spin-v-next-icon-style:compact:rtl,
af|carousel::spin-v-next-icon-style:small:rtl {
	background-image: url('/afr/singleCard_down_ena_rtl.png');
}
af|carousel::spin-v-next-icon-style:compact:hover:rtl,
af|carousel::spin-v-next-icon-style:small:hover:rtl {
	background-image: url('/afr/singleCard_down_ovr_rtl.png');
}
af|carousel::spin-v-next-icon-style:compact:active:hover:rtl,
af|carousel::spin-v-next-icon-style:small:active:hover:rtl {
	background-image: url('/afr/singleCard_down_dwn_rtl.png');
}
af|carousel::spin-v-next-icon-style:compact:disabled:rtl,
af|carousel::spin-v-next-icon-style:compact:disabled:hover:rtl,
af|carousel::spin-v-next-icon-style:compact:disabled:active:hover:rtl,
af|carousel::spin-v-next-icon-style:small:disabled:rtl,
af|carousel::spin-v-next-icon-style:small:disabled:hover:rtl,
af|carousel::spin-v-next-icon-style:small:disabled:active:hover:rtl {
	background-image: url('/afr/singleCard_down_dis_rtl.png');
}

af|carousel::status-message {
	-tr-rule-ref: selector(".AFDataCollectionStatusMessage:alias");
}

/* This icon (that is an alternative to the af|carousel::status-message) gives a graphical
   representation that the carousel content is loading if the af|carousel skin property
   -tr-status-type is set to icon. This typically defines a content URL for an animated image, the
   width of this image, and the height of this image.
   It is suggested to use the .AFStatusIcon:alias rule ref in this selector. */
af|carousel::status-icon {
	content: url(/afr/ring_60.gif); /* remove this content style after bug 9836923 is fixed */
	-tr-rule-ref: selector(".AFStatusIcon:alias");
}

/* This style is for the element that contains the status-icon (if used).  This typically defines a
   background-image to an alpha-transparent image that lets a binary-transparent animated
   status-icon image blend well on any background when these 2 images are stacked.  Also typically a
   width and height are defined for the dimensions of this container.  It is suggested to use the
   .AFStatusIconStyle:alias rule ref in this selector. */
af|carousel::status-icon-style {
	-tr-rule-ref: selector(".AFStatusIconStyle:alias");
}

/* region styles */
af|region {
}

/*
  tree Styles
*/

af|treeTable::expanded-icon-style,
af|treeTable::collapsed-icon-style {
	cursor: pointer;
}

/*
  Tree Hierarchical Selector Styles.>
To see  af|tree::h-selector-connector you should right click on a node that is more than one
level deep (not a child node, but a grandchild node) and say Show as Top. Then you click on
the selector icon.
*/
/* private */
af|tree::h-selector-spacer {
	background-image: url('/afr/blank.gif');
	width:16px;
	height:16px;
}
/* private */
af|tree::h-selector-connector {
	background-image: url('/afr/connector.png');
	background-repeat:no-repeat;
	padding:0px;
	width:16px;
	height:16px;
}
/* private */
af|tree::h-selector-link {
	text-decoration: none;
	cursor : pointer;
	min-height:1.3em;
}

/* private */
af|tree::h-selector-row:selected af|tree::node-stamp-text {
	-tr-rule-ref: selector(".AFLinkForeground:alias");
	-tr-rule-ref: selector(".AFDarkBackground:alias");
	cursor : pointer;
}

af|tree::h-selector-row af|tree::node-stamp-text{
	cursor : pointer;
}

/*
  treeTable Styles
*/

af|treeTable
{
	-tr-rule-ref: selector(".AFLightAccentBackground:alias");
	overflow:hidden;
	position:relative;
	/*27.27em equals 300px for 11px font size*/
	width: 27.27em;
	height: 27.27em;
	-tr-border-left-width: 0;
	-tr-border-right-width: 1;
	-tr-padding-left-width: 2;
	-tr-padding-right-width: 2;

	-tr-node-indentation: 16;
	-tr-node-disclosure-animation-duration: 200;
	border: 1px solid #e7e8ec;
}

/**
 * Do not show any color feedback on the treeTable for drop. The feedback is shown based on rowKey
 */
af|treeTable:drop-target
{
	background-color:transparent;
}

/* Icon hook for users to replace icons with alternate img or text */
af|treeTable::expanded-icon,
af|treeTable::collapsed-icon,
af|treeTable::selector-icon,
af|treeTable::leaf-icon,
af|treeTable::node-anim-icon,
af|table::disclosed-icon,
af|table::undisclosed-icon {
	content: inhibit;
}

af|treeTable::expanded-icon-style:rtl,
af|treeTable::collapsed-icon-style:rtl,
af|treeTable::leaf-icon-style:rtl {
	padding-left: 9px;
	padding-right: 0px;
}

af|treeTable::expanded-icon-style {
	-tr-rule-ref: selector(".AFClickableImageAnchor:alias");
	background-image: url("/afr/disclosure_expanded.png");
	padding-right: 9px;
	background-position: center center;
	margin-left: 0px;
	margin-right: 0px;
	font-size: 9px;
	height: 9px;
}

af|treeTable::collapsed-icon-style {
	-tr-rule-ref: selector(".AFClickableImageAnchor:alias");
	background-image:url("/afr/disclosure_collapsed.png");
	padding-right: 9px;
	background-position: center center;
	margin-left: 0px;
	margin-right: 0px;
	font-size: 9px;
	height: 9px;
}

/* This is a 'blank' image to keep things lined up when we are viewing a leaf node */
af|treeTable::leaf-icon-style {
	-tr-rule-ref: selector(".AFClickableImageAnchor:alias");
	background-image:url("/afr/leaf.png");
	padding-right: 9px;
	background-position: center center;
	margin-left: 0px;
	margin-right: 0px;
	font-size: 9px;
	height: 9px;
}

af|treeTable::expanded-icon-style,
af|treeTable::collapsed-icon-style,
af|treeTable::node-anim-icon-style
af|treeTable::leaf-icon-style{
	vertical-align: middle;
}

af|treeTable::selector-icon-style {
	-tr-rule-ref: selector(".AFClickableImageAnchor:alias");
	background-image:url("/afr/hierchselector_ena.png");
	background-position: top;
	margin: 0px;
}

/* This is an animated icon rendered during data fetch when a node is expanded */
af|treeTable::node-anim-icon-style {
	-tr-rule-ref: selector(".AFClickableImageAnchor:alias");
	background-image:url("/afr/node_anim.gif");
	padding-right: 9px;
	background-position: center center;
	margin-left: 0px;
	margin-right: 0px;
	font-size: 9px;
	height: 9px;
}

af|treeTable::selector-icon-style:hover {
	-tr-rule-ref: selector(".AFClickableImageAnchor:alias");
	background-image:url("/afr/hierchselector_ovr.png");
	background-position: top;
	margin: 0px;
}

af|treeTable::selector-icon-style:active {
	-tr-rule-ref: selector(".AFClickableImageAnchor:alias");
	background-image:url("/afr/hierchselector_dwn.png");
	background-position: top;
	margin: 0px;
}

af|treeTable::selector-icon-style:rtl {
	-tr-rule-ref: selector(".AFClickableImageAnchor:alias");
	background-image:url("/afr/hierchselector_ena_rtl.png");
	background-position: top;
	margin: 0px;
}

af|treeTable::selector-icon-style:hover:rtl {
	-tr-rule-ref: selector(".AFClickableImageAnchor:alias");
	background-image:url("/afr/hierchselector_ovr_rtl.png");
	background-position: top;
	margin: 0px;
}

af|treeTable::selector-icon-style:active:rtl {
	-tr-rule-ref: selector(".AFClickableImageAnchor:alias");
	background-image:url("/afr/hierchselector_dwn_rtl.png");
	background-position: top;
	margin: 0px;
}


/* private */
af|treeTable::icon-container {
	margin-left:5px;
	margin-right:5px;
}

af|treeTable::icon-container:rtl {
	margin-left:5px;
	margin-right:0px;
}

af|treeTable::expansion {
	text-decoration: none;
}

af|treeTable::focus {
	text-decoration: none;
}

/* ShowDetail Styles */
af|showDetail {
}

/*
  private
*/
af|showDetail::table{
	border-width: 0px;
	padding: 0px;
	width: 100%;
}

af|query::disclosure-icon-container,
af|showDetailHeader::disclosure-icon-container,
af|showDetail::icon-container {
	padding-left: 5px;
	padding-right: 2px;
	width: 10px;
	vertical-align: middle;
}

af|query::disclosure-icon-container:rtl,
af|showDetailHeader::disclosure-icon-container:rtl,
af|showDetail::icon-container:rtl {
	padding-left: 2px;
	padding-right: 5px;
}

af|region::disclosure-link,
af|query::disclosure-link,
af|showDetail::disclosure-link,
af|panelBox::disclosure-link,
af|showDetailHeader::disclosure-link {
	cursor: default;
	outline: none;
}

af|showDetail::header-text{
	-tr-rule-ref: selector(".AFDefaultBoldFont:alias");
	vertical-align: middle;
}

af|showDetail::child-container{
	vertical-align: top;
}

/*
 * PanelHeader/ShowDetailHeader Styles
 */

/* Main component style
   Note: Do not set width 100% on panelHeader, showDetailHeader or query or you will break header title stretching */
af|showDetailHeader,
af|query {
}

af|panelHeader {
	-tr-header-height : 35px;
}

/* Placing relatively-positioned components inside of a flowing header may void initial resize
   notifications because IE7 (and IE8) report the panelHeader's clientWidth and clientHeight as 0
   under these circumstances. By assigning a minimum height value, this will allow the initial
   resize notifications to occur and things like a lazy carousel data fetch will invoke. */
@agent ie {
	af|panelHeader,
	af|showDetailHeader {
		min-height: 1px;
	}
}

/* private */
af|panelHeader::title-table,
af|showDetailHeader::title-table,
af|query::title-table {
	-tr-rule-ref: selector(".MetroPageBlockHeader:alias");
	padding: 0 10px;
	height: 34px;
	line-height: 34px;
	font-size: 14px;
	width: 100%;
 }

af|panelHeader::title-table H1,
af|showDetailHeader::title-table H1,
af|query::title-table H1 {
	line-height: 34px;
	font-size: 14px;
	padding: 0;
	margin: 0;
}

af|panelHeader::icon-style,
af|showDetailHeader::icon-style{
	margin-right: 2px;
	vertical-align: middle;
}

/* private
   - DIV containing the title text, manipulated by client to handle truncation and stretching. */
af|panelHeader::title-text-cell,
af|showDetailHeader::title-text-cell,
af|query::title-text-cell {
	white-space: nowrap;
	overflow: hidden;
}

/* Firefox 2 (revision 1.8), gives a width of 0 to a td with overflow hidden when another td has
   a width of 100%. So for ff2 we give it an initial overflow of visible, so that print mode and
   emailable mode will work, and then in initial call to panelHeader resizeNotify the overflow is
   set to hidden for header truncation support. */
@agent gecko and (version: 1.8) {
	af|panelHeader::title-text-cell,
	af|showDetailHeader::title-text-cell,
	af|query::title-text-cell {
		overflow: visible;
	}
}
@agent email {
	af|panelHeader::title-text-cell,
	af|showDetailHeader::title-text-cell,
	af|query::title-text-cell {
		-tr-inhibit: overflow;
	}
	/* private style class that renders in email mode ONLY.
  This keeps the title from wrapping in Outlook 2007. */
	af|panelHeader::title-text-td {
		width:100%;
	}
}

af|panelHeader::context-container,
af|panelHeader::dynamic-help-icon-container,
af|panelBox::context-container,
af|panelBox::dynamic-help-icon-container,
af|region::dynamic-help-icon-container,
af|showDetailHeader::context-container,
af|showDetailHeader::dynamic-help-icon-container,
af|query::dynamic-help-icon-container {
	padding-left: 2px;
	vertical-align: middle;
	white-space: nowrap;
}

af|panelBox::context-container,
af|panelBox::dynamic-help-icon-container,
af|region::context-container,
af|region::dynamic-help-icon-container {
	padding-bottom : 2px;
}


af|panelHeader::context-container:rtl,
af|panelHeader::dynamic-help-icon-container:rtl,
af|panelBox::context-container:rtl,
af|panelBox::dynamic-help-icon-container:rtl,
af|region::context-container:rtl,
af|region::dynamic-help-icon-container:rtl,
af|showDetailHeader::context-container:rtl,
af|showDetailHeader::dynamic-help-icon-container:rtl,
af|query::dynamic-help-icon-container:rtl {
	padding-left: 0px;
	padding-right: 2px;
}

af|panelHeader::title-start0,
af|panelHeader::title-start2,
af|panelHeader::title-start3,
af|panelHeader::title-start4,
af|panelHeader::title-start5,
af|panelHeader::title-end0:rtl,
af|panelHeader::title-end2:rtl,
af|panelHeader::title-end3:rtl,
af|panelHeader::title-end4:rtl,
af|panelHeader::title-end5:rtl,
af|showDetailHeader::title-start0,
af|showDetailHeader::title-start2,
af|showDetailHeader::title-start3,
af|showDetailHeader::title-start4,
af|showDetailHeader::title-start5,
af|showDetailHeader::title-end0:rtl,
af|showDetailHeader::title-end2:rtl,
af|showDetailHeader::title-end3:rtl,
af|showDetailHeader::title-end4:rtl,
af|showDetailHeader::title-end5:rtl,
af|query::title-start0,
af|query::title-start2,
af|query::title-start3,
af|query::title-start4,
af|query::title-start5,
af|query::title-end0:rtl,
af|query::title-end2:rtl,
af|query::title-end3:rtl,
af|query::title-end4:rtl,
af|query::title-end5:rtl {
	width: 1px;
	min-width: 1px;
	padding: 0px;
	font-size: 0px;
}

af|panelHeader::title-start1,
af|panelHeader::title-end1:rtl,
af|showDetailHeader::title-start1,
af|showDetailHeader::title-end1:rtl,
af|query::title-start1,
af|query::title-end1:rtl {
	width: 3px;
	min-width: 3px;
	padding: 0px;
	font-size: 0px;
}

af|panelHeader::title-end0,
af|panelHeader::title-end2,
af|panelHeader::title-end3,
af|panelHeader::title-end4,
af|panelHeader::title-end5,
af|panelHeader::title-start0:rtl,
af|panelHeader::title-start2:rtl,
af|panelHeader::title-start3:rtl,
af|panelHeader::title-start4:rtl,
af|panelHeader::title-start5:rtl,
af|showDetailHeader::title-end0,
af|showDetailHeader::title-end2,
af|showDetailHeader::title-end3,
af|showDetailHeader::title-end4,
af|showDetailHeader::title-end5,
af|showDetailHeader::title-start0:rtl,
af|showDetailHeader::title-start2:rtl,
af|showDetailHeader::title-start3:rtl,
af|showDetailHeader::title-start4:rtl,
af|showDetailHeader::title-start5:rtl,
af|query::title-start0:rtl,
af|query::title-start2:rtl,
af|query::title-start3:rtl,
af|query::title-start4:rtl,
af|query::title-start5:rtl,
af|query::title-end0,
af|query::title-end2,
af|query::title-end3,
af|query::title-end4,
af|query::title-end5 {
	font-size: 0px;
	width: 1px;
	min-width: 1px;
	padding: 0px;
}

af|panelHeader::title-end1,
af|panelHeader::title-start1:rtl,
af|showDetailHeader::title-end1,
af|showDetailHeader::title-start1:rtl,
af|query::title-start1:rtl,
af|query::title-end1 {
	font-size: 0px;
	width: 3px;
	min-width: 3px;
	padding: 0px;
}

af|panelHeader::title0,
af|showDetailHeader::title0,
af|query::title0 {
	padding: 0px;
	overflow: hidden;
	white-space: nowrap;
	vertical-align: middle;
	display: block;
	-tr-rule-ref: selector(".AFDefaultFontFamily:alias");
	font-weight: bold;
	font-size: 14px;
}

af|panelHeader::title1,
af|showDetailHeader::title1,
af|query::title1 {
	padding: 1px 2px 1px 2px;
	overflow: hidden;
	white-space: nowrap;
	vertical-align: middle;
	display: block;
	-tr-rule-ref: selector(".AFDefaultFontFamily:alias");
	font-weight: bold;
	font-size: 12px;
}

af|panelHeader::title2,
af|panelHeader::title3,
af|panelHeader::title4,
af|panelHeader::title5,
af|showDetailHeader::title2,
af|showDetailHeader::title3,
af|showDetailHeader::title4,
af|showDetailHeader::title5,
af|query::title2,
af|query::title3,
af|query::title4,
af|query::title5{
	padding: 0px;
	overflow: hidden;
	white-space: nowrap;
	vertical-align: middle;
	display: block;
	-tr-rule-ref: selector(".AFDefaultBoldFont:alias");
}

af|panelHeader::title-text1,
af|showDetailHeader::title-text1,
af|query::title-text1{
	display: inline;
	margin: 0px;
	-tr-rule-ref: selector(".AFVeryDarkForeground:alias");
	-tr-rule-ref: selector(".AFDefaultBoldFont:alias");
	font-size: 12px;
	white-space: nowrap;
}

/* We shouldn't set pixel sizes for large-fonts mode. Setting to small to match default font size
   allows browser to set larger value for HTML headers as it sees fit. Note that if someone changes
   font size, they will also need to refresh their page for things to display properly. */
@accessibility-profile large-fonts {
	af|panelHeader::title-text0,
	af|showDetailHeader::title-text0,
	af|query::title-text0,
	af|panelHeader::title-text1,
	af|showDetailHeader::title-text1,
	af|query::title-text1{
		font-size: small;
	}
}

af|panelHeader::title-text2,
af|panelHeader::title-text3,
af|panelHeader::title-text4,
af|panelHeader::title-text5,
af|showDetailHeader::title-text2,
af|showDetailHeader::title-text3,
af|showDetailHeader::title-text4,
af|showDetailHeader::title-text5,
af|query::title-text2,
af|query::title-text3,
af|query::title-text4,
af|query::title-text5 {
	display: inline;
	margin: 0px;
	-tr-rule-ref: selector(".AFVeryDarkForeground:alias");
	-tr-rule-ref: selector(".AFDefaultBoldFont:alias");
	white-space: nowrap;
}

af|panelHeader::title-text0:error,
af|panelHeader::title-text1:error,
af|panelHeader::title-text2:error,
af|panelHeader::title-text3:error,
af|panelHeader::title-text4:error,
af|panelHeader::title-text5:error,
af|showDetailHeader::title-text0:error,
af|showDetailHeader::title-text1:error,
af|showDetailHeader::title-text2:error,
af|showDetailHeader::title-text3:error,
af|showDetailHeader::title-text4:error,
af|showDetailHeader::title-text5:error,
af|query::title-text0:error,
af|query::title-text1:error,
af|query::title-text2:error,
af|query::title-text3:error,
af|query::title-text4:error,
af|query::title-text5:error {
	-tr-rule-ref: selector(".AFErrorTextForeground:alias");
}

/* private - add a 2px margin between title text and truncation ellipsis */
af|panelHeader::title-text-ellipsis,
af|showDetailHeader::title-text-ellipsis,
af|query::title-text-ellipsis {
	margin-left: 2px;
}

/* private - add a 2px margin between title text and truncation ellipsis */
af|panelHeader::title-text-ellipsis:rtl,
af|showDetailHeader::title-text-ellipsis:rtl,
af|query::title-text-ellipsis:rtl {
	margin-left: 0px;
	margin-right: 2px;
}

af|panelHeader::content0,
af|panelHeader::content2,
af|panelHeader::content3,
af|panelHeader::content4,
af|panelHeader::content5,
af|showDetailHeader::content0,
af|showDetailHeader::content2,
af|showDetailHeader::content3,
af|showDetailHeader::content4,
af|showDetailHeader::content5,
af|query::content0,
af|query::content2,
af|query::content3,
af|query::content4,
af|query::content5 {
	vertical-align: top;
}

af|panelHeader::content1,
af|showDetailHeader::content1,
af|query::content1 {
	padding: 2px 5px 2px 5px;
}

af|panelHeader::content1:rtl,
af|showDetailHeader::content1:rtl,
af|query::content1:rtl{
	vertical-align: top;
	padding: 2px 5px 2px 5px;
}

af|panelHeader::info,
af|showDetailHeader::info,
af|query::info {
	white-space: nowrap;
	text-align: right;
	vertical-align: top;
}

af|panelHeader::info:rtl,
af|showDetailHeader::info:rtl,
af|query::info:rtl {
	text-align: left;
}

.AFHeaderText:alias {
	-tr-rule-ref: selector(".AFDarkForeground:alias");
	font-weight: bold;
	padding: 0px;
	margin: 0px;
}

/**
 * Specifies the size and position of a standard icon.  This alias can be
 * applies to any standard sized icon that is used as a background image.
 */
.AFStandardIconStyle:alias {
	width: 16px;
	height: 16px;
	background-repeat: no-repeat;
}

.AFInfoIcon:alias {
	content: url(/afr/info.png);
	width: 16px;
	height: 16px;
}

/* Confirmation icon alias */
.AFConfirmationIcon:alias {
	content: url(/afr/confirmation.png);
	width: 16px;
	height: 16px;
}

.AFFatalIcon:alias {
	content: url(/afr/error.png);
	width: 16px;
	height: 16px;
}

.AFErrorIcon:alias {
	content: url(/afr/error.png);
	width: 16px;
	height: 16px;
}

.AFWarningIcon:alias {
	content: url(/afr/warning.png);
	width: 16px;
	height: 16px;
}

/* root style class for progressIndicator component */
af|progressIndicator {
	-tr-percent-block-increment: 5;
}

af|progressIndicator::content {
	text-align:center;
}

/* style class for indeterminate progress indicator */
af|progressIndicator::indeterminate {
	height: 32px;
	width: 32px;
	background-repeat: no-repeat;
}

/* add on style class for indeterminate running progress indicator */
af|progressIndicator::indeterminate:running {
	background-image: url('/afr/process_animation.gif');
}

/* add on style class for indeterminate finished progress indicator */
af|progressIndicator::indeterminate:finished {
	background-image: url('/afr/process_finished.gif');
}

/* icon hooks for the progressIndicator */
af|progressIndicator::indeterminate-running-icon,
af|progressIndicator::indeterminate-finished-icon {
	content: inhibit;
}

/* style class for determinate progress indicator */
af|progressIndicator::determinate {
	width:220px;
	height:18px;
	float:left;
}

af|progressIndicator::determinate-end-label{
	-tr-rule-ref: selector(".AFTextForeground:alias");
	-tr-rule-ref: selector(".AFDefaultFont:alias");
	-tr-rule-ref: selector(".AFEndTextAlign:alias");
	font-weight:bold;
}
af|progressIndicator::determinate-start-label{
	-tr-rule-ref: selector(".AFTextForeground:alias");
	-tr-rule-ref: selector(".AFDefaultFont:alias");
	-tr-rule-ref: selector(".AFStartTextAlign:alias");
	font-weight:bold;
}

/* style class for determinate progress indicator */
af|progressIndicator::determinate-filled-icon-style{
	background-image: url('/afr/progressbar_filled.png');
	text-decoration:none;
	height:18px;
	width:11px;
	background-repeat:repeat-x;
	float:left;
}
/* style class for determinate progress indicator */
af|progressIndicator::determinate-empty-icon-style {
	background-image: url('/afr/progressbar_empty.png');
	text-decoration:none;
	height:18px;
	width:11px;
	background-repeat:repeat-x;
	float:left;
}

/* for high contrast, give the filled area a border to make it visible */
@accessibility-profile high-contrast {
	af|progressIndicator::determinate-filled-icon-style{
		border: 2px solid black;
	}
}

/* shuttle Styles */
/* :hover/:active are blafplus styles, so those are in blafplus*.css */
/*
 * selectXXXShuttle styles
 */
af|selectOrderShuttle,
af|selectManyShuttle {
}

/* We only want to set the background of the containers, not the entire component. */
af|selectOrderShuttle::container,
af|selectManyShuttle::container {
	-tr-rule-ref: selector(".AFLightAccentBackground:alias");
}

/* style for shuttle label */
af|selectManyShuttle::label,
af|selectOrderShuttle::label {
	-tr-rule-ref:selector(".AFLabel:alias");
}

/* style for shuttle disabled label */
af|selectManyShuttle:disabled::label,
af|selectOrderShuttle:disabled::label {
	-tr-rule-ref:selector(".AFLabelDisabled:alias");
}

/* Private - style class for a hidden item, in the shuttle, to ensure widths of both side are ok */
af|selectManyShuttle::hidden-item,
af|selectOrderShuttle::hidden-item {
	visibility: hidden;
	height: 0px;
}

af|selectManyShuttle::content,
af|selectOrderShuttle::content {
	-tr-rule-ref: selector(".AFDefaultFont:alias");
	border-color: #000000;
	border-style: solid;
	border-width: 1px;
	cursor: default;
}

af|selectOrderShuttle:read-only::content,
af|selectManyShuttle:read-only::content {
	/* border-width: 0px;*/
}

af|selectOrderShuttle:disabled::content,
af|selectManyShuttle:disabled::content {
	-tr-rule-ref: selector(".AFFormControlContentBorder:alias");
	-tr-rule-ref: selector(".AFFormControlContentBackgroundDisabled:alias");
	border: 0px;

}

/* empty declarations so they will compress */
af|selectManyShuttle::content-input,
af|selectOrderShuttle::content-input {
}

af|selectOrderShuttle::fieldset,
af|selectManyShuttle::fieldset {
	border: none;
	padding: 0px;
	margin: 0px;

}

/* Style for the source and destination options boxes */
af|selectManyShuttle::options,
af|selectOrderShuttle::options {
	-tr-rule-ref: selector(".AFDefaultFont:alias");
	overflow: auto;
	overflow-x: hidden;
	list-style-image: none;
	list-style-position: outside;
	list-style-type: none;
	margin: 0px;
	padding: 0px;
}
/* Style for the header text about the options boxes */
af|selectManyShuttle::header,
af|selectOrderShuttle::header {
	-tr-rule-ref: selector(".AFDefaultBoldFont:alias");
	text-align: left;
	white-space: nowrap;
	margin-bottom: 4px;
	margin-top: 0px;
}
@agent ie, webkit {
	af|selectManyShuttle::header,
	af|selectOrderShuttle::header {
		text-overflow: ellipsis;
	}
}

/* TODO =-=jmw: the color should probably match form control's label, and it doesn't.
It is close .  background-color is a light blue.
I can't find the visual spec for shuttle
*/
/* Style for the description label */
af|selectOrderShuttle::description,
af|selectManyShuttle::description {
	padding-left: 3px;
	-tr-rule-ref: selector(".AFDefaultFont:alias");
	-tr-rule-ref: selector(".AFLabelTextForeground:alias");
	-tr-rule-ref: selector(".AFLightBackground:alias");
}
/* style of the parent container of the description text */
af|selectOrderShuttle::desc-cell,
af|selectManyShuttle::desc-cell {
}
/* style of the description text */
af|selectOrderShuttle::desc-area,
af|selectManyShuttle::desc-area {
	-tr-rule-ref: selector(".AFDefaultFont:alias");
}
/* style of parent container of the move icons and their text */
af|selectOrderShuttle::icon-container,
af|selectManyShuttle::icon-container {
	text-align: center;
	padding: 4px 0px;
}
/* private style of the parent container of the vertical move icons
 * This centers the move icons and provides some vertical padding
 */
af|selectOrderShuttle::vertical-icon-container,
af|selectManyShuttle::vertical-icon-container {
	margin: 5px auto;
}
/* style of the label text for the icon buttons */
af|selectOrderShuttle::icon-label,
af|selectManyShuttle::icon-label {
	-tr-rule-ref: selector(".AFDefaultFont:alias");
}

/* label of each item in the shuttle */
af|selectOrderShuttle::item-label,
af|selectManyShuttle::item-label {
	white-space: nowrap;
}

@agent ie, webkit {
	af|selectManyShuttle::item-label,
	af|selectOrderShuttle::item-label {
		text-overflow: ellipsis;
	}
}

af|selectOrderShuttle::item-label:disabled,
af|selectManyShuttle::item-label:disabled {
	-tr-rule-ref: selector(".MediumExtraAccentForeground:alias");
}

/* select*Shuttle move/remove buttons have background gradients in BLAF Fusion
 so we need skinning keys for the button gradient and border */
af|selectManyShuttle::move-horizontal,
af|selectManyShuttle::move-vertical,
af|selectOrderShuttle::move-horizontal,
af|selectOrderShuttle::move-vertical,
af|selectManyShuttle::moveall-horizontal,
af|selectManyShuttle::moveall-vertical,
af|selectOrderShuttle::moveall-horizontal,
af|selectOrderShuttle::moveall-vertical,
af|selectManyShuttle::remove-horizontal,
af|selectManyShuttle::remove-vertical,
af|selectOrderShuttle::remove-horizontal,
af|selectOrderShuttle::remove-vertical,
af|selectManyShuttle::removeall-horizontal,
af|selectManyShuttle::removeall-vertical,
af|selectOrderShuttle::removeall-horizontal,
af|selectOrderShuttle::removeall-vertical {
}

af|selectManyShuttle::move-horizontal:hover,
af|selectManyShuttle::move-vertical:hover,
af|selectOrderShuttle::move-horizontal:hover,
af|selectOrderShuttle::move-vertical:hover,
af|selectManyShuttle::moveall-horizontal:hover,
af|selectManyShuttle::moveall-vertical:hover,
af|selectOrderShuttle::moveall-horizontal:hover,
af|selectOrderShuttle::moveall-vertical:hover,
af|selectManyShuttle::remove-horizontal:hover,
af|selectManyShuttle::remove-vertical:hover,
af|selectOrderShuttle::remove-horizontal:hover,
af|selectOrderShuttle::remove-vertical:hover,
af|selectManyShuttle::removeall-horizontal:hover,
af|selectManyShuttle::removeall-vertical:hover,
af|selectOrderShuttle::removeall-horizontal:hover,
af|selectOrderShuttle::removeall-vertical:hover {
}

af|selectManyShuttle::move-horizontal:active,
af|selectManyShuttle::move-vertical:active,
af|selectOrderShuttle::move-horizontal:active,
af|selectOrderShuttle::move-vertical:active,
af|selectManyShuttle::moveall-horizontal:active,
af|selectManyShuttle::moveall-vertical:active,
af|selectOrderShuttle::moveall-horizontal:active,
af|selectOrderShuttle::moveall-vertical:active,
af|selectManyShuttle::remove-horizontal:active,
af|selectManyShuttle::remove-vertical:active,
af|selectOrderShuttle::remove-horizontal:active,
af|selectOrderShuttle::remove-vertical:active,
af|selectManyShuttle::removeall-horizontal:active,
af|selectManyShuttle::removeall-vertical:active,
af|selectOrderShuttle::removeall-horizontal:active,
af|selectOrderShuttle::removeall-vertical:active {
}

/* selectManyShuttle and selectOrderShuttle icon images */
/* These images need to be in simple so that simple can have disabled icons, and have :hover and
:active still be overridden by :disabled */

af|selectManyShuttle::move-horizontal-icon-style,
af|selectOrderShuttle::move-horizontal-icon-style {
	background-image: url("/afr/shuttleright_ena.png");
}
af|selectManyShuttle::move-horizontal-icon-style:disabled,
af|selectOrderShuttle::move-horizontal-icon-style:disabled {
	background-image: url("/afr/shuttleright_dis.png");
}
af|selectManyShuttle::move-horizontal-icon-style:rtl,
af|selectOrderShuttle::move-horizontal-icon-style:rtl {
	background-image: url("/afr/shuttlerightbidi_ena.png");
}
af|selectManyShuttle::move-horizontal-icon-style:disabled:rtl,
af|selectOrderShuttle::move-horizontal-icon-style:disabled:rtl {
	background-image: url("/afr/shuttlerightbidi_dis.png");
}
af|selectManyShuttle::move-vertical-icon-style,
af|selectOrderShuttle::move-vertical-icon-style {
	background-image: url("/afr/shuttledown_ena.png");
}
af|selectManyShuttle::move-vertical-icon-style:disabled,
af|selectOrderShuttle::move-vertical-icon-style:disabled {
	background-image: url("/afr/shuttledown_dis.png");
}
af|selectManyShuttle::moveall-horizontal-icon-style,
af|selectOrderShuttle::moveall-horizontal-icon-style {
	background-image: url("/afr/shuttlerightall_ena.png");
}
af|selectManyShuttle::moveall-horizontal-icon-style:disabled,
af|selectOrderShuttle::moveall-horizontal-icon-style:disabled {
	background-image: url("/afr/shuttlerightall_dis.png");
}
af|selectManyShuttle::moveall-horizontal-icon-style:rtl,
af|selectOrderShuttle::moveall-horizontal-icon-style:rtl {
	background-image: url("/afr/shuttleleftall_ena.png");
}
af|selectManyShuttle::moveall-horizontal-icon-style:disabled:rtl,
af|selectOrderShuttle::moveall-horizontal-icon-style:disabled:rtl {
	background-image: url("/afr/shuttleleftall_dis.png");
}
af|selectManyShuttle::moveall-vertical-icon-style,
af|selectOrderShuttle::moveall-vertical-icon-style {
	background-image: url("/afr/shuttledownall_ena.png");
}
af|selectManyShuttle::moveall-vertical-icon-style:disabled,
af|selectOrderShuttle::moveall-vertical-icon-style:disabled {
	background-image: url("/afr/shuttledownall_dis.png");
}
af|selectManyShuttle::remove-horizontal-icon-style,
af|selectOrderShuttle::remove-horizontal-icon-style {
	background-image: url("/afr/shuttleleft_ena.png");
}
af|selectManyShuttle::remove-horizontal-icon-style:disabled,
af|selectOrderShuttle::remove-horizontal-icon-style:disabled {
	background-image: url("/afr/shuttleleft_dis.png");
}
af|selectManyShuttle::remove-horizontal-icon-style:rtl,
af|selectOrderShuttle::remove-horizontal-icon-style:rtl {
	background-image: url("/afr/shuttleleftbidi_ena.png");
}
af|selectManyShuttle::remove-horizontal-icon-style:disabled:rtl,
af|selectOrderShuttle::remove-horizontal-icon-style:disabled:rtl {
	background-image: url("/afr/shuttleleftbidi_dis.png");
}
af|selectManyShuttle::remove-vertical-icon-style,
af|selectOrderShuttle::remove-vertical-icon-style {
	background-image: url("/afr/shuttleup_ena.png");
}
af|selectManyShuttle::remove-vertical-icon-style:disabled,
af|selectOrderShuttle::remove-vertical-icon-style:disabled {
	background-image: url("/afr/shuttleup_dis.png");
}
af|selectManyShuttle::remove-vertical-icon-style:rtl,
af|selectOrderShuttle::remove-vertical-icon-style:rtl {
	background-image: url("/afr/shuttleupbidi_ena.png");
}
af|selectManyShuttle::remove-vertical-icon-style:disabled:rtl,
af|selectOrderShuttle::remove-vertical-icon-style:disabled:rtl {
	background-image: url("/afr/shuttleupbidi_dis.png");
}
af|selectManyShuttle::removeall-horizontal-icon-style,
af|selectOrderShuttle::removeall-horizontal-icon-style {
	background-image: url("/afr/shuttleleftall_ena.png");
}
af|selectManyShuttle::removeall-horizontal-icon-style:disabled,
af|selectOrderShuttle::removeall-horizontal-icon-style:disabled {
	background-image: url("/afr/shuttleleftall_dis.png");
}
af|selectManyShuttle::removeall-horizontal-icon-style:rtl,
af|selectOrderShuttle::removeall-horizontal-icon-style:rtl {
	background-image: url("/afr/shuttleleftallbidi_ena.png");
}
af|selectManyShuttle::removeall-horizontal-icon-style:disabled:rtl,
af|selectOrderShuttle::removeall-horizontal-icon-style:disabled:rtl {
	background-image: url("/afr/shuttleleftallbidi_dis.png");
}
af|selectManyShuttle::removeall-vertical-icon-style,
af|selectOrderShuttle::removeall-vertical-icon-style {
	background-image: url("/afr/shuttleupall_ena.png");
}
af|selectManyShuttle::removeall-vertical-icon-style:disabled,
af|selectOrderShuttle::removeall-vertical-icon-style:disabled {
	background-image: url("/afr/shuttleupall_dis.png");
}
af|selectManyShuttle::removeall-vertical-icon-style:rtl,
af|selectOrderShuttle::removeall-vertical-icon-style:rtl {
	background-image: url("/afr/shuttleupallbidi_ena.png");
}
af|selectManyShuttle::removeall-vertical-icon-style:disabled:rtl,
af|selectOrderShuttle::removeall-vertical-icon-style:disabled:rtl {
	background-image: url("/afr/shuttleupallbidi_dis.png");
}
/* selectOrderShuttle specific icon images */
af|selectOrderShuttle::move-top-icon-style {
	background-image: url("/afr/shuttlereordertop_ena.png");
}
af|selectOrderShuttle::move-top-icon-style:disabled {
	background-image: url("/afr/shuttlereordertop_dis.png");
}

af|selectOrderShuttle::move-up-icon-style {
	background-image: url("/afr/shuttlereorderup_ena.png");
}
af|selectOrderShuttle::move-up-icon-style:disabled {
	background-image: url("/afr/shuttlereorderup_dis.png");
}

af|selectOrderShuttle::move-down-icon-style {
	background-image: url("/afr/shuttlereorderdown_ena.png");
}
af|selectOrderShuttle::move-down-icon-style:disabled {
	background-image: url("/afr/shuttlereorderdown_dis.png");
}

af|selectOrderShuttle::move-bottom-icon-style {
	background-image: url("/afr/shuttlereorderbottom_ena.png");
}
af|selectOrderShuttle::move-bottom-icon-style:disabled {
	background-image: url("/afr/shuttlereorderbottom_dis.png");
}

af|selectManyShuttle::move-horizontal-icon-style,
af|selectManyShuttle::moveall-horizontal-icon-style,
af|selectManyShuttle::copy-horizontal-icon-style,
af|selectManyShuttle::copyall-horizontal-icon-style,
af|selectManyShuttle::remove-horizontal-icon-style,
af|selectManyShuttle::removeall-horizontal-icon-style,
af|selectManyShuttle::move-horizontal-icon-style:rtl,
af|selectManyShuttle::moveall-horizontal-icon-style:rtl,
af|selectManyShuttle::copy-horizontal-icon-style:rtl,
af|selectManyShuttle::copyall-horizontal-icon-style:rtl,
af|selectManyShuttle::remove-horizontal-icon-style:rtl,
af|selectManyShuttle::removeall-horizontal-icon-style:rtl,
af|selectOrderShuttle::move-horizontal-icon-style,
af|selectOrderShuttle::moveall-horizontal-icon-style,
af|selectOrderShuttle::copy-horizontal-icon-style,
af|selectOrderShuttle::copyall-horizontal-icon-style,
af|selectOrderShuttle::remove-horizontal-icon-style,
af|selectOrderShuttle::removeall-horizontal-icon-style,
af|selectOrderShuttle::move-horizontal-icon-style:rtl,
af|selectOrderShuttle::moveall-horizontal-icon-style:rtl,
af|selectOrderShuttle::copy-horizontal-icon-style:rtl,
af|selectOrderShuttle::copyall-horizontal-icon-style:rtl,
af|selectOrderShuttle::remove-horizontal-icon-style:rtl,
af|selectOrderShuttle::removeall-horizontal-icon-style:rtl {
	display: block;
	width: 84px;
	height: 14px;
	cursor:default;
	background-repeat: no-repeat;
	background-position: center center;
	padding:0px;
}
af|selectManyShuttle::move-vertical-icon-style,
af|selectManyShuttle::moveall-vertical-icon-style,
af|selectManyShuttle::copy-vertical-icon-style,
af|selectManyShuttle::copyall-vertical-icon-style,
af|selectManyShuttle::remove-vertical-icon-style,
af|selectManyShuttle::removeall-vertical-icon-style,
af|selectManyShuttle::move-vertical-icon-style:rtl,
af|selectManyShuttle::moveall-vertical-icon-style:rtl,
af|selectManyShuttle::copy-vertical-icon-style:rtl,
af|selectManyShuttle::copyall-vertical-icon-style:rtl,
af|selectManyShuttle::remove-vertical-icon-style:rtl,
af|selectManyShuttle::removeall-vertical-icon-style:rtl,
af|selectOrderShuttle::move-vertical-icon-style,
af|selectOrderShuttle::moveall-vertical-icon-style,
af|selectOrderShuttle::copy-vertical-icon-style,
af|selectOrderShuttle::copyall-vertical-icon-style,
af|selectOrderShuttle::remove-vertical-icon-style,
af|selectOrderShuttle::removeall-vertical-icon-style,
af|selectOrderShuttle::move-vertical-icon-style:rtl,
af|selectOrderShuttle::moveall-vertical-icon-style:rtl,
af|selectOrderShuttle::copy-vertical-icon-style:rtl,
af|selectOrderShuttle::copyall-vertical-icon-style:rtl,
af|selectOrderShuttle::remove-vertical-icon-style:rtl,
af|selectOrderShuttle::removeall-vertical-icon-style:rtl {
	display: block;
	width: 20px;
	height: 16px;
	cursor:default;
	background-repeat: no-repeat;
	background-position: center center;
	padding:0px;
}

/* Shuttle Icons */
af|selectManyShuttle::move-horizontal-icon,
af|selectOrderShuttle::move-horizontal-icon,
af|selectManyShuttle::move-vertical-icon,
af|selectOrderShuttle::move-vertical-icon,
af|selectManyShuttle::moveall-horizontal-icon,
af|selectOrderShuttle::moveall-horizontal-icon,
af|selectManyShuttle::moveall-vertical-icon,
af|selectOrderShuttle::moveall-vertical-icon,
af|selectManyShuttle::remove-horizontal-icon,
af|selectOrderShuttle::remove-horizontal-icon,
af|selectManyShuttle::remove-vertical-icon,
af|selectOrderShuttle::remove-vertical-icon,
af|selectManyShuttle::removeall-horizontal-icon,
af|selectOrderShuttle::removeall-horizontal-icon,
af|selectManyShuttle::removeall-vertical-icon,
af|selectOrderShuttle::removeall-vertical-icon,
af|selectOrderShuttle::move-top-icon,
af|selectOrderShuttle::move-up-icon,
af|selectOrderShuttle::move-down-icon,
af|selectOrderShuttle::move-bottom-icon,
af|selectManyShuttle::move-horizontal-disabled-icon,
af|selectOrderShuttle::move-horizontal-disabled-icon,
af|selectManyShuttle::move-vertical-disabled-icon,
af|selectOrderShuttle::move-vertical-disabled-icon,
af|selectManyShuttle::moveall-horizontal-disabled-icon,
af|selectOrderShuttle::moveall-horizontal-disabled-icon,
af|selectManyShuttle::moveall-vertical-disabled-icon,
af|selectOrderShuttle::moveall-vertical-disabled-icon,
af|selectManyShuttle::remove-horizontal-disabled-icon,
af|selectOrderShuttle::remove-horizontal-disabled-icon,
af|selectManyShuttle::remove-vertical-disabled-icon,
af|selectOrderShuttle::remove-vertical-disabled-icon,
af|selectManyShuttle::removeall-horizontal-disabled-icon,
af|selectOrderShuttle::removeall-horizontal-disabled-icon,
af|selectManyShuttle::removeall-vertical-disabled-icon,
af|selectOrderShuttle::removeall-vertical-disabled-icon,
af|selectOrderShuttle::move-top-disabled-icon,
af|selectOrderShuttle::move-up-disabled-icon,
af|selectOrderShuttle::move-down-disabled-icon,
af|selectOrderShuttle::move-bottom-disabled-icon {
	content: inhibit
}

af|selectOrderShuttle::access-key {
	-tr-rule-ref: selector(".AFFormAccessKeyStyle:alias");
}

af|selectOrderShuttle::move-top-icon-style,
af|selectOrderShuttle::move-up-icon-style,
af|selectOrderShuttle::move-down-icon-style,
af|selectOrderShuttle::move-bottom-icon-style {
	display: block;
	width: 16px;
	height: 16px;
	cursor:default;
	background-repeat: no-repeat;
}

/* af|separator */
af|separator {
}

/* af|statusIndicator */
af|statusIndicator {
}

/* This icon represents the idle state. This icon is generally a non-animated icon
 * that indicates communication is NOT occuring with the server.
 */
af|statusIndicator::idle-icon {
	width: 21px;
	height: 18px;
	content: "O";
	font-weight: bold;
}

/* This icon represents the processing state. This icon is generally an animated icon
 * that indicates communication IS occuring with the server.
 */
af|statusIndicator::processing-icon {
	width: 21px;
	height: 18px;
	content: "(//)";
}

/* This icon is displayed when Active Data Service is in the process of connecting.
 * This icon is generally an animated icon.
 */
af|statusIndicator::connecting-icon {
	width: 21px;
	height: 18px;
	content: "(~)";
}

/* This icon is displayed when Active Data Service is in the connected state. This
 * icon is generally a non-animated icon and may be the same as the idle state icon.
 */
af|statusIndicator::connected-icon {
	width: 21px;
	height: 18px;
	content: "O";
	font-weight: bold;
}

/* This icon is displayed when the Active Data Service has lost connection and is
 * attempting to reconnect. This icon is generally an animated icon.
 */
af|statusIndicator::reconnecting-icon {
	width: 21px;
	height: 18px;
	content: "(~)";
	color: red;
}

/* This is displayed when the Active Data Service is in the disconnected state.
 * This icon is generally a non-animated icon used to indicate that no further
 * reconnection atempts will be made without user interaction.
 */
af|statusIndicator::disconnected-icon {
	width: 21px;
	height: 18px;
	content: "(x)";
}
/* end af|statusIndicator */

af|form
{
	margin: 0px;
}

af|table {
	border: 1px solid #e7e8ec;
	-tr-rule-ref: selector(".AFLightAccentBackground:alias");
	overflow:hidden;
	position:relative;
	/*27.27em equals 300px for 11px font size*/
	width: 27.27em;
	height: 27.27em;
	-tr-border-left-width: 0;
	-tr-border-right-width: 1;
	-tr-padding-left-width: 2;
	-tr-padding-right-width: 2;
	-tr-detail-animation-duration: 200;
	-tr-column-scroll-animation-duration: 200;
	-tr-column-reorder-animation-duration: 200;
	-tr-hover-highlight-row: true;
}

af|table[_afrautohr] {
  height: unset;
}

/**
 * Do not show any color feedback on the treeTable for drop. The feedback is shown based on rowKey
 */
af|table:drop-target
{
	background-color:transparent;
}

/**
 * Set the focus ring of the table, tree, and treeTable to zero.  These component root elements are
 * focusable but this focus ring conflicts with stretching and can introduce extra dimension to the
 * element if used in a flowing layout in some browsers like Firefox 2.
 */
af|table,
af|tree,
af|treeTable {
	outline-width: 0px;
}

/**
 * Drop feedback shown when the entire table is drop target
 */
af|table::data-body:drop-target
{
	background-color:#37474f;
}

af|accTable {
	-tr-rule-ref: selector(".AFLightAccentBackground:alias");
	overflow:auto;
	position:relative;
	/*27.27em equals 300px for 11px font size*/
	width: 27.27em;
	height: 27.27em;
	-tr-border-left-width: 0;
	-tr-border-right-width: 1;
	-tr-padding-left-width: 2;
	-tr-padding-right-width: 2;
}

af|accTree {
	overflow:auto;
	position:relative;
	/*27.27em equals 300px for 11px font size*/
	width: 27.27em;
	height: 27.27em;
	margin: 0px;
	padding: 0px;
}

/*
 * Printable table: turn off width, height and overflow.  This
 * should perhaps be an @media selector, but then it would
 * not show up as expected during viewing of the printable page,
 * and skinning doesn't yet support @media!
 */
af|table:printable,
af|tree:printable,
af|treeTable:printable {
	width: auto;
	height: auto;
}
@agent email
{
	af|table {
		width: auto;
		height: auto;
	}
}
/* the table with the rows/columns of data. keep private for now */
af|table::data-table {
	/*cursor: default;*/
}

af|table::column-resize-indicator {
	width:0px;
	border-right: 2px dashed #e7e8ec;
}

/* Style used for record range in printable pages */
af|table::record-range-footer {
	-tr-rule-ref: selector(".AFDefaultFont:alias");
	-tr-rule-ref: selector(".AFTableCellHeaderBorder:alias");
	-tr-rule-ref: selector(".AFTableCellHeaderBackground:alias");
	width: 100%;
}
/*  This is where they change the padding-left/padding-right if they
change -tr-padding-left-width and -tr-padding-right-width in af|table. */
af|table::disclosed-icon-style {
	-tr-rule-ref: selector(".AFClickableImageAnchor:alias");
	background-image: url("/afr/disclosure_expanded.png");
	background-position: top;
	display:block;
	height:9px;
	padding-right:0px;
	margin: 0px;
}

af|table::undisclosed-icon-style {
	-tr-rule-ref: selector(".AFClickableImageAnchor:alias");
	background-image:url("/afr/disclosure_collapsed.png");
	background-position: top;
	display:block;
	height:9px;
	padding-right:0px;
	margin: 0px;
}

af|table::detail-area-cell {
	-tr-rule-ref: selector(".AFTableCellDataHGrid:alias");
	background-image:url("/afr/detail_box_top.png");
	background-color:#DCE2EC;
	background-position: top;
	background-repeat: repeat-x;
	padding: 5px;
	padding-top: 12px;
}

.AFTableCellPadding:alias {
	/* !important - must match the skin properties defined in af|table:
    -tr-padding-left-width, -tr-padding-right-width */
	padding-top:1px;
	padding-bottom:1px;
	padding-left:2px;
	padding-right:2px;
}

.AFTableCellHeaderBorder:alias {
	/* !important - must match the skin properties defined in af|table:
    -tr-border-left-width, -tr-border-right-width */
	border-right: 1px solid #e7e8ec;
	border-bottom: 1px solid #e7e8ec;
}

.AFTableCellHeaderBorder:alias:rtl {
	/* !important - must match the skin properties defined in af|table:
    -tr-border-left-width, -tr-border-right-width */
	border-left: 1px solid #e7e8ec;
	border-right:none;
}

.AFTableCellFooterBorder:alias {
	/* !important - must match the skin properties defined in af|table:
    -tr-border-left-width, -tr-border-right-width */
	border-right: 1px solid #e7e8ec;
	border-bottom: 1px solid #e7e8ec;

	border-top: 1px solid #325087;
}

.AFTableCellFooterBorder:alias:rtl {
	/* !important - must match the skin properties defined in af|table:
    -tr-border-left-width, -tr-border-right-width */
	border-left: 1px solid #e7e8ec;
	border-right:none;

	border-top: 1px solid #325087;
}


.AFTableCellHeaderBackground:alias {
	background-color:#E2E3D7;
}

.AFTableCellFooterBackground:alias {
	background-color:#EBEAD5;
}

/* The column header and footer need to be in front of the table component */
af|column::column-header,
af|column::column-footer {
	z-index: 1;
}

/* the table(s) used for the column headers. keep private for now */
af|column::column-header-table{

}

af|column::column-header:ltr {
	border-right:#CECECE 1px solid;
}

af|column::column-header:rtl {
	border-left:#CECECE 1px solid;
}

af|column::column-footer:ltr {
	border-right:#CECECE 1px solid;
}

af|column::column-footer:rtl {
	border-left:#CECECE 1px solid;
}

af|column::column-header-cell-content {
	overflow:hidden;
}

af|column::column-header-cell {
	-tr-rule-ref: selector(".AFDefaultBoldFont:alias");
	-tr-rule-ref: selector(".MetroPanelBoxHeaderFont:alias");
	-tr-rule-ref: selector(".AFTableCellHeaderBorder:alias");
	-tr-rule-ref: selector(".AFTableCellHeaderBackground:alias");
	font-weight: 600;
	line-height: 160%;
	padding: 5px;
}

af|column::column-header-cell-flex {
	display: -webkit-box;
	display: -moz-box;
	display: -ms-flexbox;
	display: -webkit-flex;
	display: flex;

	justify-content: space-between;
	align-content: space-between;
	align-items: center;
}

af|column::column-footer-cell {
	-tr-rule-ref: selector(".AFDefaultFont:alias");
	-tr-rule-ref: selector(".AFTableCellFooterBorder:alias");
	-tr-rule-ref: selector(".AFTableCellFooterBackground:alias");
	-tr-rule-ref: selector(".AFTableCellPadding:alias");
	overflow: hidden;
}

af|column::detail-column-header-cell {
	-tr-rule-ref: selector(".AFTableCellHeaderText:alias");
	-tr-rule-ref: selector(".AFTableCellHeaderBorder:alias");
	-tr-rule-ref: selector(".AFTableCellHeaderBackground:alias");
	-tr-rule-ref: selector(".AFTableCellPadding:alias");
	overflow: hidden;
}

/* TODO We can't use :focus because the cell doesn't have true browser
focus, but the column has been selected. Can we use selected?  I think selected
is better anyway, because you can't keyboard focus to this field anyway.*/
/*af|column::column-header-cell:focused {
	-tr-rule-ref: selector(".AFVeryDarkAccentBackground:alias");
}*/

af|column::column-filter-cell {
	-tr-rule-ref: selector(".AFDefaultFont:alias");
	-tr-rule-ref: selector(".AFTableCellHeaderBorder:alias");
	-tr-rule-ref: selector(".AFLightAccentBackground:alias");
	padding-left: 2px;
	padding-right: 2px;
	padding-top: 1px;
	padding-bottom: 1px;
	cursor: default;
	overflow: hidden;
}

/* In safari the contents in the filter cells do not scale up to the row */
@agent webkit {
	af|column::column-filter-cell{
		height: 100%;
	}
}

af|column::column-filter-cell af|inputText::content {
	max-width: 100%;
	width: 100%;
	margin-left: 0px;
	margin-right: 0px;
}

@agent ie {
	af|column::column-filter-cell af|inputText::content {
		-ms-box-sizing: border-box;
		padding-left: 0px;
		padding-right: 0px;
		width: 90%;
	}
}

@agent webkit {
	af|column::column-filter-cell af|inputText::content {
		-webkit-box-sizing: border-box;
	}
}

@agent gecko {
	af|column::column-filter-cell af|inputText::content {
		-moz-box-sizing: border-box;
	}
}

@agent ie and (version: 7.0) {
	af|column::column-filter-cell af|inputText::content {
		-tr-inhibit: -ms-box-sizing;
		border-left-width: 0px;
		border-right-width: 0px;
		border-left-style: none;
		border-right-style: none;
		padding-left: 0px;
		padding-right: 0px;
	}
}


af|column::column-filter-cell af|inputDate::content {
	width: 75px;
}

af|column::select-all-header {
	cursor: url('/afr/select-all.cur'), default;
}

af|column::row-header-cell {
	-tr-rule-ref: selector(".AFDefaultFont:alias");
	-tr-rule-ref: selector(".AFTableCellHeaderBorder:alias");
	-tr-rule-ref: selector(".AFTableCellHeaderBackground:alias");
	-tr-rule-ref: selector(".AFTableCellPadding:alias");
	cursor: url('/afr/rowselector.cur'), default;
	text-align:right;
	overflow: hidden;
}

@agent webkit {
	af|column::row-header-cell {
		cursor: url('/afr/wk-rowselector.cur'), default;
	}
}

af|column::row-header-cell:rtl {
	text-align:left;
	cursor: url('/afr/rowselector_rtl.cur'), default;
}
/* TODO We can't use :focus because the cell doesn't have true browser
focus, but the column has been selected. Can we use selected?  I think selected
is better anyway, because you can't keyboard focus to this field anyway.*/
af|column::row-header-cell:focused {
	-tr-rule-ref: selector(".AFVeryDarkAccentBackground :alias");
}

af|column::detail-cell {
	-tr-rule-ref: selector(".AFTableCellHeaderBorder:alias");
	-tr-rule-ref: selector(".AFTableCellHeaderBackground:alias");
	-tr-rule-ref: selector(".AFTableCellPadding:alias");
	text-align:center;
}

af|column::data-cell {
	-tr-rule-ref: selector(".AFDefaultFont:alias");
	-tr-rule-ref: selector(".AFTableCellPadding:alias");
	-tr-rule-ref: selector(".AFLightAccentBackground:alias");
	-tr-rule-ref: selector(".AFTableCellData:alias");
	overflow:hidden;
}

/* Defines what a column data cell looks like when it has a styleClass="AFSubtotal". */
af|column::data-cell.AFTableCellSubtotal {
	-tr-rule-ref: selector(".AFMediumAccentBackground:alias");
	-tr-rule-ref: selector(".AFTextForeground:alias");
	-tr-rule-ref: selector(".AFDefaultBoldFont:alias");
}

af|column::banded-data-cell {
	-tr-rule-ref: selector(".AFDefaultFont:alias");
	-tr-rule-ref: selector(".AFTableCellPadding:alias");
	-tr-rule-ref: selector(".AFMediumAccentBackground:alias");
	-tr-rule-ref: selector(".AFTableCellData:alias");
	overflow:hidden;
}

@agent ie, webkit {
	af|column::column-header-cell, af|column::row-header-cell,
	af|column::data-cell, af|column::banded-data-cell {
		text-overflow: ellipsis;
	}
}

af|table::data-row:selected af|column::data-cell,
af|column::data-cell:selected {
	-tr-rule-ref: selector(".AFTableCellDataSelected:alias");
}

af|table::data-row:selected:focused af|column::data-cell{
	-tr-rule-ref: selector(".AFTableCellDataSelectedFocused:alias");
}

/* Row selection and column selection keys */
af|table::data-row:selected af|column::banded-data-cell,
af|column::banded-data-cell:selected {
	-tr-rule-ref: selector(".AFTableCellDataSelectedBanded:alias");
}

af|table::data-row:selected:focused af|column::banded-data-cell{
	-tr-rule-ref: selector(".AFTableCellDataSelectedBandedFocused:alias");
}

af|table::data-row:selected:inactive af|column::data-cell,
af|column::data-cell:selected:inactive {
	-tr-rule-ref: selector(".AFTableCellDataSelectedInactive:alias");
}

af|inputComboboxListOfValues::separator {
	border-top:1px solid black;
	line-height:0px;
}

af|table::data-row af|image {
	vertical-align: middle;
}

af|table::data-row af|inputText::content,
af|table::data-row af|selectOneListbox::content,
af|table::data-row af|selectManyListbox::content,
af|table::data-row af|selectOneChoice::content,
af|table::date-row af|chooseDate::choice-list-content {
	margin: 0px;
	max-width: 90%;
	width: 90%;
}

/* Override the above styles when in a panelGroupLayout because a percentage width would result in
   approximately zero effective width. */
af|table::data-row af|panelGroupLayout af|inputText::content,
af|table::data-row af|panelGroupLayout af|selectOneListbox::content,
af|table::data-row af|panelGroupLayout af|selectManyListbox::content,
af|table::data-row af|panelGroupLayout af|selectOneChoice::content,
af|table::data-row af|panelGroupLayout af|chooseDate::choice-list-content {
	max-width: none;
	width: auto;
}

/* selectManyChoice's content is the input element, which doesn't include the
 * width of the dropdown icon, so we need to set it a little narrower
 */
af|table::data-row af|selectManyChoice::content,
af|table::data-row af|inputListOfValues::content,
af|table::data-row af|inputComboboxListOfValues::content {
	margin: 0px;
	max-width: 77%;
	width: 77%;
}

af|table::data-row af|inputDate::content,
af|table::data-row af|inputNumberSpinbox::content {
	margin: 0px;
	width: 75px;
}

/*
 * We do not want any paddings for readOnly content, the padding is provided by the cell
 */
af|table::data-row af|inputText:read-only::content,
af|table::data-row af|selectOneListbox:read-only::content,
af|table::data-row af|selectManyListbox:read-only::content,
af|table::data-row af|selectOneChoice:read-only::content,
af|table::date-row af|chooseDate:read-only::choice-list-content,
af|table::data-row af|inputDate:read-only::content,
af|table::data-row af|inputNumberSpinbox:read-only::content,
af|table::data-row af|inputListOfValues:read-only::content,
af|table::data-row af|inputComboboxListOfValues:read-only::content,
af|table::data-row af|selectManyChoice:read-only::content{
	padding: 0px;
}

/*
 * Change the padding of the selectBooleanCheckbox inside the table so that it does not fatten the row
 */
af|column::column-header af|selectBooleanCheckbox::content-input,
af|table::data-row af|selectBooleanCheckbox::content-input,
af|table::data-row af|selectBooleanCheckbox:read-only::content-input {
	padding: 0px;
}

af|table::data-row af|selectBooleanCheckbox::icon-style {
	margin: 0px;
	vertical-align:middle;
}


/* In IE and webkit browsers the "auto" cursor for textual data was the selection cursor, rather
 than the pointer cursor.  This forces the cursor to the arrow/pointer. */
@agent ie, webkit {
	af|column::data-cell,
	af|column::banded-data-cell {
		cursor: default;
	}
}

@agent ie
{
	af|column::column-header af|selectBooleanCheckbox::native-input:ltr,
	af|table::data-row af|selectBooleanCheckbox::native-input:ltr{
		margin-left: 0px;
	}
	af|column::column-header af|selectBooleanCheckbox::native-input:rtl,
	af|table::data-row af|selectBooleanCheckbox::native-input:rtl{
		margin-right: 0px;
	}
}

af|table::data-row:selected:inactive af|column::banded-data-cell,
af|column::banded-data-cell:selected:inactive {
	-tr-rule-ref: selector(".AFTableCellDataSelectedBandedInactive:alias");
}
/* Keep these keys private. Instead use the aliases because they are easier to understand */
/* TODO consider taking out 'color' from the alias. */
af|table::data-row:drop-target af|column::data-cell,
af|table::data-row:drop-target af|column::banded-data-cell {
	-tr-rule-ref: selector(".AFTableCellDataDropTargetColor:alias");
}
/* Keep these keys private. Instead use the aliases because they are easier to understand */
af|table::data-table-V-lines af|column::data-cell,
af|table::data-table-V-lines af|column::banded-data-cell {
	-tr-rule-ref: selector(".AFTableCellDataVGrid:alias");
}
/* Keep these keys private. Instead use the aliases because they are easier to understand */
af|table::data-table-H-lines af|column::data-cell,
af|table::data-table-H-lines af|column::banded-data-cell {
	-tr-rule-ref: selector(".AFTableCellDataHGrid:alias");
}
/* Keep these keys private. Instead use the aliases because they are easier to understand */
af|table::data-table-VH-lines af|column::data-cell,
af|table::data-table-VH-lines af|column::banded-data-cell {
	-tr-rule-ref: selector(".AFTableCellDataVHGrid:alias");
}
/* outlook ignores all but the first selector on a dom node, and the
dom node with the VH-lines has another selector, so to get the grid we have
to do this: */
@agent email {
	af|column::data-cell,
	af|column::banded-data-cell {
		-tr-rule-ref: selector(".AFTableCellDataVHGrid:alias");
	}
}

.AFTableCellFrozenBorder:alias:ltr {
	border-right: 1px solid #9900FF;
}

.AFTableCellFrozenBorder:alias:rtl {
	border-left: 1px solid #9900FF;
}
/* keep this private, because the alias is easier */
af|column::frozen-border,
af|table::data-table af|column::frozen-border {
	-tr-rule-ref: selector(".AFTableCellFrozenBorder:alias");
}

af|column::sort-indicator {
	display: -webkit-box;
	display: -moz-box;
	display: -ms-flexbox;
	display: -webkit-flex;
	display: flex;

	justify-content: center;
	align-items: flex-end;
	align-content: flex-end;
	-webkit-flex-flow: column-reverse wrap;
	flex-flow: column-reverse wrap;
	height: 24px;
	width: 24px;

	flex: 0 0 auto;

	opacity: 0.75;
	filter: alpha(opacity=75);
}

af|column::sort-indicator:hover {
	opacity: 1;
	filter: alpha(opacity=100);
	cursor: pointer;
}

af|column::sort-priority {
	padding: 1px 1px 0px 5px;
	font-size: 11px;
	color: #7292b5;
}

af|table::status-message {
	-tr-rule-ref: selector(".AFDataCollectionStatusMessage:alias");
}

.AFDataCollectionStatusMessage:alias {
	-tr-rule-ref: selector(".AFDefaultFont:alias");
	background-color:InfoBackground;
	color:InfoText;
	border: 1px #333333 solid;
	padding:3px;
}

.AFColumnDropTarget {
	-tr-rule-ref: selector(".AFMediumBackground:alias");
	border: 1px solid #516790;
}

af|column::data-cell:drop-target,
af|column::banded-data-cell:drop-target{
	-tr-rule-ref: selector(".AFTableCellDataDropTargetColor:alias");
	opacity: 1;
}

af|column::column-header-cell:drop-target{
	-tr-rule-ref: selector(".AFTableHeaderCellDataDropTargetColor:alias");
	opacity: 1;
}

@agent ie{
	af|column::data-cell:drop-target,
	af|column::banded-data-cell:drop-target,
	af|column::column-header-cell:drop-target{
		filter: alpha(opacity:100);
	}
}

/* Start of the panelCollection Style.
   The bottom border width is zeroed out because it will be provided by the internally-contained
   table, tree, treeTable, or toolbox row. */
af|panelCollection {
	position: relative;
	border-bottom-width: 0px;
	width: 45.45em;
	height: 27.27em;
}

/* The tree doesn't normally have a border so when inside of a panelCollection, we must add one or
   else the combination would show up with a blatantly missing bottom border. */
af|panelCollection af|tree{

}

/* Eliminate multiple borders along the edges of the panelCollection. */
af|panelCollection af|toolbox::row,
af|panelCollection af|toolbox::last-row,
af|panelCollection af|table,
af|panelCollection af|tree,
af|panelCollection af|treeTable {

}

/* Since the panel collection statusbar has only text and separators, we need to size the
   separator and items so that they center */
af|panelCollection::statusbar af|toolbar::separator,
af|panelCollection::statusbar af|toolbar::item{
	height: 21px;
}

af|panelCollection::statusbar-text-item {
	width: 100px;
	white-space: nowrap;
	color: #585955;
	overflow: hidden;
	display:block;
}

@agent ie, webkit {
	af|panelCollection::statusbar-text-item {
		text-overflow: ellipsis;
	}
}

af|panelCollection::statusbar-count-item {
	width: 20px;
	white-space: nowrap;
	overflow: hidden;
	display:block;
}
/* icons */
/* The icons must be URIIcons, not contextIcons to work.
 It's because in PanelCollectionRenderer we pass the url to the commandToolbarButton.
 */
af|panelCollection::qbe-icon {
	content: url(//afr/qbe_ena.png);
	width: 16px;
	height: 16px;
}

af|panelCollection::freeze-icon {
	content: url(//afr/freeze_ena.png);
	width: 16px;
	height: 16px;
}

af|panelCollection::freeze-disabled-icon {
	content: url(//afr/freeze_dis.png);
	width: 16px;
	height: 16px;
}

af|panelCollection::maximize-icon {
	content: url(//afr/maximize_ena.png);
	width: 16px;
	height: 16px;
}

af|panelCollection::wrap-icon {
	content: url(//afr/wrap_ena.png);
	width: 16px;
	height: 16px;
}

af|panelCollection::wrap-icon:rtl {
	content: url(//afr/wrap_ena_rtl.png);
}

af|panelCollection::wrap-disabled-icon {
	content: url(//afr/wrap_dis.png);
	width: 16px;
	height: 16px;
}

af|panelCollection::wrap-disabled-icon:rtl {
	content: url(//afr/wrap_dis_rtl.png);
}

af|panelCollection::go-up-icon {
	content: url(//afr/goup_ena.png);
	width: 16px;
	height: 16px;
}

af|panelCollection::go-up-disabled-icon {
	content: url(//afr/goup_dis.png);
	width: 16px;
	height: 16px;
}

af|panelCollection::go-to-top-icon {
	content: url(//afr/gototop_ena.png);
	width: 16px;
	height: 16px;
}

af|panelCollection::go-to-top-disabled-icon {
	content: url(//afr/gototop_dis.png);
	width: 16px;
	height: 16px;
}

af|panelCollection::show-as-top-icon {
	content: url(//afr/showtop_ena.png);
	width: 16px;
	height: 16px;
}

af|panelCollection::show-as-top-disabled-icon {
	content: url(//afr/showtop_dis.png);
	width: 16px;
	height: 16px;
}

/**
 * The table/treeTable/tree layout gets messed up if placed in a align="right/center" div container.
 * So we need the appropriate text-align attribute.
 */
af|table:ltr,
af|treeTable:ltr,
af|tree:ltr{
	text-align: left;
}

af|table:rtl,
af|treeTable:rtl,
af|tree:rtl {
	text-align: right;
}

/* end of the panelCollection Style*/

/* start of menu, commandMenuItem, and goMenuItem styles */

/* Base style for menu. Use -tr-visible-items to set the maximum allowed items on a pulldown.*/
af|menu {
	-tr-visible-items: 14;
	-tr-open-animation-duration: 100;
}

/* Animation duration is set to zero for Firefox 2 (revision 1.8), as with large (scrolling) menus
   the popup size is sometimes miscalculated (bug 7537520). Work around problem as ff2 is sunsetting
   and problem is not present in any other supported browsers, including Firefox 3. */
@agent gecko and (version: 1.8) {
	af|menu {
		-tr-open-animation-duration: 0;
	}
}

/* Styling on a menu bar item - this could be a menu, commandMenuItem or a goMenuItem on a menu bar.
  The bar-item has 3 major sections, the 'bar-item-icon-style', the 'bar-item-text', and the
   'bar-item-open-icon-style'. Height is needed for proper size on highlight and mouse down. */
af|menu::bar-item,
af|commandMenuItem::bar-item,
af|goMenuItem::bar-item {
	height: 16px;
	padding: 2px 5px 1px 5px;
	-tr-rule-ref: selector(".AFDefaultFont:alias");
	cursor: default;
	white-space: nowrap;
}

/* We don't want to use px units for font containers in large-fonts mode */
@accessibility-profile large-fonts {
	af|commandMenuItem::bar-item,
	af|goMenuItem::bar-item,
	af|menu::bar-item {
		height: auto;
	}
}

/* A highlighted menu bar item. The menu bar item is not only highlighted on mouseover, but also
   when its submenu is opened or when it's selected with the keyboard, so we can't just use the
   :hover state and need to use the :highlighted state instead. */
af|commandMenuItem::bar-item:highlighted,
af|goMenuItem::bar-item:highlighted,
af|menu::bar-item:highlighted {
	-tr-rule-ref: selector(".AFTextForeground:alias");
	-tr-rule-ref: selector(".AFMediumBackground:alias");
	cursor: pointer;
}

/* A depressed menu bar item. The menu bar item is not only depressed on mousedown, but also
   on mouseover after a menu has been opened, so we can't just use the :active state and need to
   use the :depressed state instead. */
af|commandMenuItem::bar-item:depressed,
af|goMenuItem::bar-item:depressed,
af|menu::bar-item:depressed {
	-tr-rule-ref: selector(".AFTextForeground:alias");
	-tr-rule-ref: selector(".AFMediumBackground:alias");
}

/* The part of the menu bar item where the optional user defined icon goes. */
af|menu::bar-item-icon-style,
af|commandMenuItem::bar-item-icon-style,
af|goMenuItem::bar-item-icon-style {
}

/* The text of the menu bar item. All types have the same look.
   NOTE: display block needed to prevent unwanted 'squishing' with the open icon when used in tables
         with TD width 100% (happens in toolbar with spacers) */
af|menu::bar-item-text,
af|commandMenuItem::bar-item-text,
af|goMenuItem::bar-item-text {
	min-height: 16px;
	display: block;
	padding: 0px 5px 0px 5px;
	white-space: nowrap;
	color: #2a5885;
	text-decoration: none;
}

af|menu::bar-item-text:rtl,
af|commandMenuItem::bar-item-text:rtl,
af|goMenuItem::bar-item-text:rtl {
	padding-right: 5px;
	padding-left: 0px;
}

af|menu:disabled::bar-item-text,
af|commandMenuItem:disabled::bar-item-text,
af|goMenuItem:disabled::bar-item-text {
	-tr-rule-ref: selector(".AFButtonForegroundDisabled:alias");
}

/* The access key for a menu bar item. */
af|menu::bar-item-access-key,
af|commandMenuItem::bar-item-access-key,
af|goMenuItem::bar-item-access-key {
	-tr-rule-ref: selector(".AFFormAccessKeyStyle:alias");
}

/* The menu bar item's dropdown icon (down arrow). */
af|menu::bar-item-open-icon-style {
	background-position: right bottom;
	background-repeat: no-repeat;
	background-image: url("/component/img_metro/head_arrow.png");
	opacity: 0.45;
	filter: alpha(opacity=45);
	width: 10px;
	height: 7px;
}

af|menu::bar-item-open-icon-style:rtl {
	background-position: left bottom;
}

af|menu:disabled::bar-item-open-icon-style {
	opacity: 0.25;
	filter: alpha(opacity=25);
}

/* the same dropdown icon is used for mouse over and mouse down */
af|menu:depressed af|menu::bar-item-open-icon-style {
	opacity: 1;
	-webkit-filter: none;
	filter: none
}

/* An icon hook for users to replace bar-item-open-icon-style with another img or text. */
af|menu::bar-item-open-icon {
	content: inhibit;
}

/* The container of the menu contents. It is placed in a popup when displayed */
af|menu::child-container {
	display: none;
	-tr-rule-ref: selector(".AFTextBackground:alias");
	-tr-rule-ref: selector(".AFDefaultFontFamily:alias");
	-tr-rule-ref: selector(".AFTextForeground:alias");
}

/* The menu's scroll up icon. Displayed to allow scrolling up through menu items. */
af|menu::scroll-up-icon-style {
	height: 18px;
	background-position: center center;
	background-repeat: no-repeat;
	background-image: url("/afr/scrollUp_n.png");
	text-align: center;
}

/* Icon hook for users to replace scroll-up-icon-style with another img or text */
af|menu::scroll-up-icon {
	content: inhibit;
}

/* The menu's scroll down icon. Displayed to allow scrolling down through menu items. */
af|menu::scroll-down-icon-style {
	height: 18px;
	background-position: center center;
	background-repeat: no-repeat;
	background-image: url("/afr/scrollDown_n.png");
	text-align: center;
}

/* Icon hook for users to replace scroll-down-icon-style with another img or text */
af|menu::scroll-down-icon {
	content: inhibit;
}

/* The left icon area in the row with the scroll up/down icon */
af|menu::scroll-up-icon-style af|menu::submenu-icon-style,
af|menu::scroll-down-icon-style af|menu::submenu-icon-style {
	float: left;
	height: 16px;
}

af|menu::scroll-up-icon-style af|menu::submenu-icon-style:rtl,
af|menu::scroll-down-icon-style af|menu::submenu-icon-style:rtl {
	float: right;
}

/* CommandMenuItem, GoMenuItem, and Submenu
   Menus can contain either commandMenuItems, goMenuItems,  or child menus (called submenus). Menu
   items have 4 major sections, the icon-style (contains the optional icon attribute), the text, the
   accelerator (contains the commandMenuItem or goMenuItem's accelerator shortcut and is just an
   empty space for a submenu), and the open-indicator (contains the submenu open icon and is just an
   empty space for a commandMenuItem or goMenuItem). */
af|commandMenuItem::menu-item,
af|goMenuItem::menu-item,
af|menu::submenu {
	-tr-rule-ref: selector(".AFMenuItem:alias");
}

/* Disabled menu item */
af|commandMenuItem::menu-item:disabled,
af|goMenuItem::menu-item:disabled,
af|menu::submenu:disabled {
	-tr-rule-ref: selector(".AFMenuItemDisabled:alias");
}

/* Styling on menu items. Menu items are commandMenuItems and submenus (menus in menus). */
.AFMenuItem:alias {
	-tr-rule-ref: selector(".AFDefaultFont:alias");
	-tr-rule-ref: selector(".AFTextForeground:alias");
	white-space: nowrap;
	height: 30px;
	line-height: 30px;
	padding: 0 15px;
	color: #2a5885;
}

/* Disabled menu item */
.AFMenuItemDisabled:alias {
	-tr-rule-ref: selector(".AFVeryDarkAccentForeground:alias");
}

/* Menu items consist of four major parts - optional icon, text, accelerator, and the submenu open
   icon. */
af|commandMenuItem::menu-item-icon-style,
af|commandMenuItem::menu-item-text,
af|commandMenuItem::menu-item-accelerator,
af|commandMenuItem::menu-item-open-indicator,
af|goMenuItem::menu-item-icon-style,
af|goMenuItem::menu-item-text,
af|goMenuItem::menu-item-accelerator,
af|goMenuItem::menu-item-open-indicator,
af|menu::submenu-icon-style,
af|menu::submenu-text,
af|menu::submenu-accelerator,
af|menu::submenu-open-indicator {
	padding: 0;
}

/* The colored left part of the menu item where the optional attribute icon goes. */
af|commandMenuItem::menu-item-icon-style,
af|goMenuItem::menu-item-icon-style,
af|menu::submenu-icon-style {
	padding: 0 4px 0 8px;
	text-align: center;
}

/* The text of the menu item */
af|commandMenuItem::menu-item-text,
af|goMenuItem::menu-item-text,
af|menu::submenu-text {
	padding: 0px 15px 0px 5px;
	white-space: nowrap;
}

/* go menu item link (anchor) needs some additional styling so that it looks like other menu items */
af|goMenuItem::menu-item-link {
	cursor: default;
	-tr-rule-ref: selector(".AFTextForeground:alias");
	text-decoration: none;
}

af|commandMenuItem::menu-item-text:rtl,
af|goMenuItem::menu-item-text:rtl,
af|menu::submenu-text:rtl {
	padding-right: 5px;
	padding-left: 15px;
}

/* The access key for the menu item */
af|commandMenuItem::menu-item-access-key,
af|goMenuItem::menu-item-access-key,
af|menu::submenu-access-key {
	-tr-rule-ref: selector(".AFFormAccessKeyStyle:alias");
}

/* The accelerator for the menu item (like Ctrl+A). CommandMenuItems have accelerators, while for
   submenus this is just an empty spot. */
af|commandMenuItem::menu-item-accelerator,
af|goMenuItem::menu-item-accelerator,
af|menu::submenu-accelerator {
	padding-left: 0px;
	padding-right: 5px;
	white-space: nowrap;
}

af|commandMenuItem::menu-item-accelerator:rtl,
af|goMenuItem::menu-item-accelerator:rtl,
af|menu::submenu-accelerator:rtl {
	padding-left: 5px;
	padding-right: 0px;
}

/* The location on the menu item where a submenu open icon would go (the right arrow).
   Submenus have open icons, while for commandMenuItems this is just an empty spot. */
af|commandMenuItem::menu-item-open-indicator,
af|goMenuItem::menu-item-open-indicator,
af|menu::submenu-open-indicator {
	width: 14px;
	height: 10px;
}

/* The submenu icon that opens the nested menu (menuBar overflow is like submenu).*/
af|menu::submenu-open-icon-style,
af|menuBar::overflow-container af|menu::bar-item-open-icon-style {
	background-position: left center;
	background-repeat: no-repeat;
	background-image: url("/component/img_metro/openSubmenu.png");
	opacity: 0.75;
	filter: alpha(opacity=75);
	width: 6px;
	height: 10px;
}

af|menu::submenu-open-icon-style:rtl,
af|menuBar::overflow-container af|menu::bar-item-open-icon-style:rtl {
	background-position: right center;
	background-image: url("/afr/openSubmenu_n_rtl.png");
}

af|menu:disabled::submenu-open-icon-style,
af|menuBar::overflow-container af|menu:disabled::bar-item-open-icon-style {
	background-image: url("/component/img_metro/openSubmenu.png");
	opacity: 0.25;
	filter: alpha(opacity=25);
}

af|menu:disabled::submenu-open-icon-style:rtl,
af|menuBar::overflow-container af|menu:disabled::bar-item-open-icon-style:rtl {
	background-image: url("/afr/openSubmenu_d_rtl.png");
}

/* Icon hook for users to replace the default submenu open icon with another img or text */
af|menu::submenu-open-icon {
	content: inhibit;
}

/* When a menu item is highlighted the different parts of the item are styled. The menu item is not
   only highlighted on mouseover, but also when its submenu is opened or when it's selected with the
   keyboard, so we can't use the :hover state and use highlighted instead. */
af|commandMenuItem:highlighted::menu-item-text,
af|commandMenuItem:highlighted::menu-item-accelerator,
af|commandMenuItem:highlighted::menu-item-open-indicator,
af|goMenuItem:highlighted::menu-item-text,
af|goMenuItem:highlighted::menu-item-accelerator,
af|goMenuItem:highlighted::menu-item-open-indicator,
af|menu:highlighted::submenu-text,
af|menu:highlighted::submenu-accelerator,
af|menu:highlighted::submenu-open-indicator {
	-tr-rule-ref: selector(".AFMediumBackground:alias");
}

af|commandMenuItem:highlighted::menu-item-icon-style,
af|goMenuItem:highlighted::menu-item-icon-style,
af|menu:highlighted::submenu-icon-style {
	background-color: #e4eaf0;
}

/* Icon style for check type commandMenuItems (displayed in the icon part of the menu item) */
af|commandMenuItem::menu-item-check-icon-style {
	-tr-rule-ref: selector(".AFMediumBackground:alias");
	background-repeat: no-repeat;
	background-position: center;
	background-image: url("/afr/completeind_status.png");
	opacity: 0.1;
	width: 24px;
	height: 16px;
}

/* Icon style for radio type commandMenuItems (displayed in the icon part of the menu item) */
af|commandMenuItem::menu-item-radio-icon-style {
	-tr-rule-ref: selector(".AFMediumBackground:alias");
	background-repeat: no-repeat;
	background-position: center;
	background-image: url("/afr/status_bullet.png");
	width: 24px;
	height: 16px;
	opacity: 0.1;
}

/* Radio or check menu items have full opacity when they are checked. */
af|commandMenuItem:selected::menu-item-check-icon-style,
af|commandMenuItem:selected::menu-item-radio-icon-style {
	opacity: 1;
}

@agent ie {
	af|commandMenuItem::menu-item-radio-icon-style,
	af|commandMenuItem::menu-item-check-icon-style {
		filter: alpha(opacity:10);
	}

	af|commandMenuItem:selected::menu-item-radio-icon-style,
	af|commandMenuItem:selected::menu-item-check-icon-style {
		filter: alpha(opacity:100);
	}
}

/* Icon hook for users to replace the default check icon with another img or text */
af|commandMenuItem::menu-item-check-icon {
	content: inhibit;
}

/* Icon hook for users to replace the default radio icon with another img or text */
af|commandMenuItem::menu-item-radio-icon {
	content: inhibit;
}

/* Text for default antonym type commandMenuItems and selected antonym type commandMenuItems.
   Note that only non-selected menu-item-antonym-text-default and selected
   menu-item-antonym-text-selected are displayed. */
af|commandMenuItem::menu-item-antonym-text-default,
af|commandMenuItem:selected::menu-item-antonym-text-selected {
	display: inline;
}

/* Text for default antonym type commandMenuItems and selected antonym type commandMenuItems.
   Note that only non-selected menu-item-antonym-text-default and selected
   menu-item-antonym-text-selected are displayed. */
af|commandMenuItem::menu-item-antonym-text-selected,
af|commandMenuItem:selected::menu-item-antonym-text-default {
	display: none;
}

/* For high contrast compatibility, we will include a 1px border during highlighting. We do this
   because background color (our normal menu item highlight) is ignored in high contrast mode.*/
@accessibility-profile high-contrast {
	af|commandMenuItem::menu-item-icon-style,
	af|commandMenuItem::menu-item-text,
	af|commandMenuItem::menu-item-accelerator,
	af|commandMenuItem::menu-item-open-indicator,
	af|goMenuItem::menu-item-icon-style,
	af|goMenuItem::menu-item-text,
	af|goMenuItem::menu-item-accelerator,
	af|goMenuItem::menu-item-open-indicator,
	af|menu::submenu-icon-style,
	af|menu::submenu-text,
	af|menu::submenu-accelerator,
	af|menu::submenu-open-indicator,
	af|commandMenuItem:disabled:highlighted::menu-item-icon-style,
	af|commandMenuItem:disabled:highlighted::menu-item-text,
	af|commandMenuItem:disabled:highlighted::menu-item-accelerator,
	af|commandMenuItem:disabled:highlighted::menu-item-open-indicator,
	af|goMenuItem:disabled:highlighted::menu-item-icon-style,
	af|goMenuItem:disabled:highlighted::menu-item-text,
	af|goMenuItem:disabled:highlighted::menu-item-accelerator,
	af|goMenuItem:disabled:highlighted::menu-item-open-indicator,
	af|menu:disabled:highlighted::submenu-icon-style,
	af|menu:disabled:highlighted::submenu-text,
	af|menu:disabled:highlighted::submenu-accelerator,
	af|menu:disabled:highlighted::submenu-open-indicator
	{
		padding-top: 1px;
		padding-bottom: 1px;
		border-top: 0px;
		border-bottom: 0px;
	}

	af|commandMenuItem:highlighted::menu-item-icon-style,
	af|commandMenuItem:highlighted::menu-item-text,
	af|commandMenuItem:highlighted::menu-item-accelerator,
	af|commandMenuItem:highlighted::menu-item-open-indicator,
	af|goMenuItem:highlighted::menu-item-icon-style,
	af|goMenuItem:highlighted::menu-item-text,
	af|goMenuItem:highlighted::menu-item-accelerator,
	af|goMenuItem:highlighted::menu-item-open-indicator,
	af|menu:highlighted::submenu-icon-style,
	af|menu:highlighted::submenu-text,
	af|menu:highlighted::submenu-accelerator,
	af|menu:highlighted::submenu-open-indicator
	{
		padding-top: 0px;
		padding-bottom: 0px;
		border-top: 1px solid;
		border-bottom: 1px solid;
	}
}

/* The row inside a menu that contains a separator. */
af|menu::separator-row {
	height: 7px;
}

af|menu::separator-row af|menu::item-empty-cell {
	height: 7px;
	overflow: hidden;
}

/* The seperator line. The separator stretches across most of the separator-row, but not the space
  on the left where optional icons go. */
af|menu::separator {
	height: 1px;
	-tr-rule-ref: selector(".AFDarkBackground:alias");
	margin: 2px 1px;
	overflow: hidden;
}

/* The detachable menu's header. The header will look different (contains different visible
   children) depending on it's current state, either 'detachable' (before it has been detached) or
   'detached' (after it has been detached). When 'detachable', the header shows a drag and drop grip
   handle. When 'detached', the header appears similar to a panel window header. */
af|menu::child-container af|menu::detachable-header {
	white-space: nowrap;
}

/* When detached, the header looks like a panel window header */
af|menu::child-container:detached af|menu::detachable-header {
	background-image: url("/afr/dialog-header-middle.png");
	background-position: 0px -1px;
	height: 18px;
}

/* The main (middle) section of the detachable header, used to make the title occupy 100%
   of the space between the icon and the close region. This section will contain either the
   detach-handle (when detachable) or the panelWindow title (when detached). */
af|menu::child-container af|menu::detachable-header-content-center {
	width: 100%;
}

/* On a detachable menu, this is the detach handle. */
af|menu::detach-handle {
	display: block;
	background-image: url("/afr/tearOff_bg_n.png");
	height: 8px;
	cursor: move;
}

af|menu::detach-handle:hover {
	background-image: url("/afr/tearOff_bg_mo.png");
}

/* Detachable menus use specialized depressed state on headers instead of active state */
af|menu::detachable-header-content-center:depressed af|menu::detach-handle {
	background-image: url("/afr/tearOff_bg_md.png");
}

/* When a detachable menu is detached the handle is not shown */
af|menu::child-container:detached af|menu::detach-handle {
	display: none;
}

/* On a detachable menu, this is the grip on the detach-handle (the three dots). */
af|menu::detach-grip {
	background-image: url("/afr/grip_n.png");
	background-repeat: no-repeat;
	background-position: center 2px;
	overflow: hidden;
	height: 8px;
}

af|menu::detach-grip:hover {
	background-image: url("/afr/grip_mo.png");
}

/* Detachable menus use specialized depressed state on headers instead of active state */
af|menu::detachable-header-content-center:depressed af|menu::detach-grip {
	background-image: url("/afr/grip_md.png");
}

/* When a floating menu is detached the grip is not shown */
af|menu::child-container:detached af|menu::detach-grip {
	display: none;
}

/* The title and close button on a detached menu's header. These aren't displayed until the menu
   is detached. */
af|menu::child-container af|panelWindow::close-icon-style,
af|menu::child-container af|panelWindow::title {
	display: none;
}

/* The title that is displayed after the detachable menu is detached. */
af|menu::child-container:detached af|panelWindow::title {
	display: block;
	padding: 0px 4px 1px 4px;
	margin-bottom: 3px;
}

/* The close icon that is displayed after the detachable menu is detached. */
af|menu::child-container:detached af|panelWindow::close-icon-style {
	display: block;
	padding: 0px 2px 2px 2px;
}

/* private - Remove the dashed border from focused menu bar items and menu items. Use the
   :highlighted state for 'normal' styling customization. */
af|menu::bar-item-content:focus,
af|commandMenuItem::bar-item-content:focus,
af|goMenuItem::bar-item-content:focus,
af|menu::submenu:focus,
af|commandMenuItem::menu-item:focus,
af|goMenuItem::menu-item:focus {
	outline: none;
}

af|menu::bar-item-content:highlighted,
af|commandMenuItem::bar-item-content:highlighted,
af|goMenuItem::bar-item-content:highlighted,
af|menu::submenu:highlighted,
af|commandMenuItem::menu-item:highlighted,
af|goMenuItem::menu-item:highlighted {
	cursor: pointer;
}

/* private - used to differentiate contents when scroll icons are present. */
af|menu::scroll-box {
	overflow: hidden;
	position: relative;
}

/* private - This is an empty content div needed to make sure the menu item parts get the right
   size. */
af|commandMenuItem::menu-item-empty-cell,
af|goMenuItem::menu-item-empty-cell,
af|menu::item-empty-cell {
	height: 18px;
}

/* private */
af|commandMenuItem::menu-item-icon-style af|commandMenuItem::menu-item-empty-cell,
af|goMenuItem::menu-item-icon-style af|goMenuItem::menu-item-empty-cell,
af|menu::submenu-icon-style af|menu::item-empty-cell {
	height: 18px;
}

/* end of menu and commandMenuItem styles */


/* start of popup styles */

/* Set the shadow pixel size here to control shadow size of all popups */
af|popup {
	-tr-shadow-pixel-size: 4;
	-tr-shadow-offset: 3;
	-tr-shadow-starting-black-percent: 100;
}

/* Popup used for menus and other menu type popups. */
.AFPopupMenuPopup {
	position: relative;
	-tr-rule-ref: selector(".AFTextBackground:alias");
	-tr-rule-ref: selector(".AFPopupMenuBorder:alias");
	z-index: 999;
	padding: 1px;
}

/* The content of the menu type popup. */
.AFPopupMenuContent {
	position: relative;
	z-index: 100;
}

/* end of popup styles */


/* Start of toolbox styles */

/* Base style of the toolbox. */
af|toolbox {
	-tr-rule-ref: selector(".AFLightAccentBackground:alias");
	-tr-rule-ref: selector(".AFTextForeground:alias");
	width: 100%;
	overflow: hidden;
	position: relative;
}

/* The main body of the toolbox, contains all toolbox rows. */
af|toolbox::body {

	border-bottom: none;
	border-right: none;
	min-height: 20px;
}

/* A row inside the toolbox. */
af|toolbox::row,
af|toolbox::last-row {
	min-height: 20px;
	width: 100%;
}

/* A leading cell (a cell before the last cell) in a toolbox row */
af|toolbox::leading-cell {
	border-right: 1px solid black;
}

af|toolbox::leading-cell:rtl {
	border-right: none;
	border-left: 1px solid black;
}

/* The last cell in a toolbox row. When flex isn't used it stretches to use up available space */
af|toolbox::last-cell {
}

/* End of toolbox styles */


/* Start of nested toolbox and toolbar styles */

/* make toolbox background transparent when inside headers, panelBox */
af|panelHeader::title-table af|toolbox,
af|showDetailHeader::title-table af|toolbox,
af|query::title-table af|toolbox,
af|panelBox::toolbar af|toolbox {
	background-color: transparent;
	-tr-rule-ref: selector(".AFTextForeground:alias");
}

/* make toolbox borders transparent when inside headers, panelCollection, and panelBox.
   PanelCollection does require internal toolbox borders (dividers) so we keep original
   styling for toolbox::leading-cell and toolbox::row inside panelCollection. */
af|panelHeader::title-table af|toolbox::body,
af|panelHeader::title-table af|toolbox::row,
af|panelHeader::title-table af|toolbox::last-row,
af|panelHeader::title-table af|toolbox::leading-cell,
af|showDetailHeader::title-table af|toolbox::body,
af|showDetailHeader::title-table af|toolbox::row,
af|showDetailHeader::title-table af|toolbox::last-row,
af|showDetailHeader::title-table af|toolbox::leading-cell,
af|query::title-table af|toolbox::body,
af|query::title-table af|toolbox::row,
af|query::title-table af|toolbox::last-row,
af|query::title-table af|toolbox::leading-cell,
af|panelCollection af|toolbox::body,
af|panelBox::toolbar af|toolbox::body,
af|panelBox::toolbar af|toolbox::row,
af|panelBox::toolbar af|toolbox::last-row,
af|panelBox::toolbar af|toolbox::leading-cell {
	border: transparent;
}

af|panelHeader::title-table af|menuBar,
af|panelHeader::title-table af|toolbar,
af|showDetailHeader::title-table af|menuBar,
af|showDetailHeader::title-table af|toolbar,
af|query::title-table af|menuBar,
af|query::title-table af|toolbar,
af|panelBox::toolbar af|toolbar {
	background-color: transparent;
	-tr-rule-ref: selector(".AFTextForeground:alias");
}

/* Nested toolbars in panelAccordion and panelBox use float to get right alignment. They could
   later be updated to use a nested virtual toolbox containing a virtual group and a virtual
   leading toolbar with flex and stretchId to attain right alignment in the toolbar (like panelHeader). */
af|panelAccordion::header-toolbar af|toolbar::body {
	/* setting float to none fixes overflow for gecko */
	float: none;
}

@agent ie and (version: 7.0) {
	/* resetting float to beginning fixes it for ie */
	af|panelAccordion::header-toolbar af|toolbar::body,
	af|panelBox::toolbar af|toolbar::body {
		float: left;
	}

	/* resetting float to right fixes it for ie */
	af|panelAccordion::header-toolbar:rtl af|toolbar::body:rtl,
	af|panelBox::toolbar:rtl af|toolbar::body:rtl {
		float: right;
	}

	/* however, the overflow content still needs to be on the end */
	af|panelAccordion::header-toolbar af|toolbar::content,
	af|panelBox::toolbar af|toolbar::content {
		-tr-rule-ref: selector(".AFFloatEnd:alias");
	}
}

af|panelBox::toolbar af|toolbar,
af|panelBox::toolbar af|toolbar::body {
	-tr-rule-ref: selector(".AFFloatEnd:alias");
}

/* End of nested toolbox and toolbar styles */


/* Style Class for create Icon in LOV */
af|inputListOfValues::popup-create-icon-style {
	-tr-rule-ref: selector(".AFClickableImageAnchor:alias");
	-tr-rule-ref: selector(".AFListOfValuesCreateIconStyle:alias");
}

af|inputComboboxListOfValues::popup-create-icon-style {
	-tr-rule-ref: selector(".AFClickableImageAnchor:alias");
	-tr-rule-ref: selector(".AFListOfValuesCreateIconStyle:alias");
}

af|inputListOfValues::popup-icon-container {
}

/* end of styles for create Icon in LOV */

/* Underline the access key for SelectOne choices */
af|selectOneChoice::access-key,
af|selectOneListbox::access-key,
af|selectOneRadio::access-key {
	-tr-rule-ref: selector(".AFFormAccessKeyStyle:alias");
}

/* Start selectOneListBox */

/* public styles the content of the selectOneListBox */
af|selectOneListbox::content {
	display:block;
	-tr-rule-ref: selector(".AFFormControlContentBorder:alias");
	-tr-rule-ref: selector(".AFTextBackground:alias");
	list-style-image: none;
	list-style-position: outside;
	list-style-type: none;
	margin: 0px;
	padding: 0px;
}
/* Minimum height required in WebKit for a vertical scrollbar to appear. */
@agent webkit {
	af|selectOneListbox::content {
		min-height: 56px;
	}
}
/* Minimum width required in gecko and webkit for a vertical scrollbar to appear. */
@agent gecko, webkit {
	af|selectOneListbox::content {
		min-width: 30px;
	}
}
/* public styles the disabled content of the selectOneListBox */
af|selectOneListbox:disabled::content {
	display:block;
	-tr-rule-ref: selector(".AFFormControlContentBorder:alias");
	-tr-rule-ref: selector(".AFFormControlContentBackgroundDisabled:alias");
}
af|selectOneListbox:read-only::content {
	border: 0px;
	background-color: inherit;
}
/*public
  Style on the separators in the list box
  */
af|selectOneListbox::separator {
	overflow:hidden;
	margin-bottom:1px;
	cursor: default;
	height:1px;
	font-size:1px;
	line-height:1px;
	border-bottom:1px solid #979993;
}

/* Private - can be public
   Styles enabled select items in the popup
   list.
*/
af|selectOneListbox::item {
	-tr-rule-ref: selector(".AFTextBackground:alias");
	padding:1px;
	border:1px #FFFFFF dotted;
	-tr-rule-ref: selector(".AFTextForeground:alias");
	-tr-rule-ref: selector(".AFDefaultFont:alias");
	vertical-align:baseline;
	-tr-rule-ref: selector(".AFStartTextAlign:alias");
	white-space:nowrap;
}
@agent ie, webkit {
	af|selectOneListbox::item {
		text-overflow: ellipsis;
	}
}

/* Public
   Styles selected list items.
   If use selected state, it breaks chooseColor styles. This style is used
   when hover and selected. So it's not purly a "selected" state.
*/
af|selectOneListbox::item:active,
af|selectOneListbox::item:selected,
af|selectOneListbox::item:hover{
	-tr-rule-ref: selector(".AFMediumBackground:alias");
	-tr-rule-ref: selector(".AFActiveLinkBorder:alias");
}
/* Public
   Styles disabled select items in the
   list.
*/
af|selectOneListbox::item:disabled {
	-tr-rule-ref: selector(".AFFormControlItemBackgroundDisabled:alias");
	-tr-rule-ref: selector(".AFFormControlItemBorderDisabled:alias");
	-tr-rule-ref: selector(".AFFormControlItemForegroundDisabled:alias");
}
af|selectOneListbox::item:disabled:selected {
	-tr-rule-ref: selector(".AFMediumBackground:alias");
}
@accessibility-profile high-contrast {
	af|selectOneListbox::item,
	af|selectOneListbox::item:disabled,
	af|selectOneListbox::item:disabled:hover{
		padding:2px;
		border-width:0px;
	}
	af|selectOneListbox::item:active,
	af|selectOneListbox::item:selected,
	af|selectOneListbox::item:hover{
		border-width: 2px;
		padding:0px;
	}
	af|selectOneListbox::item:disabled {
		text-decoration:line-through;
	}
}

/* End selectOneListBox */

/* Start selectManyChoice */
/** Public
  * the input field used to display the selected text
  */
af|selectManyChoice {
	white-space: nowrap;
}


af|selectManyChoice::content{
	border: 0px;
	-tr-rule-ref: selector(".AFFormControlContent:alias");
	width: 155px;
	padding: 0px 2px 0px 3px;
	margin: 0px;
}

af|selectOneChoice::content{
	-tr-rule-ref: selector(".AFFormControlContentBorder:alias");
	-tr-rule-ref: selector(".AFDefaultFont:alias");
}

af|selectOneChoice::compact-content{
}

af|selectManyChoice:disabled::content,
af|selectOneChoice:disabled::content,
af|inputComboboxListOfValues:disabled::content {
	-tr-rule-ref: selector(".AFFormControlContentForegroundDisabled:alias");
	-tr-rule-ref: selector(".AFFormControlContentBackgroundDisabled:alias");
	cursor: default;
}
af|selectManyChoice:read-only::content,
af|selectOneChoice:read-only::content {
	border: 0px none #FFFFFF;
	margin: 0px;
	padding: 0px;
}
af|selectManyChoice::content:focus {
	border-style: dotted;
	border-color: #003399;
	-tr-rule-ref: selector(".AFTextBackground:alias");
}
/** Private
  * This is a work around for IE not paying attention to :focus styles for 'input' elements.
  */
@agent ie {
	af|selectOneChoice::content:selected,
	af|chooseDate::choice-list-content:selected{
		border-style: dotted;
		border-color: #003399;
		padding-right: 0px;
	}
	af|selectManyChoice::content:selected{
		-tr-rule-ref: selector(".AFTextBackground:alias");
	}

	af|selectOneChoice::content:selected:rtl,
	af|chooseDate::choice-list-content:selected:rtl{
		padding-left: 0px;
	}
}
/** Public
  * Styles the selectManyChoice background of the dropdown icon
  */
af|selectManyChoice::dropdown {
	-tr-rule-ref: selector(".AFFormControlContentBorder:alias");
	font-size: 11px;
	margin: 1px;
	vertical-align: 9.1%;
}
@agent webkit {
	af|selectManyChoice::dropdown {
		display: inline-block;
	}
}

af|selectOneChoice::dropdown,
af|chooseDate::choice-list-dropdown{
	border: 1px #000000 solid;
	font-size:13px;
	margin: 1px 1px 1px 0px;
}
af|selectOneChoice::dropdown:rtl,
af|chooseDate::choice-list-dropdown:rtl{
	margin: 1px 0px 1px 1px;
}

/** Public
  * Styles the selectManyChoice dropdown icon
  */
af|selectManyChoice::dropdown-icon-style {
	-tr-rule-ref: selector(".AFClickableImageAnchor:alias");
	background-image: url('/afr/dropdown_n.png');
	background-position:center;
	font-size:11px;
	margin-left: 0px;
	margin-right: 0px;
	padding:1px 10px 3px 1px;
}
@agent ie {
	af|selectManyChoice::dropdown-icon-style {
		display: inline-block;
	}
}
@agent webkit {
	af|selectManyChoice::dropdown-icon-style {
		display: inline-block;
		-webkit-box-sizing: border-box;
		height: 11px;
	}
}

af|chooseDate::choice-list-dropdown-icon-style{
	-tr-rule-ref: selector(".AFClickableImageAnchor:alias");
	background-image: url('/afr/dropdown_n.png');
	background-position: center;
}
af|selectManyChoice:disabled::dropdown-icon-style,
af|selectOneChoice:disabled::dropdown-icon-style,
af|chooseDate:disabled::choice-list-dropdown-icon-style{
	background-image: url('/afr/dropdown_d.png');
}

/** Public
  * Icon hook for users to replace dropdown-icon-style with another img or text
  */
af|selectManyChoice::dropdown-icon,
af|selectOneChoice::dropdown-icon,
af|chooseDate::choice-list-dropdown-icon{
	content: inhibit;
}
@agent gecko {
	af|selectOneChoice::dropdown,
	af|chooseDate::choice-list-dropdown{
		font-size: 12px;
		padding-top: 1px;
	}
	af|selectOneChoice::dropdown-icon-style,
	af|chooseDate::choice-list-dropdown-icon-style{
		font-size:12px;
		padding-right:14px;
	}
}
@agent ie {
	af|selectManyChoice::dropdown-icon-style {
		font-size: 6px;
	}
	af|selectOneChoice::control {
		vertical-align: 0%;
	}
	af|selectOneChoice::dropdown,
	af|chooseDate::choice-list-dropdown{
		vertical-align: 4%;
		margin: 1px 2px 1px 0px;
	}
	af|selectOneChoice::dropdown-icon-style,
	af|chooseDate::choice-list-dropdown-icon-style{
		font-size: 12px;
		padding-top: 1px;
		padding-right: 15px;
		margin: 0px;
	}
	af|selectOneChoice::dropdown-icon-style:rtl,
	af|chooseDate::dropdown-icon-style:rtl{
		background-position-x: 6px;
	}
}

/** Public
  * selectManyChoice label style
  */
af|selectManyChoice::label {
	-tr-rule-ref: selector(".AFLabel:alias");
}

af|selectManyChoice:disabled::label {
	-tr-rule-ref: selector(".AFLabelDisabled:alias");
}

/** Public
  * Styles the dropdown panel
  */
af|selectManyChoice::dropdown-panel,
af|selectOneChoice::dropdown-panel {
	border:0px;
	-tr-rule-ref: selector(".AFTextBackground:alias");
	list-style-image: none;
	list-style-position: outside;
	list-style-type: none;
	margin: 0px;
	padding: 0px;
	white-space: nowrap;
}
af|selectManyChoice::content-input {
	margin: 1px 3px 1px 1px;
}
af|selectManyChoice::content-input:rtl {
	margin: 1px 1px 1px 3px;
}

af|selectManyChoice::control {
	-tr-rule-ref: selector(".AFFormControlContentBorder:alias");
	-tr-rule-ref: selector(".AFTextBackground:alias");
	-tr-rule-ref: selector(".AFDefaultFont:alias");
	padding: 1px 0px 1px;
	vertical-align: 6%;
	margin: 1px;
}

@agent ie {
	af|selectManyChoice::control {
		padding:0px;
	}
	.AFContentCell af|selectManyChoice::control {
		vertical-align: -15%;
	}
	af|table::data-row af|selectManyChoice::control {
		font-size: 14px;
	}
}
@agent webkit {
	af|selectManyChoice::control {
		display: inline-block;
	}
}
@agent gecko and (version: 1.9) {
	af|selectManyChoice::control {
		vertical-align: 0%;
	}
}

/** Private
  * style of the inline parent container
  */
af|selectOneChoice::control,
af|chooseDate::choice-list-control{
	-tr-rule-ref: selector(".AFFormControlContent:alias");
	cursor: default;
	font-size: 13px;
	padding: 0px;
	margin: 0px;
	white-space: nowrap;
}
/** Private
  * item space style
  * Used to set the width of the dropdown panel
  */
af|selectManyChoice::item-spacer,
af|selectOneChoice::item-spacer{
	visibility: hidden;
	height: 0px;
	line-height: 0px;
	padding: 0px;
	margin: 0px;
	font-size: 0px;
	overflow: hidden;
	cursor: default;
}
/** Private
  * this is the style for the container around all of the checkboxes
  * except the All checkbox, when no scrollbar is needed.
  */
af|selectManyChoice::options {
	overflow-x: hidden;
	list-style-image: none;
	list-style-position: outside;
	list-style-type: none;
	border-width: 0px;
	margin: 0px;
	padding: 0px;
}

/** Private
  * this is the style for the container around all of the checkboxes
  * except the All checkbox, when the scrollbar IS needed.
  * -tr-item-number-threshold is the number if items when the scrollbar
  * should appear.
  */
af|selectManyChoice::options-scroll {
	overflow-y: auto;
	height: 265px;
	overflow-x: hidden;
	list-style-image: none;
	list-style-position: outside;
	list-style-type: none;
	border-width: 0px;
	margin: 0px;
	padding: 0px;
	-tr-item-number-threshhold:15;
}
/* End of selectManyChoice style classes */

af|selectOneChoice:compact-content {
}

/* Icon hook for users to replace dropdown-icon-style with another img or text */
af|selectOneChoice::dropdown-icon,
af|chooseDate::choice-list-dropdown-icon{
	content: inhibit;
}
af|selectOneChoice::compact-dropdown {
	border: 1px solid #000000;
	font-size: 5px;
}

@agent ie {
	af|selectOneChoice::compact-dropdown {
		font-size: 8px;
	}
}
@agent webkit {
	af|selectOneChoice::compact-dropdown {
		display: inline-block;
	}
}

/** public
  * Styles the selectOneChoice dropdown icon in compact mode
  */
af|selectOneChoice::compact-dropdown-icon-style {
	-tr-rule-ref: selector(".AFClickableImageAnchor:alias");
	background-image: url('/afr/spinbox_arrow_dn.png');
	background-position: center;
	font-size: 5px;
	padding: 0px 7px 0px 0px;
}

@agent ie {
	af|selectOneChoice::compact-dropdown-icon-style {
		padding-right: 9px;
	}
}
@agent webkit {
	af|selectOneChoice::compact-dropdown-icon-style {
		display: inline-block;
		height: 5px;
	}
}

/* Icon hook for users to replace dropdown-icon-style with another img or text */
af|selectOneChoice::compact-dropdown-icon {
	content: inhibit;
}

/* Public
   Styles disabled select items in the popup
   list. Not compact specific
*/
af|selectOneChoice::item:disabled,
af|selectOneChoice::item:disabled:selected,
af|selectOneChoice::item:disabled:hover {
	-tr-rule-ref: selector(".AFFormControlContentBackgroundDisabled:alias");
	-tr-rule-ref: selector(".AFFormControlContentBorder:alias");
	-tr-rule-ref: selector(".AFFormControlContentForegroundDisabled:alias");
	vertical-align:baseline;
	-tr-rule-ref: selector(".AFStartTextAlign:alias");
}
/* Public
   Styles enabled select items in the popup
   list. Not compact specific
*/
af|selectOneChoice::item {
	-tr-rule-ref: selector(".AFTextBackground:alias");
	height:14px;
	padding:1px;
	border:1px transparent solid;
	background-color: transparent;
	-tr-rule-ref: selector(".AFTextForeground:alias");
	-tr-rule-ref: selector(".AFDefaultFont:alias");
	vertical-align:baseline;
	-tr-rule-ref: selector(".AFStartTextAlign:alias");
	white-space: nowrap;
	cursor: default;
	min-width: inherit;
}
/* Public
   Styles selected list items in the popup
   list. Compact specific for now.
   If use selected state, it breaks chooseColor styles. This style is used
   when hover and selected. So it's not purly a "selected" state.
   Using hilighted because of an IE :hover bug on mouse click.
*/
af|selectOneChoice::item:selected,
af|selectOneChoice::item:highlighted {
	height:14px;
	-tr-rule-ref: selector(".AFActiveLinkBorder:alias");
	-tr-rule-ref: selector(".AFMediumBackground:alias");
	padding:1px;
	-tr-rule-ref: selector(".AFTextForeground:alias");
	-tr-rule-ref: selector(".AFDefaultFont:alias");
	vertical-align:baseline;
	-tr-rule-ref: selector(".AFStartTextAlign:alias");
}

/* Public
   Styles the popup listdr
*/
af|selectOneChoice::dropdown-panel {
	-tr-rule-ref: selector(".AFTextBackground:alias");
	padding:0px;
	margin:0px;
	list-style-image: none;
	list-style-position: outside;
	list-style-type: none;
}
/* Public
   Styles the popup in scrollable mode. the item
   number threshhold specifies how many items
   should cause the scroll bar to appear. The height
   should roughly allow 15 items in the current style
*/
af|selectOneChoice::dropdown-panel:scroll {
	-tr-rule-ref: selector(".AFTextBackground:alias");
	padding:0px;
	margin:0px;
	list-style-image: none;
	list-style-position: outside;
	list-style-type: none;
	height:270px;
	overflow:auto;
	-tr-item-number-threshhold:15;
}
@agent ie {
	af|selectOneChoice::dropdown-panel:scroll {
		height:272px;
	}
}
/*
af|selectOneChoice::text {
  border: 1px #B9B9B4 solid;
  margin: 0px;
  padding: 1px 0px 0px 2px;
  font-size: 11px;
  overflow: hidden;
}
*/
af|selectOneChoice::ptr,
af|selectOneChoice::ptd {
	margin: 0px;
	padding: 0px;
}
/* End of selectOneChoice style classes */

/* Start of popup selector styles */
/* The popup is a framework for displaying content as a popup. Other components can display popup
   using arbitrary conent as a popup selector and hence these are global skin selectors*/

/* border cell without edges */
.AFPopupSelectorBorderCell:alias {
	-tr-rule-ref: selector(".AFTextBackground:alias");
	border-top:none;
	border-bottom:none;
	border-right:none;
	border-left:none;
}

/* border cell with one edge  */
.AFPopupSelectorBorderCellEdge:alias {
	-tr-rule-ref: selector(".AFPopupSelectorBorderCell:alias");
	border-width: 1px;
	font-size: 1px;
}

/* corner border cell with two edges */
.AFPopupSelectorBorderCellCorner:alias {
	-tr-rule-ref: selector(".AFPopupSelectorBorderCellEdge:alias");
	width:4px;
	height:4px;
}

/* PRIVATE: The root inline popup selector is only used to override the :focus dynamic pseudo-class.
The focus pseudo class is not supported on all browsers.  Mozilla draws an outline around block elements
that have focus.  This happens when there is nothing in the popup???s content to assign focus so the outer
div is given a tabIndex and forced focus.
*/
.AFPopupSelector {
	background-color: transparent;
	-tr-open-animation-duration: 200;
}

/* PRIVATE: The inputComboboxListOfValues popup contains a table and this table should not have a
   visible border or else you'd get multiple borders shown.  The 100% width is so that the table
   fits snugly inside of the popup. */
af|inputComboboxListOfValues::dropdown-table {
	border-top-width: 0px;
	border-left-width: 0px;
	border-right-width: 0px;
	outline-width: 0px;
}

/* PRIVATE: root selector applied to the input combo list of values popup.  Gives the popup square corners */
af|inputComboboxListOfValues::dropdown-popup {
	position: absolute;
	-tr-rule-ref: selector(".AFTextBackground:alias");
	-tr-rule-ref: selector(".AFPopupMenuBorder:alias");
	padding: 0px;
}

/* PRIVATE: applied to the content of the input combo list of values popup. */
af|inputComboboxListOfValues::dropdown-popup-content {
	position: relative;
}

/* PRIVATE: Removes the outline in firefox when focus is forced to the outer most "root" selector */
.AFPopupSelector:focus {
	outline: none;
}

/* top-center border */
.AFPopupSelectorHeader {
	-tr-rule-ref: selector(".AFPopupSelectorBorderCellEdge:alias");
	border-top:1px solid #336699;
}

/* top-start border */
.AFPopupSelectorHeaderStart {
	-tr-rule-ref: selector(".AFPopupSelectorBorderCellCorner:alias");
	border-top: 1px solid #336699;
}

/* top-start border LTR */
.AFPopupSelectorHeaderStart:ltr {
	border-left: 1px solid #336699;
}

/* top-start border RTL */
.AFPopupSelectorHeaderStart:rtl {
	border-right: 1px solid #336699;
}

/* top-end border */
.AFPopupSelectorHeaderEnd {
	-tr-rule-ref: selector(".AFPopupSelectorBorderCellCorner:alias");
	border-top: 1px solid #336699;
}

/* top-end border LTR */
.AFPopupSelectorHeaderEnd:ltr {
	border-right: 1px solid #336699;
}

/* top-end border RTL */
.AFPopupSelectorHeaderEnd:rtl {
	border-left:1px solid #336699;
}

/* middle-center */
.AFPopupSelectorContent {
	-tr-rule-ref: selector(".AFPopupSelectorBorderCell:alias");
	border-width: 0px;
}

/* middle-start border */
.AFPopupSelectorContentStart {
	-tr-rule-ref: selector(".AFPopupSelectorBorderCellEdge:alias");
}

/* middle-start border LTR */
.AFPopupSelectorContentStart:ltr {
	border-left: 1px solid #336699;
}

/* middle-start border RTL */
.AFPopupSelectorContentStart:rtl {
	border-right: 1px solid #336699;
}

/* middle-end border */
.AFPopupSelectorContentEnd {
	-tr-rule-ref: selector(".AFPopupSelectorBorderCellEdge:alias");
}

/* middle-end border LTR */
.AFPopupSelectorContentEnd:ltr {
	border-right: 1px solid #336699;
}

/* middle-end border RTL */
.AFPopupSelectorContentEnd:rtl {
	border-left:1px solid #336699;
}

/* bottom center border */
.AFPopupSelectorFooter {
	-tr-rule-ref: selector(".AFPopupSelectorBorderCellEdge:alias");
	border-bottom: 1px solid #336699;
}

/* bottom-start border */
.AFPopupSelectorFooterStart {
	-tr-rule-ref: selector(".AFPopupSelectorBorderCellCorner:alias");
	border-bottom: 1px solid #336699;
}

/* bottom-start border LTR */
.AFPopupSelectorFooterStart:ltr {
	border-left: 1px solid #336699;
}

/* bottom-start border RTL */
.AFPopupSelectorFooterStart:rtl {
	border-right: 1px solid #336699;
}

/* bottom-end border */
.AFPopupSelectorFooterEnd {
	-tr-rule-ref: selector(".AFPopupSelectorBorderCellCorner:alias");
	border-bottom: 1px solid #336699;
}

/* bottom-end border LTR */
.AFPopupSelectorFooterEnd:ltr {
	border-right: 1px solid #336699;
}

/* bottom-end border RTL */
.AFPopupSelectorFooterEnd:rtl {
	border-left: 1px solid #336699;
}

/* End popup Selector styles */


af|document {
	-tr-rule-ref: selector(".AFDefaultFont:alias");
}

af|document:printable {
	-tr-rule-ref: selector(".AFTextBackground:alias");
	-tr-rule-ref: selector(".AFTextForeground:alias");
	background-image: none;
}

af|document:maximized {
	position: absolute;
	padding: 0px;
	margin: 0px;
	border-style: none;
	width: 100%;
	height: 100%;
	top: 0px;
	left: 0px;
}
af|document:maximized:rtl {
	left: auto;
	right: 0px;
}

af|document::messages {
	width: 500px;
	height: auto;
}


/* Style for the skip link content rendered by af:document when
   af:skipLinkTarget is present. */
af|document::skip-link {

	/* The skip link is positioned offscreen by default and
     is explicitly moved on screen by AdfDhtmlDocumentPeer
     when it receives the focus. */
	position:absolute;
	top:-999px;

	/* Kicking the z-index up to 1 seems to sufficient to raise
     the skip link over the rest of the document content */
	z-index:1;

	/* Add a touch of style */
	-tr-rule-ref: selector(".AFTextBackground:alias");
	border:1px solid black;
	padding:2px 5px;
}
/* on Outlook, the skip-link is shown, so we need to set display:none */
@agent email {
	af|document::skip-link {
		display:none;
	}
}

af|noteWindow {
	/* placeholder for notewindow used with server-side component */
	padding: 3px 3px 3px 3px;
}

.AFNoteWindow {
	border-left: 0px solid #0D4988;
	border-right: 1px solid #0D4988;
	border-bottom: 1px solid #0D4988;
	border-top: 1px solid #0D4988;
	-tr-rule-ref: selector(".AFTextBackground:alias");
	padding: 3px 5px;
	z-index: 2;
	-tr-rule-ref: selector(".AFDefaultFont:alias");
	-tr-open-animation-duration: 200;
}

.AFNoteWindowRight {
	-tr-rule-ref: selector(".AFNoteWindow");
	border-left: 1px solid #0D4988;
	border-right: 0px solid #0D4988;
}

.AFNoteWindowSeparator {
	border-top-width: 0px;
	border-left-width: 0px;
	border-right-width: 0px;
	border-style: dashed;
	height: 1px;
	margin: 0px;
	-tr-rule-ref: selector(".AFVeryDarkAccentForeground:alias");
}

/* IE7 adds 7 pixels of extra margin to whatever you specify via CSS so the following is required
   to work around it */
@agent ie and (version: 7.0) {
	.AFNoteWindowSeparator {
		display: block;
		margin: -7px 0px;
	}
}

.AFNoteWindowHintText {
	font-weight: bold;
}

.AFNoteWindowHintText,
.AFNoteWindowInstructions {
	white-space: pre; /* To produce the line break */
}

.AFNoteWindowShortDesc {
	white-space: pre-wrap;
    --toolTipBackColor: #CDD1D4;
    background-color: var(--toolTipBackColor);
    color: #000000;
    border-radius: 5px;
}

.AFNoteWindowFooter {
	padding-top: 3px;
	padding-bottom: 3px;
	padding-left: 5px;
	padding-right: 5px;
}

.AFNoteWindowConeBorder {
	background-image: url("/afr/cone_border.png");
	width:14px;
	background-repeat: repeat-y;
	background-position:center right;
	line-height: 0px;
}

.AFNoteWindowConeBorderRight {
	background-image: url("/afr/cone_border.png");
	width:14px;
	background-repeat: repeat-y;
	background-position:center left;
	background-color: #ed0411
	line-height: 0px;
}
/* The note window needs to have a visible border in high contrast mode or else this will be
   difficult to visualize where the cone's edge is in Windows's high-contrast display mode for IE. */
@accessibility-profile high-contrast {
	.AFNoteWindowConeBorder {
		border-right: 1px solid black;
	}
	.AFNoteWindowConeBorderRight {
		border-left: 1px solid black;
	}
	.AFNoteWindowCone,
	.AFNoteWindowConeBL {
		border-top: 1px solid black;
		border-bottom: 1px solid black;
		border-left: 1px solid black;
	}
	.AFNoteWindowConeTR,
	.AFNoteWindowConeBR {
		border-top: 1px solid black;
		border-bottom: 1px solid black;
		border-right: 1px solid black;
	}
}

.AFNoteWindowCone {
	background-image: url("/afr/cone_tl.png");
	width:14px;
	height:8px;
	background-position:top;
}

.AFNoteWindowConeTR{
	background-image: url("/afr/cone_tr.png");
	width:14px;
	height:8px;
	background-position:top;
}
.AFNoteWindowConeBL{
	background-image: url("/afr/cone_bl.png");
	width:14px;
	height:8px;
	background-position:bottom;
}

.AFNoteWindowConeBR{
	background-image: url("/afr/cone_br.png");
	width:14px;
	height:8px;
	background-position:bottom;
}

/* The top portion of the inline message */
.AFNoteWindowContent {
}

/* The bottom portion of the inline message */
.AFNoteWindowFooter {
	clear: both;
	padding: 4px;
	margin-top: 2px;
}

/* The start side of the bottom portion of the inline message */
.AFNoteWindowFooterStart {
	padding-right: 30px;
}
.AFNoteWindowFooterStart:rtl {
	padding-right: 0px;
	padding-left: 30px;
}

/* The end side of the bottom portion of the inline message */
.AFNoteWindowFooterEnd {
}

/* The message "all" button for the note window */
.AFNoteWindowAllButton {
	margin: 8px;
}

/* The message navigator for the of the inline message */
.AFNoteWindowNavigator {
	float: right;
	text-align: start;
}
.AFNoteWindowNavigator:rtl {
	float: left;
}

/* The message navigator chooser for the of the inline message */
.AFNoteWindowChooser {
	-tr-rule-ref: selector("AFDefaultFont:alias");
}

/* The links for navigating among component-level messages */
.AFNoteWindowPreviousLink,
.AFNoteWindowNextLink {
	display: block;
	width: 16px;
	height: 16px;
	padding: 4px;
	cursor: default;
	background-repeat: no-repeat;
	background-position: center;
}

.AFNoteWindowPreviousLink:disabled {
	background-image: url("/afr/previous_trvArr_dis.png");
}

.AFNoteWindowPreviousLink:disabled:rtl {
	background-image: url("/afr/next_trvArr_dis.png");
}

/* The link for navigating to the previous inline message's note window */
.AFNoteWindowPreviousLink {
	background-image: url("/afr/previous_trvArr_ena.png");
}
.AFNoteWindowPreviousLink:rtl {
	background-image: url("/afr/next_trvArr_ena.png");
}

.AFNoteWindowNextLink:disabled {
	background-image: url("/afr/next_trvArr_dis.png");
}

.AFNoteWindowNextLink:disabled:rtl {
	background-image: url("/afr/previous_trvArr_dis.png");
}

/* The link for navigating to the next inline message's note window */
.AFNoteWindowNextLink {
	background-image: url("/afr/next_trvArr_ena.png");
}

.AFNoteWindowNextLink:rtl {
	background-image: url("/afr/previous_trvArr_ena.png");
}

.AFTooltip {
	cursor: default;
	border: 1px #0D4988 solid;
	text-decoration: none;
	vertical-align: middle;
	white-space: nowrap;
	-tr-rule-ref: selector(".AFTextBackground:alias");
	-tr-rule-ref: selector(".AFDefaultFont:alias");
}

/* Root element for the messages component */
af|messages {
	-tr-inhibit: all;
}

/* The text serving as the header above the list of messages */
af|messages::header-text {
	-tr-rule-ref: selector(".AFDefaultBoldFont:alias");
	font-size: +2px;
}


/* The title for the combined messages */
af|messages::intro {
	-tr-rule-ref: selector(".AFDefaultBoldFont:alias");
	padding-top: 3px;
}

/* The title for groupings of messages */
af|messages::message-group-title {
	padding-top: 6px;
	vertical-align: top;
	white-space: nowrap;
}

/* The separator between message group types (e.g. page-level and component-level) */
af|messages::message-group-type-separator {
	margin: 0px;
	border-width: 0px;
	border-top: 1px solid #AAAAAA;
	height: 1px;
}


/* Root element for message component */
af|message {
}
/* The help area of the message component */
af|message::help {
	-tr-rule-ref: selector(".AFDefaultBoldFont:alias");
}

/* Default and Info icons */
af|message::info-icon,
af|messages::info-icon {
	content: url(/afr/info.png);
	width: 16px;
	height: 16px;
}

/* Confirmation icons */
af|message::confirmation-icon,
af|messages::confirmation-icon {
	content: url(/afr/confirmation.png);
	width: 16px;
	height: 16px;
}

af|message::fatal-icon,
af|messages::fatal-icon {
	content: url(/afr/error.png);
	width: 16px;
	height: 16px;
}

af|message::error-icon,
af|messages::error-icon  {
	content: url(/afr/error.png);
	width: 16px;
	height: 16px;
}

af|message::warning-icon,
af|messages::warning-icon {
	content: url(/afr/warning.png);
	width: 16px;
	height: 16px;
}

/* TODO gcrawford
   open issue that both af|message::detail and af|messages::detail are being
   used on the summary. Message styles are still under discussion as of
   4-2-07, this will be fixed after the upcoming review of messaging with the
   blaf+ team.
 */
af|message::type,
af|message::summary,
af|message::detail,
af|message::intro,
af|messages::summary,
af|messages::detail{
	-tr-rule-ref: selector(".AFDefaultFont:alias");
}


af|message::type,
af|message::summary,
af|message::intro {
	-tr-rule-ref: selector(".AFDefaultBoldFont:alias");
}

af|message::header {
	-tr-rule-ref: selector(".AFDarkAccentBorder:alias");
	border-width: 0px 0px 1px 0px;
	border-style: solid;
	vertical-align: bottom;
	margin-bottom: 3px;
	padding: 0px 3px;
}

.nowrap {
	white-space: nowrap;
	overflow: hidden;
	display: block;
}

@agent ie, webkit {
	.nowrap {
		text-overflow: ellipsis;
	}
}

.nowrap * {
	white-space: nowrap;
}

/* Root style for selectManyListbox */
af|selectManyListbox::content {
	-tr-rule-ref: selector(".AFFormControlContentBorder:alias");
	-tr-rule-ref: selector(".AFTextBackground:alias");
	-tr-rule-ref: selector(".AFTextForeground:alias");
	cursor: default;
	list-style-image: none;
	list-style-position: outside;
	list-style-type: none;
	margin: 0px;
	padding: 0px;
}

@agent gecko and (version: 1.9) {
	af|selectManyListbox::content {
		white-space: nowrap;
	}
}

af|selectManyListbox:read-only::content {
	border-style: none;
}

af|selectManyListbox:disabled::content {
	-tr-rule-ref: selector(".AFFormControlContentBorder:alias");
	-tr-rule-ref: selector(".AFFormControlContentBackgroundDisabled:alias");
	-tr-rule-ref: selector(".AFVeryDarkAccentForeground:alias");
}
/* style used on the native checkbox */
af|selectManyListbox::content-input {
}
@agent ie {
	af|selectManyListbox::content-input {
		outline-width: 0px;
	}
}
/* this is the style for the scrolling container around all of the checkboxes except
   the All checkbox.  */
af|selectManyListbox::options {
	overflow: auto;
	overflow-x: hidden;
	list-style-image: none;
	list-style-position: outside;
	list-style-type: none;
	border-width: 0px;
	margin: 0px;
	padding: 0px;
}
/* Minimum height required in WebKit for a vertical scrollbar to appear. */
@agent webkit {
	af|selectManyListbox::options {
		min-height: 56px;
	}
}
/* The style on the container around the checkbox and label */
af|selectManyChoice::item,
af|selectManyShuttle::item,
af|selectOrderShuttle::item,
af|selectManyListbox::item {
	border:1px transparent dotted;
}
af|selectManyChoice:disabled::item:hover,
af|selectManyChoice:disabled::item:selected,
af|selectManyChoice:disabled::item:active,
af|selectOrderShuttle:disabled::item:hover,
af|selectOrderShuttle:disabled::item:selected,
af|selectOrderShuttle:disabled::item:active,
af|selectManyShuttle:disabled::item:hover,
af|selectManyShuttle:disabled::item:selected,
af|selectManyShuttle:disabled::item:active,
af|selectManyListbox:disabled::item:hover,
af|selectManyListbox:disabled::item:selected,
af|selectManyListbox:disabled::item:active {
	border-color: transparent;
	background-color: transparent;
	color: inherit;
}

af|selectManyChoice::item:highlighted,
af|selectManyShuttle::item:highlighted,
af|selectOrderShuttle::item:highlighted,
af|selectManyListbox::item:highlighted {
	-tr-rule-ref: selector(".AFActiveLinkBorder:alias");
}
af|selectManyChoice::item:disabled,
af|selectManyShuttle::item:disabled,
af|selectOrderShuttle::item:disabled,
af|selectManyListbox::item:disabled {
	-tr-rule-ref: selector(".AFVeryDarkAccentForeground:alias");
	-tr-rule-ref: selector(".AFFormControlContentBackgroundDisabled:alias");
}
/* Style on the item separator */
af|selectManyChoice::separator,
af|selectOneChoice::separator,
af|selectManyListbox::separator {
	height: 1px;
	line-height: 1px;
	font-size: 1px;
	overflow: hidden;
	margin-bottom:1px;
	cursor: default;
	border-bottom:1px solid #979993;
}

/* Underline the access key for form labels */
af|outputLabel::access-key {
	-tr-rule-ref: selector(".AFFormAccessKeyStyle:alias");
}

.RichPageProcessingIndicator {
	width: 77px;
	height: 14px;
	-tr-rule-ref: selector(".AFLightAccentBackground:alias");
	background-image: url('/afr/processing_page.gif');
}

/* private - used by AdfDhtmlPage when displaying blocking glass pane */
.AFBlockingGlassPane {
	-tr-rule-ref: selector(".AFTextBackground:alias");
	position: absolute;
	z-index: 3200;
	cursor: wait;
	bottom: 0px;
	top: 0px;
	left: 0px;
	right: 0px;
}

/* private - used by AdfDhtmlPage when preventing user input during PPR */
.AFBlockingMaskingFrame {
	position: absolute;
	z-index: 3100;
}

/* panelAccordion Styles */

/* The root panelAccordion element */
af|panelAccordion {
	-tr-header-height: 32;
	-tr-overflow-height: 13;
	-tr-minimum-resizable-height: 5;
	-tr-reorder-animation-duration: 300;
	-tr-disclosure-animation-duration: 300;
	border: 1px solid #e7e8ec;
	width: 300px;
	height: 300px;
	overflow: hidden;
	position: relative;
}
@accessibility-profile large-fonts {
	af|panelAccordion {
		-tr-header-height: 35;
	}
}

/* the top and bottom overflow links for panelAccordion */
af|panelAccordion::top-overflow-indicator,
af|panelAccordion::bottom-overflow-indicator {
	width: 11px;
	height: 13px;
	position: absolute;
	display: none;
	background-repeat: no-repeat;
	background-position: center center;
}

/* the top overflow link for panelAccordion */
af|panelAccordion::top-overflow-indicator {
	top: 0px;
	left: 3px;
	right: auto;
	cursor: default;
	-tr-rule-ref: selector(".AFOverflowImageVerticalStart:alias");
}

/* the top overflow link for panelAccordion in RTL */
af|panelAccordion::top-overflow-indicator:rtl {
	left: auto;
	right: 3px;
}

/* the top overflow link for panelAccordion in hover state */
af|panelAccordion::top-overflow-indicator:hover {
	-tr-rule-ref: selector(".AFOverflowImageVerticalStartHover:alias");
}

/* the top overflow link for panelAccordion in active state */
af|panelAccordion::top-overflow-indicator:active {
	-tr-rule-ref: selector(".AFOverflowImageVerticalStartDepressed:alias");
}

/* the bottom overflow link for panelAccordion */
af|panelAccordion::bottom-overflow-indicator {
	bottom: 0px;
	left: auto;
	right: 3px;
	cursor: default;
	-tr-rule-ref: selector(".AFOverflowImageVerticalEnd:alias");
}

/* the bottom overflow link for panelAccordion in RTL */
af|panelAccordion::bottom-overflow-indicator:rtl {
	left: 3px;
	right: auto;
}

/* the bottom overflow link for panelAccordion in hover state */
af|panelAccordion::bottom-overflow-indicator:hover {
	-tr-rule-ref: selector(".AFOverflowImageVerticalEndHover:alias");
}

/* the bottom overflow link for panelAccordion in active state */
af|panelAccordion::bottom-overflow-indicator:active {
	-tr-rule-ref: selector(".AFOverflowImageVerticalEndDepressed:alias");
}

/* Icon hook for users to replace the overflow top icon with another img or text */
af|panelAccordion::overflow-top-icon {
	content: inhibit;
}

/* Icon hook for users to replace the overflow bottom icon with another img or text */
af|panelAccordion::overflow-bottom-icon {
	content: inhibit;
}

af|panelAccordion::overflow-container {
	padding: 8px;
}

af|panelAccordion::overflow-container .AFOverflowElement {
	-tr-rule-ref: selector(".AFLinkForeground:alias");
	text-decoration: none;
	display: block;
	padding: 2px;
	white-space: nowrap;
}
af|panelAccordion::overflow-container .AFOverflowElement:hover {
	text-decoration: underline;
}

af|panelAccordion::overflow-container .AFOverflowElement:active:hover {
	-tr-rule-ref: selector(".AFActiveLinkForeground:alias");
}




/* the style for panelAccordion access key text */
af|panelAccordion::access-key {
	-tr-rule-ref: selector(".AFFormAccessKeyStyle:alias");
}

/* the root header element for every panelAccordion's first panel */
af|panelAccordion::header,
af|panelAccordion::header-subsequent {
	overflow: hidden;
	border-bottom-width: 1px;
	border-bottom-style: solid;
	border-bottom-color: #ecf0f2;
	-tr-rule-ref: selector(".MetroPanelBoxHeaderBackground:alias");
}
af|panelAccordion::header:disclosed,
af|panelAccordion::header-subsequent:disclosed {
	border-bottom-width: 0px;
}

/* styles for disabled accordion disclosed buttons */
af|panelAccordion::header:disabled af|panelAccordion::header-disclose,
af|panelAccordion::header-subsequent:disabled af|panelAccordion::header-disclose {
	display: none;
}

/* styles for an af|toolbox inside of the accordion headers */
af|panelAccordion af|panelAccordion::header af|toolbox,
af|panelAccordion af|panelAccordion::header-subsequent af|toolbox {
	background-color: transparent;
}

/* styles for an af|toolbar inside of the accordion headers */
af|panelAccordion af|panelAccordion::header af|toolbar,
af|panelAccordion af|panelAccordion::header-subsequent af|toolbar,
af|panelAccordion af|panelAccordion::header af|toolbar::body,
af|panelAccordion af|panelAccordion::header-subsequent af|toolbar::body,
af|panelAccordion::ghost af|panelAccordion::header af|toolbar,
af|panelAccordion::ghost af|panelAccordion::header-subsequent af|toolbar,
af|panelAccordion::ghost af|panelAccordion::header af|toolbar::body,
af|panelAccordion::ghost af|panelAccordion::header-subsequent af|toolbar::body {
	background-color: transparent;
	-tr-rule-ref: selector(".AFTextForeground:alias");
	border-left-width: 0px;
	border-right-width: 0px;
}
af|panelAccordion af|panelAccordion::header af|toolbar::overflow-container,
af|panelAccordion af|panelAccordion::header-subsequent af|toolbar::overflow-container {
	background-color: transparent;
}

/* the root header element for every panelAccordion's first and subsequent panels */
af|panelAccordion::header,
af|panelAccordion::header-subsequent {
	margin: 0px;
	-tr-rule-ref: selector(".AFDefaultFont:alias");
	position: absolute;
	left: 0px;
	right: 0px;
}
af|panelAccordion::header:flow,
af|panelAccordion::header-subsequent:flow {
	position: relative;
	left: auto;
	right: auto;
}

/* the image that corresponds to the showDetailItem icon in the header */
af|panelAccordion::icon-style {
	border: 0px;
	vertical-align: middle;
	padding-left: 0px;
	padding-right: 4px;
	float: left;
}

/* the image that corresponds to the showDetailItem icon in the header in RTL */
af|panelAccordion::icon-style:rtl {
	padding-left: 4px;
	padding-right: 0px;
	float: right;
}

/* the title element in each panel's header IPanelAccordeon_AF*/
af|panelAccordion::header-title,
af|panelAccordion::header-title af|goLink,
af|panelAccordion::header-title af|goLink:active,
af|panelAccordion::header-title af|goLink:hover,
af|panelAccordion::header-title af|goLink:visited {
	-tr-rule-ref: selector(".AFDefaultBoldFont:alias");
	-tr-rule-ref: selector(".MetroPanelBoxHeaderFont:alias");
	padding: 5px;
	margin: 0;
	width: 100%;
	line-height: 160%;
	cursor: default;
	text-decoration: none;
	white-space: nowrap;
}

/* screen reader flow changes */
af|panelAccordion:screenReader {
	overflow: auto;
}
af|panelAccordion:screenReader::header,
af|panelAccordion:screenReader::body-content,
af|panelAccordion:screenReader::header-subsequent {
	position: relative;
	left: auto;
	right: auto;
	top: auto;
	bottom: auto;
	height: auto;
	width: auto;
	overflow: visible;
}

/* general settings for the disclose and undisclose buttons */
af|panelAccordion::undisclosed-icon-style,
af|panelAccordion::disclosed-icon-style {
	display: block;
	cursor: default;
	outline: none;
}

/* Icon shown when the panel is undisclosed (collapsed or closed). Pressing the icon opens
   (discloses) the panel. By default the undisclosed icon looks like a "+". */
af|panelAccordion::undisclosed-icon-style {
	content:url('/component/img_metro/disclosure_collapsed.png');
}

/* The disclosure buttons are textual links when in screen reader mode. */
af|panelAccordion:screenReader::undisclosed-icon-style {
	background-image: none;
}

/* Icon shown when the panel is disclosed (expanded or open). Pressing the icon closes
   (undiscloses) the panel. By default the disclosed icon looks like a "-". */
af|panelAccordion::disclosed-icon-style {
	content:url('/component/img_metro/disclosure_expanded.png');
}

/* The disclosure buttons are textual links when in screen reader mode. */
af|panelAccordion:screenReader::disclosed-icon-style {
	background-image: none;
}

/* Icon hook for users to replace the undisclosed icon with another img or text */
af|panelAccordion::undisclosed-icon {
	content: inhibit;
}

/* Icon hook for users to replace the disclosed icon with another img or text */
af|panelAccordion::disclosed-icon {
	content: inhibit;
}

/* inside of the header root, this is the container for the disclosure button */
af|panelAccordion::header-disclose {
	padding-left: 8px;
	padding-right: 4px;
}

/* inside of the header root, this is the container for the disclosure button in RTL */
af|panelAccordion::header-disclose:rtl {
	padding-left: 4px;
	padding-right: 1px;
}

/* inside of the header root, this is the container for the toolbar */
af|panelAccordion::header-toolbar {
	width: 100%;
}

/* inside of the header root, these are the containers for the non-end caps */
af|panelAccordion::header-disclose,
af|panelAccordion::header-title,
af|panelAccordion::header-toolbar {
	background-color: #f5f7f8;
	white-space: nowrap;
}

/* inside of the header root, these are the containers */
af|panelAccordion::header-start,
af|panelAccordion::header-disclose,
af|panelAccordion::header-title,
af|panelAccordion::header-toolbar,
af|panelAccordion::header-end {
	border-bottom: 1px solid #ecf0f2;
}

/* the body root element for each item in the panelAccordion */
af|panelAccordion::body-content {
	-tr-rule-ref: selector(".AFTextBackground:alias");
	overflow: hidden;
	width: auto;
	position: absolute;
	left: 0px;
	right: 0px;
}
af|panelAccordion::body-content:flow {
	width: auto;
	position: relative;
	left: auto;
	right: auto;
}

/* detail item resize divider alligned to the bottom  */
af|panelAccordion::resize-divider {
	position: absolute;
	overflow: hidden;
	cursor: n-resize;
	bottom: 0px;
	width: 100%;
	height: 4px;
	z-index: 1;
}

/* This is required in IE because without it the grab bar might not have any
   clickable area to react to. */
@agent ie {
	af|panelAccordion::resize-divider {
		background-color: white;
		filter: alpha(opacity:1);
	}
}

/* Pseudo style applied to the floating resize divider during drag */
af|panelAccordion::resize-divider:drag {
	border: 1px solid #003399;
}

/* Remove the IE hack on the drag state applied to the floating resize divider */
@agent ie {
	af|panelAccordion::resize-divider:drag {
		background-color: transparent;
		filter: none;
	}
}

/* Private */

/* Private - The root element for ghosts displayed during header drag and drop.
   This style is not (currently) used - mcooper */
af|panelAccordion::ghost {
	opacity: 0.9;
}
@agent ie {
	af|panelAccordion::ghost {
		filter:alpha(opacity:90);
	}
}

/* Private - used when print option is selected */
af|panelAccordion:printable {
	position:static;
	overflow:visible;
}
af|panelAccordion:printable af|panelAccordion::header,
af|panelAccordion:printable af|panelAccordion::header-subsequent {
	position:static;
	margin: 0px;
}
af|panelAccordion:printable af|panelAccordion::body-content {
	position:static;
}
@agent email
{
	/* Private - used when print option is selected */
	af|panelAccordion {
		position:static;
		overflow:visible;
	}
	af|panelAccordion af|panelAccordion::header,
	af|panelAccordion af|panelAccordion::header-subsequent {
		position:static;
		margin: 0px;
	}
	af|panelAccordion af|panelAccordion::body-content {
		position:static;
	}
}

/* end private */

/* end of panelAccordion styles */

af|inputListOfValues {
	white-space: nowrap;
}

/* Underline the access key for inputListOfValues labels */
af|inputListOfValues::access-key {
	-tr-rule-ref: selector(".AFFormAccessKeyStyle:alias");
}

/* style for inputListOfValues label */
af|inputListOfValues::label {
	-tr-rule-ref:selector(".AFLabel:alias");
}

/* style for inputListOfValues disabled label */
af|inputListOfValues:disabled::label {
	-tr-rule-ref:selector(".AFLabelDisabled:alias");
}

af|inputListOfValues::content {
	-tr-rule-ref: selector(".AFFormControlContentBorder:alias");
}

af|inputListOfValues:edit-mode-select::content {
	-tr-rule-ref: selector(".AFFormControlContentBorder:alias");
	background-color: #DDDDDD;
	font-family: Tahoma,Verdana,Helvetica,sans-serif;
	font-size: 11px;
	font-weight: normal;
	margin: 1px;
	padding: 1px 2px 1px 3px;
	cursor: default;
}

/* panelList::link is mapped to "panelList A" in trinidad making its
specificity (11) higher than af|inputDate::launch-icon-style (10) so I added
af|panelList to bump the specificity to 20 so it would get the correct font
size when inside a panelList. */
af|inputListOfValues::search-icon-style,
af|panelList af|inputListOfValues::search-icon-style {
	-tr-rule-ref: selector(".AFClickableImageAnchor:alias");
	background-image:url("/afr/lov_ena.png");
}

af|inputListOfValues::search-icon{
	content:inhibit;
}

af|inputListOfValues::search-icon-style:disabled,
af|inputListOfValues::search-icon-style:disabled:active,
af|inputListOfValues::search-icon-style:disabled:hover{
	background-image:url("/afr/lov_dis.png");
}
/* :hover/:active in blafplus, not simple */

/* inputComboboxListOfValues styles */

af|inputComboboxListOfValues {
	white-space: nowrap;
}

/* Underline the access key for inputConboboxListOfValues labels */
af|inputComboboxListOfValues::access-key {
	-tr-rule-ref: selector(".AFFormAccessKeyStyle:alias");
}

/* style for inputComboboxListOfValues label */
af|inputComboboxListOfValues::label {
	-tr-rule-ref:selector(".AFLabel:alias");
}

/* style for inputComboboxListOfValues disabled label */
af|inputComboboxListOfValues:disabled::label {
	-tr-rule-ref:selector(".AFLabelDisabled:alias");
}

af|inputComboboxListOfValues::container {
	position:relative;
	border:1px solid #B9B9B4;
	-tr-rule-ref:selector(".AFDefaultFont:alias");
	-tr-rule-ref: selector(".AFTextBackground:alias");
	padding:1px 0px;
}

@agent webkit {
	af|treeTable af|inputComboboxListOfValues::container-span,
	af|table af|inputComboboxListOfValues::container-span {
		width:16%;
	}
	af|inputComboboxListOfValues::container-span {
		text-align:right;
		display:inline-block;
	}
}

@agent ie and (version: 7.0) {
	af|inputComboboxListOfValues::container {
		padding: 0px;
	}
}

@agent ie {
	af|inputComboboxListOfValues:fatal .AFContentCell,
	af|inputComboboxListOfValues:error .AFContentCell {
		border-bottom: 1px #C70000 solid;
		border-top: 1px #C70000 solid;
	}
	af|table::data-row af|inputComboboxListOfValues::container {
		font-size: 14px;
	}
}
@agent webkit {
	af|inputComboboxListOfValues::container {
		display: inline-block;
		padding: 0px;
	}

	af|table::data-row af|selectManyChoice::control,
	af|table::data-row af|inputComboboxListOfValues::container {
		max-width: 90%;
		width: 90%;
	}
}

/* style for inputComboboxListOfValues content */
af|inputComboboxListOfValues::content {
	border: 0px;
	-tr-rule-ref: selector(".AFFormControlContent:alias");
	-tr-rule-ref: selector(".AFFormControlContentBackground:alias");
}

af|inputComboboxListOfValues:edit-mode-select::content {
	border: 0px;
	-tr-rule-ref: selector(".AFFormControlContent:alias");
	background-color: #DDDDDD;
	font-family: Tahoma,Verdana,Helvetica,sans-serif;
	font-size: 11px;
	font-weight: normal;
	margin-top: 2px;
	margin-bottom: 2px;
	padding: 1px 2px 1px 3px;
	cursor: default;
}

@agent webkit {
	af|inputComboboxListOfValues::content,
	af|inputComboboxListOfValues:edit-mode-select::content {
		padding: 0px;
	}

	af|table::data-row af|inputComboboxListOfValues::content {
		max-width: 84%;
		width: 84%;
	}
}

af|inputComboboxListOfValues::dropdown-icon{
	content: inhibit;
}

/* style for inputComboboxListOfValues dropdown icon */
af|inputComboboxListOfValues::dropdown-icon-style {
	-tr-rule-ref: selector(".AFClickableImageAnchor:alias");
	background-image:url("/afr/dropdown_n.png");
	background-position:center;
	font-size:10px;
	margin-left: 0px;
	margin-right: 0px;
	padding:1px 10px 3px 1px;
}

af|inputComboboxListOfValues::dropdown-icon-style:hover,
af|inputComboboxListOfValues::dropdown-icon-style:active {
	background-image:url("/afr/dropdown_md.png");
}

af|inputComboboxListOfValues::dropdown-icon-style:disabled {
	background-image:url("/afr/dropdown_d.png");
}

@agent ie {
	af|inputComboboxListOfValues::dropdown-icon-style {
		font-size: 6px;
	}
}
@agent webkit {
	af|inputComboboxListOfValues::dropdown-icon-style {
		-webkit-box-sizing: border-box;
		height: 11px;
	}
}

/*style for the dropdown background*/
af|inputComboboxListOfValues::dropdown-cell {
	border: 1px #000000 solid;
	font-size: 13px;
}
@agent webkit {
	af|inputComboboxListOfValues::dropdown-cell {
		display: inline-block;
	}
}
/* style for the search link in the drop down panel*/
af|inputComboboxListOfValues::search{
	display: block;
	padding: 2px;
}
/* :hover/:active in blafplus, not simple */
/* End of inputComboboxListOfValues styles */

af|query {
	cursor: default;
	white-space: nowrap;
}

/* The pseudo class for displayMode=simple */
af|query:simple {
}

/* The pseudo class for displayMode=compact */
af|query:compact {
}

/* priavte. style for the text container when there are no search fields added.*/
af|query::no-fields-container-style {
	font-size:11px;
	font-family: Tahoma;
	color: #333333;
	font-weight: normal;
	text-align: center;
	padding: 25px 0px 20px 0px;
	width: 100%;
}

/* Style on the query separator */
af|query::separator-icon-style {
	-tr-rule-ref: selector(".AFBarSeparator:alias");
}

/* private. styles the cell that contains the buttons in the search panel */
af|query::button-cell {
	padding-left:2px;
	padding-right:2px;
}

/* Private - styles the table that contains the content of the query component.*/
af|query::title-table {
	border-width: 0px;
	padding: 0px;
	width: 100%;
}

/* styles the footer content that is displayed in the footer of the query panel */
af|query::content-footer {
	padding-top : 10px;
	vertical-align: top;
}

/* Styles the cell that displays the content of the footer facet (or the default Add Fields
commandToolbarButton)*/
af|query::footer-facet-content-style {
	padding-left:2px;
	padding-right:2px;
}

/* style class for container enclosing conjunction and criterion fields */
af|query::criteria {
	padding-top: 4px;
}

/* styles a column on criterion objects (search fields) */
af|query::criteria-column {
	vertical-align: top;
}
/* Styles the criterion or the search field */
af|query::criterion {
	-tr-rule-ref: selector(".AFDefaultFontFamily:alias");
	font-size:8pt;
}

/* Styles the index icon part of the criterion or the search field */
af|query::criterion-indexed-icon-style {
	-tr-rule-ref: selector(".AFDefaultFontFamily:alias");
	padding-right: 3px;
}

af|query::criterion-indexed-icon-style:rtl {
	padding-right: 0px;
	padding-left: 3px;
}

@agent ie {
	af|query::criterion-indexed-icon-style:rtl {
		display: inline-block;
	}
}
/* Styles the label part of the criterion or the search field */
af|query::criterion-label {
	-tr-rule-ref: selector(".AFLabel:alias");
	-tr-rule-ref: selector(".AFEndTextAlign:alias");
	white-space: nowrap;
}
/* Styles the label when it appears on top and is stacked above the remainder
of the search field parts */
af|query::criterion-label-top {
	-tr-rule-ref: selector(".AFLabel:alias");
	-tr-rule-ref: selector(".AFStartTextAlign:alias");
}
/* Styles the content of the search field */
af|query::criterion-content {
	text-align: left;
	vertical-align: top;
	padding:1px 8px 1px 0px;
}
/* Styles the content of the search field in rtl mode */
af|query::criterion-content:rtl {
	text-align: right;
	padding-left: 8px;
	padding-right: 0px;
}
/* Private -Styles the content operator of the search field */
af|query::criterion-content-operator {
	padding-right: 1px;
}
/* Private -Styles the content operator of the search field in rtl mode*/
af|query::criterion-content-operator:rtl {
	padding-left: 1px;
	padding-right: 0px;
}
/* Private -Styles the content value of the search field */
af|query::criterion-content-value {
}
/* Styles the cell enclosing the delete icon of the search field
(used to remove criterion) */
af|query::criterion-delete-icon-cell {
	vertical-align:top;
	width:16px;
	-tr-rule-ref: selector(".AFStartTextAlign:alias");
	-tr-rule-ref: selector(".AFEndPadding:alias");
}
/* Styles the delete icon of the search field */
af|query::criterion-delete-icon-style {
	-tr-rule-ref: selector(".AFClickableImageAnchor:alias");
	background-image:url("/afr/delete_ena.png");
}
/* Styles the delete icon of the search field for rtl mode */
af|query::criterion-delete-icon-style:rtl {
	margin: 1px 1px 0px 8px;
}
af|query::criterion-delete-icon-style:hover {
	background-image:url("/afr/delete_ovr.png");
}
af|query::criterion-delete-icon-style:active {
	background-image:url("/afr/delete_dwn.png");
}

/* Private - style to have the warning icon on delete warning dialog*/
af|query::delete-warning-icon {
	content: url("/afr/title_warning.png");
	width: 16px;
	height: 16px;
}

af|quickQuery {
}

af|quickQuery::label {
	-tr-rule-ref: selector(".AFLabel:alias");
	-tr-rule-ref: selector(".AFEndTextAlign:alias");
	vertical-align: baseline;
}

af|quickQuery:vertical {
}

af|quickQuery:vertical::label {
	-tr-rule-ref: selector(".AFStartTextAlign:alias");
}

af|quickQuery::criteria-items {
	vertical-align: baseline;
	padding-right: 1px;
}

af|quickQuery::criteria-items:rtl {
	padding-left: 1px;
}

af|quickQuery:vertical::criteria-items {
	padding-top: 1px;
	padding-bottom: 2px;
}

af|quickQuery::value {
	vertical-align: baseline;
	padding-right: 1px;
}

/* Following skinning keys are used for the proper alignment of the  criterion value component */
@agent gecko {
	af|quickQuery::value af|selectOneRadio {
		padding-top: 10px;
	}

	af|quickQuery::value af|inputNumberSpinbox,
	af|quickQuery::value af|selectOneListbox {
		padding-top: 5px;
	}
}

@agent gecko and (version: 1.9) {
	af|quickQuery::value af|inputNumberSpinbox {
		display: inline;
		vertical-align: 10%;
	}
}

af|quickQuery::value af|inputColor {
	vertical-align: bottom;
}

af|quickQuery:vertical::value af|selectOneListbox,
af|quickQuery:vertical::value af|selectOneRadio,
af|quickQuery:vertical::value af|inputNumberSpinbox {
	padding-top: 0px;
}

af|quickQuery::value:rtl {
	padding-left: 1px;
}

af|quickQuery::search-icon-cell {
	-tr-rule-ref: selector(".AFStartTextAlign:alias");
	width: 16px;
}
@agent gecko, ie {
	af|quickQuery::search-icon-cell {
		vertical-align: baseline;
	}
}

af|quickQuery:vertical::search-icon-cell {
	vertical-align: bottom;
}

af|quickQuery::search-icon-style {
	-tr-rule-ref: selector(".AFClickableImageAnchor:alias");
	background-image: url("/afr/go_ena.png");
}

af|quickQuery::search-icon-style:rtl {
	background-image: url("/afr/go_ena_rtl.png");
}

/* Private - style to have the disabled search icon */
af|quickQuery::disabled-search-icon-style {
	-tr-rule-ref: selector(".AFClickableImageAnchor:alias");
	background-image: url("/afr/go_dis.png");
}

af|quickQuery::disabled-search-icon-style:rtl {
	background-image: url("/afr/go_dis_rtl.png");
}

af|quickQuery::search-icon {
	content: inhibit;
}

af|quickQuery::end {
	vertical-align: baseline;
	-tr-rule-ref: selector(".AFStartPadding:alias");
}

af|quickQuery:vertical::end {
	vertical-align: baseline;
	padding: 1px 0px 0px 0px;
}

/* hover/active in blafplus */

af|panelWindow,
af|dialog {
	-tr-rule-ref: selector(".MetroPanelWindowBackground:alias");
	-tr-open-animation-duration: 300;
	-tr-default-content-width: 250;
	-tr-default-content-height: 250;
}

/* The dialog/panelWindow needs to have a visible border in high contrast mode or else it will be
   difficult to visualize where they are located in Windows's high-contrast display mode for IE. */
@accessibility-profile high-contrast {
	af|panelWindow,
	af|dialog {
		border: 2px solid black;
	}
	af|panelWindow::header-start,
	af|dialog::header-start,
	af|panelWindow::header,
	af|dialog::header,
	af|panelWindow::header-end,
	af|dialog::header-end {
		border-bottom: 2px solid black;
	}
	af|dialog::footer-start,
	af|dialog::footer,
	af|dialog::footer-end {
		border-top: 2px solid black;
	}
}

af|panelWindow::resize-ghost,
af|dialog::resize-ghost {
	position: absolute;
	background-color: transparent;
	border: solid 1px #8794A3;
}

af|panelWindow::main,
af|dialog::main {
	-tr-rule-ref: selector(".MetroPageBlock:alias");
	-tr-inhibit: display;
	position:relative;
	width:100%;
	z-index:2;
}

af|panelWindow::header-start,
af|dialog::header-start {
	font-size:0px;
}

af|panelWindow::header-start:resizable,
af|dialog::header-start:resizable {
	cursor: nw-resize;
}

af|panelWindow::header-start:resizable:rtl,
af|dialog::header-start:resizable:rtl {
	cursor: ne-resize;
}

af|panelWindow::header,
af|dialog::header {
	white-space:nowrap;
}

af|panelWindow::header > :only-child,
af|dialog::header > :only-child {
	-tr-rule-ref: selector(".MetroPageBlockHeader:alias");
	display: table;
	margin-top: 0;
	-tr-inhibit: display;
}

af|panelWindow::header:resizable,
af|dialog::header:resizable {
	cursor:n-resize;
}

af|panelWindow::header-end,
af|dialog::header-end {
	font-size:0px;
}

af|panelWindow::header-end:resizable,
af|dialog::header-end:resizable {
	cursor:ne-resize;
}


af|panelWindow::header-end:resizable:rtl,
af|dialog::header-end:resizable:rtl {
	cursor:nw-resize;
}

/* This is a PRIVATE skinning key that is used to make the title occupy 100% the space
   between the icon and the close region*/
af|panelWindow::header-content-center,
af|dialog::header-content-center {
	width:100%;
	padding-left:2px;
	padding-right:2px;
	padding-top:18px;
	padding-bottom:17px;
	cursor:default;
}

af|panelWindow::content,
af|dialog::content {
	-tr-inhibit: background-color;
	-tr-inhibit: border;
	padding: 8px;
	vertical-align: top;
}

af|panelWindow::content-center,
af|dialog::content-center {
	width: auto;
	height: auto;
}

af|dialog::content:focus,
af|panelWindow::content:focus {
	outline: none;
}

af|panelWindow::content-start,
af|dialog::content-start {
	font-size:0px;
}

af|panelWindow::content-start:resizable,
af|dialog::content-start:resizable {
	cursor:w-resize;
}

af|panelWindow::content-start:resizable:rtl,
af|dialog::content-start:resizable:rtl {
	border-left-width:0px;
	cursor:e-resize;
}

af|panelWindow::content-start:rtl,
af|dialog::content-start:rtl {
	border-left-width:0px;
}

af|panelWindow::content-end,
af|dialog::content-end {
	font-size:0px;
}

af|panelWindow::content-end:resizable,
af|dialog::content-end:resizable {
	cursor:e-resize;
}

af|panelWindow::content-end:resizable:rtl,
af|dialog::content-end:resizable:rtl {
	cursor:w-resize;
}

af|panelWindow::content-end:rtl,
af|dialog::content-end:rtl {
	border-right-width:0px;
}

af|panelWindow::footer-start:resizable,
af|dialog::footer-start:resizable {
	cursor:sw-resize;
}

af|panelWindow::footer-start:resizable:rtl,
af|dialog::footer-start:resizable:rtl {
	cursor:se-resize;
}

af|panelWindow::footer:resizable,
af|dialog::footer:resizable {
	cursor:s-resize;
}

af|panelWindow::footer-end:resizable,
af|dialog::footer-end:resizable {
	cursor:se-resize;
}

af|panelWindow::footer-end:resizable:rtl,
af|dialog::footer-end:resizable:rtl {
	cursor:sw-resize;
}

af|panelWindow::footer,
af|dialog::footer {
	-tr-rule-ref: selector(".MetroBlockFooterBackground:alias");
}

af|dialog::footer-content,
af|panelWindow::footer-content
{
	width:100%;
	padding: 8px;
}

af|dialog::footer-content {
	white-space:nowrap;
	text-align:right;
}

af|panelWindow::close-icon-style,
af|dialog::close-icon-style {
	display: block;
	width: 14px;
	height: 14px;
	cursor: default;
	margin-top: 2px;
	background-image: url("/component/img_metro/close.png");
	background-repeat: no-repeat;
}

/* Icon hook for users to replace close-icon-style with another img or text */
af|panelWindow::close-icon,
af|dialog::close-icon {
	content: inhibit;
}

af|panelWindow::resize-icon-style,
af|dialog::resize-icon-style
{
	display:none;
}

/* Icon hook for users to replace resize-icon-style with another img or text */
af|panelWindow::resize-icon,
af|dialog::resize-icon {
	content: inhibit;
}

af|panelWindow::resize-icon-region,
af|dialog::resize-icon-region {
	display:none;
}

af|panelWindow::title,
af|dialog::title {
	cursor:default;
	-tr-rule-ref: selector(".AFDefaultFontFamily:alias");
	white-space:normal;
}

af|panelWindow::title:screenReader,
af|dialog::title:screenReader
{
	margin: 0px;
	padding: 0px;
}

af|panelWindow::icon-region,
af|dialog::icon-region {
	margin-right:10px;
	margin-bottom:2px;
	height: 16px;
	width: 16px;
	overflow: hidden;
}

af|panelWindow::icon-region:rtl,
af|dialog::icon-region:rtl{
	margin-left:2px;
	margin-right:0px;
}

/* container holding dialog title bar icons aligned to end  */
af|panelWindow::close-icon-region,
af|dialog::close-icon-region,
af|dialog::dynamic-help-icon-container,
af|panelWindow::dynamic-help-icon-container {
	margin-top: 0px;
	margin-left:2px;
	margin-bottom:-1px;
	height: 17px;
	width: 17px;
	overflow: hidden;
}

/* container holding dialog title bar icons aligned to end, RTL  */
af|panelWindow::close-icon-region:rtl,
af|dialog::close-icon-region:rtl,
af|dialog::dynamic-help-icon-container:rtl,
af|panelWindow::dynamic-help-icon-container:rtl {
	margin-left:0px;
	margin-right:2px;
}

af|panelWindow::inactive-background,
af|dialog::inactive-background{
	position:absolute;
	z-index:1;
	display:none;
}

af|panelWindow:inactive af|panelWindow::inactive-background,
af|dialog:inactive af|dialog::inactive-background{
	display:block;
}

af|panelWindow:drag af|panelWindow::main,
af|dialog:drag af|dialog::main{
	/* opacity:0.5;    removed due to performance bug# 6953024 */
}

@agent ie {
	af|panelWindow:drag af|panelWindow::main,
	af|dialog:drag af|dialog::main{
		filter:alpha(opacity:50);
	}
}

af|panelWindow:inactive af|panelWindow::main,
af|dialog:inactive af|dialog::main{
	opacity:0.75;
}

@agent ie {
	af|panelWindow:inactive af|panelWindow::main,
	af|dialog:inactive af|dialog::main{
		filter:alpha(opacity:75);
	}
}


/* fixed is set by code for mozilla */
.AFZOrderLayerContainer {
	position:absolute;
	top:0px;
	left:0px;
	width:100%;
	height:1px;
}
.AFZOrderLayerContainer:rtl {
	left: auto;
	right: 0px;
}
.AFZOrderLayer {
	position:absolute;
	top:0px;
	left:0px;
	width:100%;
	height:1px;
}
.AFZOrderLayer:rtl {
	left: auto;
	right: 0px;
}

/* global style applied to dynamic iframes placed behind floating elements to
   prevent bleed-through. */
.AFMaskingFrame {
	position:absolute;
	background-color: transparent;
	border-style: none;
	/* opacity purposely removed for FF versus IE */
}

@agent gecko {
	.AFMaskingFrame
	{
		overflow:auto;
	}
}

@agent ie {
	.AFMaskingFrame
	{
		filter:alpha(opacity:01);
	}
}

/* global style used by inline modal dialog(s) and panelWindow(s) */
.AFModalGlassPane {
	position:absolute;
	-tr-rule-ref: selector(".MetroModalGlassPaneBackground:alias");
}

@agent ie {
	.AFModalGlassPane
	{
		filter:alpha(opacity:50);
	}
}
/* Extend the "::unordered-list" entry from Trinidad which maps to "UL" so that huge margins aren't
   used.  If you are using roman numerals for your bullet style, you may want to use a larger
   padding for this element.  However, all other bullet styles work best with this smaller
   padding. */
@agent gecko {
	af|panelList::unordered-list:ltr {
		padding-left: 2.5em;
	}
	af|panelList::unordered-list:rtl {
		padding-right: 2.5em;
	}
}
/* Pure IE8 follows Firefox model, IE7 needs margin instead */
@agent ie {
	af|panelList::unordered-list:ltr {
		margin-left: 0;
		padding-left: 2.5em;
	}
	af|panelList::unordered-list:rtl {
		margin-right: 0;
		padding-right: 2.5em;
	}
}
@agent ie and (version: 7.0) {
	af|panelList::unordered-list:ltr {
		margin-left: 2.5em;
		padding-left: 0;
	}
	af|panelList::unordered-list:rtl {
		margin-right: 2.5em;
		padding-right: 0;
	}
}
/* default font's aren't cascading in email mode */
@agent email {
	af|panelList {
		-tr-rule-ref: selector(".AFDefaultFont:alias");
	}
}

/* start of panelList styles */
af|panelList::link {
	text-decoration:none;
}

af|panelList::link:hover {
	text-decoration:underline;
}
/* end of panelList styles */

/* Active data twinkle styles for table and treeTable data-cell elements.  There is also a
   twinkle-off state that the cell changes to after the twinkle timeout has elapsed.
   For further combinations, you may want to define different coloring for table or treeTable cells
   that are in their "selected" or "inactive" states. */
af|table af|table::data-row af|column::data-cell:twinkle-on,
af|table af|table::data-row af|column::banded-data-cell:twinkle-on,
af|treeTable af|table::data-row af|column::data-cell:twinkle-on,
af|treeTable af|table::data-row af|column::banded-data-cell:twinkle-on {
	-tr-rule-ref: selector(".AFTwinkleBackground:alias");
	-tr-rule-ref: selector(".AFTwinkleForeground:alias");
}

/* Active data twinkle styles for tree's node-stamp elements. */
af|tree::data-cell:twinkle-on af|tree::node-stamp-text {
	-tr-rule-ref: selector(".AFTwinkleBackground:alias");
	-tr-rule-ref: selector(".AFLinkForeground:alias");
	border: 1px solid #003399;
}

/* Active data twinkle style for active outputtext, image, and commandToolbarButton */
af|activeOutputText:twinkle-on,
af|commandToolbarButton:twinkle-on,
af|image:twinkle-on {
	-tr-rule-ref: selector(".AFTwinkleBackground:alias");
	-tr-rule-ref: selector(".AFTwinkleForeground:alias");
}

af|inputNumberSlider,
af|inputRangeSlider {
}

af|inputNumberSlider:read-only::content,
af|inputRangeSlider:read-only::content,
af|inputNumberSlider:read-only:vertical::content,
af|inputRangeSlider:read-only:vertical::content,
af|inputNumberSlider:printable::content,
af|inputRangeSlider:printable::content {
	height: auto;
	margin: 0px;
}
af|inputNumberSlider::content,
af|inputRangeSlider::content {
	width: 13.49em;
	height: 50px;
	position: relative;
}
/* in email mode, the height remains in read-only mode for some reason, so take it out */
@agent email {
	af|inputNumberSlider::content,
	af|inputRangeSlider::content {
		-tr-inhibit: width;
		-tr-inhibit: height;
		-tr-inhibit: position;
		-tr-rule-ref: selector(".AFDefaultFont:alias");
	}
}

af|inputNumberSlider::minus-icon-style,
af|inputRangeSlider::minus-icon-style {
	height: 14px;
	width: 14px;
	position: absolute;
	left: 0px;
	background-image: url('/afr/slider_decreasebutcon_m_n.png');
}
af|inputNumberSlider::minus-icon-style:rtl,
af|inputRangeSlider::minus-icon-style:rtl {
	left: auto;
	right: 0px;
}

af|inputNumberSlider::plus-icon-style,
af|inputRangeSlider::plus-icon-style {
	background-image: url('/afr/slider_increasebutcon_m_n.png');
	height: 14px;
	width: 14px;
	position: absolute;
	right: 0px;
}
af|inputNumberSlider::plus-icon-style:rtl,
af|inputRangeSlider::plus-icon-style:rtl {
	right: auto;
	left: 0px;
}

af|inputNumberSlider::thumb-icon,
af|inputRangeSlider::thumb-icon,
af|inputNumberSlider::thumb-disabled-icon,
af|inputRangeSlider::thumb-disabled-icon,
af|inputNumberSlider::minus-icon,
af|inputRangeSlider::minus-icon,
af|inputNumberSlider::minus-disabled-icon,
af|inputRangeSlider::minus-disabled-icon,
af|inputNumberSlider::plus-icon,
af|inputRangeSlider::plus-icon,
af|inputNumberSlider::plus-disabled-icon,
af|inputRangeSlider::plus-disabled-icon {
	content: inhibit;
}


af|inputNumberSlider::bar-outer-border,
af|inputRangeSlider::bar-outer-border {
	position: absolute;
	margin: 3px 0px;
	font-size: 1px;
	line-height: 1px;
	left: 14px;
	right: 14px;
	border: 1px solid black;
	cursor: default;
	-tr-rule-ref: selector(".AFTextBackground:alias");
}

af|inputNumberSlider::bar-inner-border,
af|inputRangeSlider::bar-inner-border {
	border: 1px solid black;
	border-bottom-width: 0px
}

af|inputNumberSlider::bar,
af|inputRangeSlider::bar {
	position: relative;
	height: 4px;
}

af|inputRangeSlider::range {
	height: 100%;
	-tr-rule-ref: selector(".AFDarkBackground:alias");
	position: absolute;
}
/* styles the thumb icon */
af|inputNumberSlider::thumb-icon-style,
af|inputRangeSlider::thumb-icon-style {
	background-image: url('/afr/slider_thumb_vert_m_n.png');
	height: 14px;
	width: 9px;
	top: -4px;
	cursor: default;
	position: absolute;
}

af|inputNumberSlider::ticks,
af|inputRangeSlider::ticks {
	position: absolute;
	top: 100%;
	left: 0%;
	border-collapse: collapse;
	width: 100%;
	height: 6px;
}

af|inputNumberSlider::ticks:rtl,
af|inputRangeSlider::ticks:rtl {
	position: absolute;
	top: 100%;
	left: auto;
	right: 0%;
	border-collapse: collapse;
	width: 100%;
	height: 6px;
}

af|inputNumberSlider::zero-tick,
af|inputRangeSlider::zero-tick,
af|inputNumberSlider::major-tick,
af|inputRangeSlider::major-tick,
af|inputNumberSlider::minor-tick,
af|inputRangeSlider::minor-tick {
	border-left: 1px solid black;
	height: 3px;
	position: absolute;
	top: 0px;
}

af|inputNumberSlider::zero-tick,
af|inputRangeSlider::zero-tick,
af|inputNumberSlider::major-tick,
af|inputRangeSlider::major-tick {
	height: 6px;
}

af|inputNumberSlider::tick-value-zero,
af|inputRangeSlider::tick-value-zero,
af|inputNumberSlider::tick-value,
af|inputRangeSlider::tick-value {
	font-size: 9px;
	-tr-rule-ref: selector(".AFDarkForeground:alias");
	line-height: 9px;
	top: 100%;
	position: absolute;
	padding-top: 2px;
}

af|inputNumberSlider::thumb-value-line,
af|inputRangeSlider::thumb-value-line {
	border-left: 1px solid black;
	height: 13px;
	position: absolute;
	left: 50%;
	top: 100%;
}

af|inputNumberSlider::thumb-value,
af|inputRangeSlider::thumb-value {
	position: relative;
	left: -50%;
	top: 100%;
	border-top: solid 1px black;
	padding-top: 2px;
	line-height: 9px;
	font-size: 9px;
	-tr-rule-ref: selector(".AFErrorTextForeground:alias");
}
@agent ie {
	af|inputNumberSlider::thumb-value,
	af|inputRangeSlider::thumb-value {
		zoom: 1;
	}
}
/* vertical styles */
af|inputNumberSlider:vertical,
af|inputRangeSlider:vertical{
}

af|inputNumberSlider:vertical::content,
af|inputRangeSlider:vertical::content {
	height: 13.49em;
	width: 75px;
}

af|inputNumberSlider:vertical::minus-icon-style,
af|inputRangeSlider:vertical::minus-icon-style {
	left: auto;
	right: 0;
	bottom: 0;
}

af|inputNumberSlider:vertical::minus-icon-style:rtl,
af|inputRangeSlider:vertical::minus-icon-style:rtl {
	left: 0;
	right: auto;
}

af|inputNumberSlider:vertical::minus-icon,
af|inputRangeSlider:vertical::minus-icon {
	content: inhibit;
}


af|inputNumberSlider:vertical::plus-icon-style,
af|inputRangeSlider:vertical::plus-icon-style {
	left: auto;
	right: 0;
	top: 0;
}

af|inputNumberSlider:vertical::plus-icon-style:rtl,
af|inputRangeSlider:vertical::plus-icon-style:rtl {
	left: 0;
	right: auto;
}

af|inputNumberSlider:vertical::plus-icon,
af|inputRangeSlider:vertical::plus-icon {
	content: inhibit;
}

af|inputNumberSlider:vertical::bar-outer-border,
af|inputRangeSlider:vertical::bar-outer-border {
	left: auto;
	margin: 1px 3px;
	right: 0;
	top: 12px;
	bottom: 14px;
	width: 5px;
}

af|inputNumberSlider:vertical::bar-outer-border:rtl,
af|inputRangeSlider:vertical::bar-outer-border:rtl {
	left: 0;
	right: auto;
}

af|inputNumberSlider:vertical::bar-inner-border,
af|inputRangeSlider:vertical::bar-inner-border {
	height: 100%;
	position: absolute;
	width: 4px;
	border-bottom-width: 1px;
	border-left-width: 0px;
}

af|inputNumberSlider:vertical::bar-inner-border:rtl,
af|inputRangeSlider:vertical::bar-inner-border:rtl {
	border-bottom-width: 1px;
	border-right-width: 0px;
	border-left-width: 1px;
}

af|inputNumberSlider:vertical::bar,
af|inputRangeSlider:vertical::bar {
	width: 4px;
	height: 100%;
}

af|inputRangeSlider:vertical::range {
	width: 100%;
	-tr-rule-ref: selector(".AFDarkAccentBackground:alias");
	height: auto;
}

af|inputNumberSlider:vertical::thumb-icon-style,
af|inputRangeSlider:vertical::thumb-icon-style {
	background-image: url('/afr/slider_thumb_m_n.png');
	top: auto;
	height: 9px;
	width: 14px;
	right: -4px;
}

af|inputNumberSlider:vertical::thumb-icon-style:rtl,
af|inputRangeSlider:vertical::thumb-icon-style:rtl {
	background-image: url('/afr/slider_thumb_m_n_rtl.png');
	right: auto;
	left: -4px;
}

af|inputNumberSlider:vertical::thumb-icon,
af|inputRangeSlider:vertical::thumb-icon {
	content: inhibit;
}

af|inputNumberSlider:vertical::ticks,
af|inputRangeSlider:vertical::ticks {
	top: 0%;
	left: -6px;
	right: 100%;
	width: 6px;
	height: 100%;
}

af|inputNumberSlider:vertical::ticks:rtl,
af|inputRangeSlider:vertical::ticks:rtl {
	right: -6px;
	left: 100%;
}


af|inputNumberSlider:vertical::zero-tick,
af|inputRangeSlider:vertical::zero-tick,
af|inputNumberSlider:vertical::major-tick,
af|inputRangeSlider:vertical::major-tick,
af|inputNumberSlider:vertical::minor-tick,
af|inputRangeSlider:vertical::minor-tick {
	border-top: 1px solid black;
	width: 3px;
	right: 0px;
	height: 0px;
}

af|inputNumberSlider:vertical::zero-tick:rtl,
af|inputRangeSlider:vertical::zero-tick:rtl,
af|inputNumberSlider:vertical::major-tick:rtl,
af|inputRangeSlider:vertical::major-tick:rtl,
af|inputNumberSlider:vertical::minor-tick:rtl,
af|inputRangeSlider:vertical::minor-tick:rtl {
	right: auto;
	left: 0px;
}


af|inputNumberSlider:vertical::zero-tick,
af|inputRangeSlider:vertical::zero-tick,
af|inputNumberSlider:vertical::major-tick,
af|inputRangeSlider:vertical::major-tick {
	width: 6px;
	height: auto;
}

af|inputNumberSlider:vertical::tick-value-zero,
af|inputRangeSlider:vertical::tick-value-zero,
af|inputNumberSlider:vertical::tick-value,
af|inputRangeSlider:vertical::tick-value {
	right: 6px;
	top: -5px;
	left: auto;
	padding-top: 0px;
	padding-right: 4px;
	text-align: right;
}

af|inputNumberSlider:vertical::tick-value-zero:rtl,
af|inputRangeSlider:vertical::tick-value-zero:rtl,
af|inputNumberSlider:vertical::tick-value:rtl,
af|inputRangeSlider:vertical::tick-value:rtl {
	right: auto;
	left: 6px;
	padding-right: 0px;
	padding-left: 4px;
	text-align: left;
}

af|inputNumberSlider:vertical::thumb-value,
af|inputRangeSlider:vertical::thumb-value {
	left: auto;
	top: auto;
	bottom: 50%;
	right: 100%;
	padding-top: 0px;
	padding-right: 4px;
	text-align: right;
	border-top-width: 0px;
	border-right: solid 1px black;
}

af|inputNumberSlider:vertical::thumb-value:rtl,
af|inputRangeSlider:vertical::thumb-value:rtl {
	left: 100%;
	right: auto;
	padding-right: 0;
	padding-left: 4px;
	text-align: left;
	border-right-width: 0px;
	border-left: solid 1px black;
}

af|inputNumberSlider:vertical::thumb-value-line,
af|inputRangeSlider:vertical::thumb-value-line {
	top: 50%;
	left: auto;
	right: 100%;
	width: 22px;
	height: 10px;

	border-left-width: 0px;
	border-top: solid 1px black;
}

af|inputNumberSlider:vertical::thumb-value-line:rtl,
af|inputRangeSlider:vertical::thumb-value-line:rtl {
	left: 100%;
	right: auto;
	border-right-width: 0px;
}


/* disabled styles */

af|inputNumberSlider:vertical:disabled::thumb-icon-style,
af|inputRangeSlider:vertical:disabled::thumb-icon-style {
	background-image: url('/afr/slider_thumb_m_d.png');
}

af|inputNumberSlider:vertical:disabled::thumb-icon-style:rtl,
af|inputRangeSlider:vertical:disabled::thumb-icon-style:rtl {
	background-image: url('/afr/slider_thumb_m_d_rtl.png');
}

af|inputNumberSlider:vertical:disabled::thumb-icon,
af|inputRangeSlider:vertical:disabled::thumb-icon {
	content: inhibit;
}


af|inputNumberSlider:disabled::minus-icon-style,
af|inputRangeSlider:disabled::minus-icon-style,
af|inputNumberSlider::minus-icon-style:disabled,
af|inputRangeSlider::minus-icon-style:disabled {
	background-image: url('/afr/slider_decreasebutcon_m_d.png');
}

af|inputNumberSlider:disabled::minus-icon,
af|inputRangeSlider:disabled::minus-icon {
	content: inhibit;
}

af|inputNumberSlider:disabled::plus-icon-style,
af|inputRangeSlider:disabled::plus-icon-style,
af|inputNumberSlider::plus-icon-style:disabled,
af|inputRangeSlider::plus-icon-style:disabled {
	background-image: url('/afr/slider_increasebutcon_m_d.png');
}

af|inputNumberSlider:disabled::plus-icon,
af|inputRangeSlider:disabled::plus-icon {
	content: inhibit;
}

af|inputNumberSlider:disabled::thumb-icon-style,
af|inputRangeSlider:disabled::thumb-icon-style {
	background-image: url('/afr/slider_thumb_vert_m_d.png');
}

af|inputNumberSlider:disabled::thumb-icon,
af|inputRangeSlider:disabled::thumb-icon {
	content: inhibit;
}

af|inputNumberSlider:disabled::tick,
af|inputNumberSlider:disabled::bar-inner-border,
af|inputRangeSlider:disabled::tick,
af|inputRangeSlider:disabled::bar-inner-border {
	border-color: #858585;
}

af|inputNumberSlider:vertical::tick-value-zero,
af|inputRangeSlider:vertical::tick-value-zero,
af|inputNumberSlider:disabled::tick-value,
af|inputRangeSlider:disabled::tick-value {
	-tr-rule-ref: selector(".AFVeryDarkAccentForeground:alias");
}

af|inputRangeSlider:disabled::range {
	-tr-rule-ref: selector(".AFVeryDarkAccentBackground:alias");
}

af|inputNumberSlider:disabled::thumb-value-line,
af|inputRangeSlider:disabled::thumb-value-line {
	border-color: #858585;
}

af|inputNumberSlider:disabled::thumb-value,
af|inputRangeSlider:disabled::thumb-value {
	-tr-rule-ref: selector(".AFVeryDarkAccentForeground:alias");
	border-color: #858585;
}

af|inputNumberSlider:vertical:disabled::thumb-value-line,
af|inputRangeSlider:vertical:disabled::thumb-value-line {
	border-color: #858585;
}

af|inputNumberSlider:vertical:disabled::thumb-value,
af|inputRangeSlider:vertical:disabled::thumb-value {
	border-color: #858585;
}

af|inputNumberSlider::label,
af|inputRangeSlider::label {
	-tr-rule-ref:selector(".AFLabel:alias");
}

af|inputNumberSlider:disabled::label,
af|inputRangeSlider:disabled::label {
	-tr-rule-ref:selector(".AFLabelDisabled:alias");
}



af|inputNumberSlider::access-key,
af|inputRangeSlider::access-key {
	-tr-rule-ref: selector(".AFFormAccessKeyStyle:alias");
}

/* Splash screen styles. */

/* Defines the background color for the page behind the loading content. */
af|document::splash-screen {
	display: table;
	position: fixed;
	top: 0px;
	left: 0px;
	width: 100%;
	height: 100%;
	background-color: white;
	color: black;
	z-index: 3201;
}
af|document::splash-screen:rtl {
	left: auto;
	right: 0px;
}

/* Private style class to allow for proper centering. */
af|document::splash-screen-cell {
	display: table-cell;
	vertical-align: middle;
	text-align: center;
}

/* The centered box for the splash content.  Typically used to define padding, borders, background
   images, background colors, and other text or font styles. */
af|document::splash-screen-content {
	display: table;
	margin-left: auto;
	margin-right: auto;
}

/* The splash screen message text.  Typically used to define direction-specific padding and
   optionally text or font styles. */
af|document::splash-screen-message {
	-tr-rule-ref: selector(".AFDefaultFontFamily:alias");
}

/* PRIVATE - marker for popup scoping container elements */
.AFPopupScopingContainer {
	/* No properties - this class is only used as a marker so we
     can locate popup scoping containers on the client. */
}

/* PRIVATE - Used by AdfPopupScopingUtils to hide scoping containers */
.AFPopupScopingContainerHidden {
	display:none;
}






@accessibility-profile high-contrast {

	/* Add a high-contrast icon */
	/* Style for dynamic help icon */
	af|column::dynamic-help-icon,
	af|inputColor::dynamic-help-icon,
	af|inputComboboxListOfValues::dynamic-help-icon,
	af|inputDate::dynamic-help-icon,
	af|inputFile::dynamic-help-icon,
	af|inputListOfValues::dynamic-help-icon,
	af|inputNumberSlider::dynamic-help-icon,
	af|inputNumberSpinbox::dynamic-help-icon,
	af|inputRangeSlider::dynamic-help-icon,
	af|inputText::dynamic-help-icon,
	af|panelHeader::dynamic-help-icon,
	af|panelLabelAndMessage::dynamic-help-icon,
	af|query::dynamic-help-icon,
	af|quickQuery::dynamic-help-icon,
	af|richTextEditor::dynamic-help-icon,
	af|selectBooleanCheckbox::dynamic-help-icon,
	af|selectBooleanRadio::dynamic-help-icon,
	af|selectManyCheckbox::dynamic-help-icon,
	af|selectManyChoice::dynamic-help-icon,
	af|selectManyListbox::dynamic-help-icon,
	af|selectManyShuttle::dynamic-help-icon,
	af|selectOneChoice::dynamic-help-icon,
	af|selectOneListbox::dynamic-help-icon,
	af|selectOneRadio::dynamic-help-icon,
	af|selectOrderShuttle::dynamic-help-icon,
	af|showDetailHeader::dynamic-help-icon,
	af|dialog::dynamic-help-icon,
	af|panelWindow::dynamic-help-icon,
	af|panelBox::dynamic-help-icon,
	af|region::dynamic-help-icon {
		content: url('/afr/helptopics_ena.png');
	}

	af|breadCrumbs::overflow-icon {
		content: url("/afr/breadcrumb_of_n_hc.png");
	}
	af|breadCrumbs::overflow-icon:hover {
		content: url("/afr/breadcrumb_overflow_mo.png");
	}
	af|breadCrumbs::overflow-icon:depressed {
		content: url("/afr/breadcrumb_overflow_md.png");
	}
	af|calendar::reminder-dark-icon {
		content: url(/afr/cal_reminder_blk_hc.png);
	}
	af|calendar::recurring-dark-icon {
		content: url(/afr/cal_repeat_blk_hc.png);
	}
	af|calendar::recurring-change-dark-icon {
		content: url(/afr/cal_repeat_chg_blk_hc.png);
	}

	af|carousel::spin-h-previous-icon,
	af|carousel::spin-v-previous-icon {
		content: "-";
	}
	af|carousel::spin-h-thumb-icon,
	af|carousel::spin-v-thumb-icon {
		content: "X";
	}
	af|carousel::spin-h-next-icon,
	af|carousel::spin-v-next-icon {
		content: "+";
	}

	af|chooseColor::button-swatch:empty {
		content: url('/afr/empty-swatch.png');
	}
	af|chooseColor::swatch:empty {
		content: url('/afr/empty-swatch.png');
	}
	af|chooseDate::choice-list-dropdown-icon {
		content: url('/afr/dropdown_n_hc.png');
	}
	af|chooseDate:disabled::choice-list-dropdown-icon {
		content: url('/afr/dropdown_d_hc.png');
	}
	af|chooseDate::next-month-arrow-icon,
	af|chooseDate::prev-month-arrow-icon:rtl {
		content: url('/afr/next_n.png');
	}
	af|chooseDate::prev-month-arrow-icon,
	af|chooseDate::next-month-arrow-icon:rtl {
		content: url('/afr/previous_n.png');
	}
	af|column::sort-ascending-icon {
		content: url("/afr/sort_asc_n.png");
	}
	af|column::sort-ascending-icon:hover {
		content: url("/afr/sort_asc_mo.png");
	}
	af|column::sort-ascending-icon:active {
		content: url("/afr/sort_asc_s.png");
	}
	af|column::sort-descending-icon {
		content: url("/afr/sort_des_n.png");
	}
	af|column::sort-descending-icon:hover {
		content: url("/afr/sort_des_mo.png");
	}
	af|column::sort-descending-icon:active {
		content: url("/afr/sort_des_s.png");
	}
	af|column::sorted-ascending-icon {
		content: url("/afr/sort_asc_s.png");
	}
	af|column::sorted-descending-icon {
		content: url("/afr/sort_des_s.png");
	}
	af|commandMenuItem::menu-item-radio-icon {
		content: url("/afr/status_bullet.png");
	}
	af|commandMenuItem::menu-item-check-icon {
		content: url("/afr/completeind_status.png");
	}

	af|commandToolbarButton::list-unordered-icon {
		content: url(//afr/bullist_hc.png);
	}

	af|commandToolbarButton::dropdown-icon {
		content: url('/afr/dropdown_n_hc.png');
	}

	af|commandToolbarButton::justify-left-icon {
		content: url(//afr/leftalign_hc.png);
	}

	af|commandToolbarButton::justify-center-icon {
		content: url(//afr/centeralign_hc.png);
	}

	af|commandToolbarButton::justify-full-icon {
		content: url(//afr/fullalign_hc.png);
	}

	af|commandToolbarButton::list-ordered-icon {
		content: url(//afr/numlist_hc.png);
	}

	af|commandToolbarButton::list-ordered-icon:rtl {
		content: url(//afr/numlist_rtl_hc.png);
	}

	af|dialog::close-icon {
		content:  url("/component/img_metro/close.png");
	}
	af|inputColor::launch-icon {
		content: url("/afr/arrow_md.png");
	}
	af|inputComboboxListOfValues::dropdown-icon:hover,
	af|inputComboboxListOfValues::dropdown-icon:active {
		content: url("/afr/dropdown_md.png");
	}

	af|inputComboboxListOfValues::dropdown-disabled-icon {
		content:url("/afr/dropdown_d_hc.png");
	}
	af|inputComboboxListOfValues::dropdown-icon:disabled {
		content:url("/afr/dropdown_d_hc.png");
	}
	af|inputComboboxListOfValues::dropdown-icon {
		content: url('/afr/dropdown_n_hc.png');
	}
	af|inputDate::launch-icon,
	af|panelList af|inputDate::launch-icon {
		content: url("/component/img_metro/calendar.png");
	}
	af|inputDate::launch-icon:disabled,
	af|inputDate::launch-icon:disabled:active,
	af|inputDate::launch-icon:disabled:hover {
		content: url("/component/img_metro/calendar.png");
		opacity: 0.3;
	}
	af|inputDate::launch-icon:active {
		content: url("/component/img_metro/calendar.png");
	}
	af|inputDate::launch-icon:hover {
		content: url("/component/img_metro/calendar.png");
	}
	af|inputListOfValues::search-icon {
		content: url("/afr/lov_ena.png");
	}
	af|inputListOfValues::search-icon:disabled,
	af|inputListOfValues::search-icon:disabled:active,
	af|inputListOfValues::search-icon:disabled:hover{
		content:url("/afr/lov_dis.png");
	}
	af|inputListOfValues::popup-create-icon,
	af|inputComboboxListOfValues::popup-create-icon {
		content: url("/afr/new_ena.png");
	}
	af|inputNumberSlider::minus-icon,
	af|inputRangeSlider::minus-icon {
		content: url('/afr/slider_decreasebutcon_m_n.png');
	}
	af|inputNumberSlider::plus-icon,
	af|inputRangeSlider::plus-icon {
		content: url('/afr/slider_increasebutcon_m_n.png');
	}
	af|inputNumberSlider::thumb-icon,
	af|inputRangeSlider::thumb-icon {
		content: url('/afr/slider_thumb_vert_m_n.png');
	}
	af|inputNumberSlider:vertical::thumb-icon,
	af|inputRangeSlider:vertical::thumb-icon {
		content: url('/afr/slider_thumb_m_n.png');
	}
	af|inputNumberSlider:vertical::thumb-icon:rtl,
	af|inputRangeSlider:vertical::thumb-icon:rtl {
		content: url('/afr/slider_thumb_m_n_rtl.png');
	}
	af|inputNumberSlider:vertical:thumb-disabled-icon,
	af|inputRangeSlider:vertical:thumb-disabled-icon {
		content: url('/afr/slider_thumb_m_d.png');
	}
	af|inputNumberSlider:vertical:thumb-disabled-icon:rtl,
	af|inputRangeSlider:vertical:thumb-disabled-icon:rtl {
		content: url('/afr/slider_thumb_m_d_rtl.png');
	}
	af|inputNumberSlider:minus-disabled-icon,
	af|inputRangeSlider:minus-disabled-icon {
		content: url('/afr/slider_decreasebutcon_m_d.png');
	}
	af|inputNumberSlider:plus-disabled-icon,
	af|inputRangeSlider:plus-disabled-icon {
		content: url('/afr/slider_increasebutcon_m_d.png');
	}
	af|inputNumberSlider:thumb-disabled-icon,
	af|inputRangeSlider:thumb-disabled-icon {
		content: url('/afr/slider_thumb_vert_m_d.png');
	}
	af|inputNumberSpinbox::decrementor-icon,
	af|chooseDate::spinbox-decrementor-icon {
		content: url("/afr/spinbox_arrow_dn_hc.png");
	}
	af|inputNumberSpinbox::decrementor-disabled-icon,
	af|chooseDate::spinbox-decrementor-disabled-icon {
		content: url("/afr/spinbox_arrow_dn_d.png");
	}
	af|inputNumberSpinbox::incrementor-icon,
	af|chooseDate::spinbox-incrementor-icon {
		content: url("/afr/spinbox_arrow_up_hc.png");
	}
	af|inputNumberSpinbox::incrementor-disabled-icon,
	af|chooseDate::spinbox-incrementor-disabled-icon {
		content: url("/afr/spinbox_arrow_up_d.png");
	}
	af|menu::bar-item-open-icon {
		content: url("/afr/dropdown_n_hc.png");
	}
	af|menu::scroll-up-icon {
		content: url("/afr/scrollUp_n.png");
	}
	af|menu::scroll-down-icon {
		content: url("/afr/scrollDown_n.png");
	}
	af|menu::submenu-open-icon {
		content: url("/afr/openSubmenu_n_hc.png");
	}
	af|menu::submenu-open-icon:rtl {
		content: url("/afr/openSubmenu_n_hc_rtl.png");
	}
	af|navigationPane-bar::separator-icon,
	af|navigationPane-buttons::separator-icon {
		content: "|";
	}
	af|navigationPane-choice::dropdown-icon {
		content: url('/afr/spinbox_arrow_dn_hc.png');
	}
	af|panelAccordion::disclosed-icon {
		content: url('/afr/disclosure_expanded.png');
	}
	af|panelAccordion::undisclosed-icon {
		content: url('/afr/disclosure_collapsed.png');
	}
	af|panelAccordion::overflow-top-icon {
		content: url('/afr/overflow_top.png');
	}
	af|panelAccordion::overflow-bottom-icon {
		content: url('/afr/overflow_bottom.png');
	}
	af|panelTabbed::disclosed-remove-icon,
	af|navigationPane-tabs::disclosed-remove-icon {
		content: url('/afr/removeTab_ena.png');
	}
	af|panelTabbed::undisclosed-remove-icon,
	af|navigationPane-tabs::undisclosed-remove-icon {
		content: url('/afr/removeTab_ena.png');
	}
	af|panelTabbed::remove-disabled-icon,
	af|navigationPane-tabs::remove-disabled-icon {
		content: url('/afr/removeTab_dis.png');
	}
	af|panelWindow::close-icon {
		content: url("/component/img_metro/close.png");
	}
	af|progressIndicator::indeterminate-running-icon {
		content: url('/afr/process_animation.gif');
	}
	af|progressIndicator::indeterminate-finished-icon {
		content: url('/afr/process_finished.gif');
	}
	af|query::criterion-delete-icon {
		content: url("/afr/delete_ena.png");
	}
	af|query::criterion-delete-icon:hover {
		content: url("/afr/delete_ovr.png");
	}
	af|query::criterion-delete-icon:active {
		content: url("/afr/delete_dwn.png");
	}
	af|quickQuery::search-icon {
		content: url("/afr/go_ena.png");
	}
	af|quickQuery::search-icon:rtl {
		content: url("/afr/go_ena_rtl.png");
	}
	/* Private - style to have the disabled search icon */
	af|quickQuery::disabled-search-icon {
		content: url("/afr/go_dis.png");
	}
	af|quickQuery::disabled-search-icon:rtl {
		content: url("/afr/go_dis_rtl.png");
	}
	af|selectManyChoice::dropdown-icon {
		content: url('/afr/dropdown_n_hc.png');
	}
	af|selectManyChoice:disabled::dropdown-icon {
		content: url('/afr/dropdown_d_hc.png');
	}
	af|selectOneChoice::compact-dropdown-icon {
		content: url('/afr/spinbox_arrow_dn_hc.png');
	}
	af|selectOneChoice::dropdown-icon {
		content: url('/afr/dropdown_n_hc.png');
	}
	af|selectOneChoice:disabled::dropdown-icon {
		content: url('/afr/dropdown_d_hc.png');
	}
	af|selectManyShuttle::move-horizontal-icon,
	af|selectOrderShuttle::move-horizontal-icon {
		content: url("/afr/shuttleright_ena.png");
	}
	af|selectManyShuttle::move-horizontal-disabled-icon,
	af|selectOrderShuttle::move-horizontal-disabled-icon {
		content: url("/afr/shuttleright_dis.png");
	}
	af|selectManyShuttle::move-horizontal-icon:rtl,
	af|selectOrderShuttle::move-horizontal-icon:rtl {
		content: url("/afr/shuttlerightbidi_ena.png");
	}
	af|selectManyShuttle::move-horizontal-disabled-icon:rtl,
	af|selectOrderShuttle::move-horizontal-disabled-icon:rtl {
		content: url("/afr/shuttlerightbidi_dis.png");
	}
	af|selectManyShuttle::move-vertical-icon,
	af|selectOrderShuttle::move-vertical-icon {
		content: url("/afr/shuttledown_ena.png");
	}
	af|selectManyShuttle::move-vertical-disabled-icon,
	af|selectOrderShuttle::move-vertical-disabled-icon {
		content: url("/afr/shuttledown_dis.png");
	}
	af|selectManyShuttle::moveall-horizontal-icon,
	af|selectOrderShuttle::moveall-horizontal-icon {
		content: url("/afr/shuttlerightall_ena.png");
	}
	af|selectManyShuttle::moveall-horizontal-disabled-icon,
	af|selectOrderShuttle::moveall-horizontal-disabled-icon {
		content: url("/afr/shuttlerightall_dis.png");
	}
	af|selectManyShuttle::moveall-horizontal-icon:rtl,
	af|selectOrderShuttle::moveall-horizontal-icon:rtl {
		content: url("/afr/shuttleleftall_ena.png");
	}
	af|selectManyShuttle::moveall-horizontal-disabled-icon:rtl,
	af|selectOrderShuttle::moveall-horizontal-disabled-icon:rtl {
		content: url("/afr/shuttleleftall_dis.png");
	}
	af|selectManyShuttle::moveall-vertical-icon,
	af|selectOrderShuttle::moveall-vertical-icon {
		content: url("/afr/shuttledownall_ena.png");
	}
	af|selectManyShuttle::moveall-vertical-disabled-icon,
	af|selectOrderShuttle::moveall-vertical-disabled-icon {
		content: url("/afr/shuttledownall_dis.png");
	}
	af|selectManyShuttle::remove-horizontal-icon,
	af|selectOrderShuttle::remove-horizontal-icon {
		content: url("/afr/shuttleleft_ena.png");
	}
	af|selectManyShuttle::remove-horizontal-disabled-icon,
	af|selectOrderShuttle::remove-horizontal-disabled-icon {
		content: url("/afr/shuttleleft_dis.png");
	}
	af|selectManyShuttle::remove-horizontal-icon:rtl,
	af|selectOrderShuttle::remove-horizontal-icon:rtl {
		content: url("/afr/shuttleleftbidi_ena.png");
	}
	af|selectManyShuttle::remove-horizontal-disabled-icon:rtl,
	af|selectOrderShuttle::remove-horizontal-disabled-icon:rtl {
		content: url("/afr/shuttleleftbidi_dis.png");
	}
	af|selectManyShuttle::remove-vertical-icon,
	af|selectOrderShuttle::remove-vertical-icon {
		content: url("/afr/shuttleup_ena.png");
	}
	af|selectManyShuttle::remove-vertical-disabled-icon,
	af|selectOrderShuttle::remove-vertical-disabled-icon {
		content: url("/afr/shuttleup_dis.png");
	}
	af|selectManyShuttle::remove-vertical-icon:rtl,
	af|selectOrderShuttle::remove-vertical-icon:rtl {
		content: url("/afr/shuttleupbidi_ena.png");
	}
	af|selectManyShuttle::remove-vertical-disabled-icon:rtl,
	af|selectOrderShuttle::remove-vertical-disabled-icon:rtl {
		content: url("/afr/shuttleupbidi_dis.png");
	}
	af|selectManyShuttle::removeall-horizontal-icon,
	af|selectOrderShuttle::removeall-horizontal-icon {
		content: url("/afr/shuttleleftall_ena.png");
	}
	af|selectManyShuttle::removeall-horizontal-disabled-icon,
	af|selectOrderShuttle::removeall-horizontal-disabled-icon {
		content: url("/afr/shuttleleftall_dis.png");
	}
	af|selectManyShuttle::removeall-horizontal-icon:rtl,
	af|selectOrderShuttle::removeall-horizontal-icon:rtl {
		content: url("/afr/shuttleleftallbidi_ena.png");
	}
	af|selectManyShuttle::removeall-horizontal-disabled-icon:rtl,
	af|selectOrderShuttle::removeall-horizontal-disabled-icon:rtl {
		content: url("/afr/shuttleleftallbidi_dis.png");
	}
	af|selectManyShuttle::removeall-vertical-icon,
	af|selectOrderShuttle::removeall-vertical-icon {
		content: url("/afr/shuttleupall_ena.png");
	}
	af|selectManyShuttle::removeall-vertical-disabled-icon,
	af|selectOrderShuttle::removeall-vertical-disabled-icon {
		content: url("/afr/shuttleupall_dis.png");
	}
	af|selectManyShuttle::removeall-vertical-icon:rtl,
	af|selectOrderShuttle::removeall-vertical-icon:rtl {
		content: url("/afr/shuttleupallbidi_ena.png");
	}
	af|selectManyShuttle::removeall-vertical-disabled-icon:rtl,
	af|selectOrderShuttle::removeall-vertical-disabled-icon:rtl {
		content: url("/afr/shuttleupallbidi_dis.png");
	}
	af|selectOrderShuttle::move-top-icon {
		content: url("/afr/shuttlereordertop_ena.png");
	}
	af|selectOrderShuttle::move-top-disabled-icon {
		content: url("/afr/shuttlereordertop_dis.png");
	}
	af|selectOrderShuttle::move-up-icon {
		content: url("/afr/shuttlereorderup_ena.png");
	}
	af|selectOrderShuttle::move-up-disabled-icon {
		content: url("/afr/shuttlereorderup_dis.png");
	}
	af|selectOrderShuttle::move-down-icon {
		content: url("/afr/shuttlereorderdown_ena.png");
	}
	af|selectOrderShuttle::move-down-disabled-icon {
		content: url("/afr/shuttlereorderdown_dis.png");
	}
	af|selectOrderShuttle::move-bottom-icon {
		content: url("/afr/shuttlereorderbottom_ena.png");
	}
	af|selectOrderShuttle::move-bottom-disabled-icon {
		content: url("/afr/shuttlereorderbottom_dis.png");
	}
	af|table::disclosed-icon {
		content: url("/afr/disclosure_expanded.png");
	}
	af|table::undisclosed-icon {
		content: url("/afr/disclosure_collapsed.png");
	}
	af|train::selected-stop-icon,
	af|train-vertical::selected-stop-icon {
		content: url('/afr/mTrain_active.png');
	}
	af|train::disabled-stop-icon,
	af|train-vertical::disabled-stop-icon {
		content: url('/afr/mTrain_disabled.png');
	}
	af|train::unvisited-stop-icon,
	af|train-vertical::unvisited-stop-icon {
		content: url('/afr/mTrain_unvisited_n.png');
	}
	af|train::visited-stop-icon,
	af|train-vertical::visited-stop-icon {
		content: url('/afr/mTrain_visited_n.png');
	}
	af|train::stop-error-icon,
	af|train-vertical::stop-error-icon {
		content: url('/afr/alertModifier_error.png');
	}
	af|train::stop-warning-icon,
	af|train-vertical::stop-warning-icon {
		content: url('/afr/alertModifier_warning.png');
	}
	af|train::stop-confirmation-icon,
	af|train-vertical::stop-confirmation-icon {
		content: url('/afr/alertModifier_complete.png');
	}
	af|train::stop-information-icon,
	af|train-vertical::stop-information-icon {
		content: url('/afr/alertModifier_information.png');
	}

	af|navigationPane-list::bullet-icon {
		content: url('/afr/status_bullet.png');
	}
	af|navigationPane-tabs::start-overflow-icon:ltr,
	af|navigationPane-tabs::end-overflow-icon:rtl,
	af|navigationPane-bar::start-overflow-icon:ltr,
	af|navigationPane-bar::end-overflow-icon:rtl,
	af|panelTabbed::start-overflow-icon:ltr,
	af|panelTabbed::end-overflow-icon:rtl,
	af|train::start-overflow-icon:ltr,
	af|train::end-overflow-icon:rtl,
	af|menuBar::overflow-icon:rtl,
	af|toolbar::overflow-icon:rtl {
		content: url("/afr/overflow_start.png");
	}
	af|navigationPane-tabs::end-overflow-icon:ltr,
	af|navigationPane-tabs::start-overflow-icon:rtl,
	af|navigationPane-bar::end-overflow-icon:ltr,
	af|navigationPane-bar::start-overflow-icon:rtl,
	af|panelTabbed::end-overflow-icon:ltr,
	af|panelTabbed::start-overflow-icon:rtl,
	af|train::end-overflow-icon:ltr,
	af|train::start-overflow-icon:rtl,
	af|menuBar::overflow-icon:ltr,
	af|toolbar::overflow-icon:ltr {
		content: url("/afr/overflow_end.png");
	}
	af|navigationPane-tabs::start-overflow-icon:hover:ltr,
	af|navigationPane-tabs::end-overflow-icon:hover:rtl,
	af|navigationPane-bar::start-overflow-icon:hover:ltr,
	af|navigationPane-bar::end-overflow-icon:hover:rtl,
	af|panelTabbed::start-overflow-icon:hover:ltr,
	af|panelTabbed::end-overflow-icon:hover:rtl,
	af|train::start-overflow-icon:hover:ltr,
	af|train::end-overflow-icon:hover:rtl,
	af|menuBar::overflow-icon:hover:rtl,
	af|toolbar::overflow-icon:hover:rtl {
		content: url("/afr/overflow_start_mo.png");
	}
	af|navigationPane-tabs::start-overflow-icon:depressed:ltr,
	af|navigationPane-tabs::end-overflow-icon:depressed:rtl,
	af|navigationPane-bar::start-overflow-icon:depressed:ltr,
	af|navigationPane-bar::end-overflow-icon:depressed:rtl,
	af|panelTabbed::start-overflow-icon:depressed:ltr,
	af|panelTabbed::end-overflow-icon:depressed:rtl,
	af|train::start-overflow-icon:depressed:ltr,
	af|train::end-overflow-icon:depressed:rtl,
	af|menuBar::overflow-icon:depressed:rtl,
	af|toolbar::overflow-icon:depressed:rtl {
		content: url("/afr/overflow_start_md.png");
	}
	af|navigationPane-tabs::end-overflow-icon:hover:ltr,
	af|navigationPane-tabs::start-overflow-icon:hover:rtl,
	af|navigationPane-bar::end-overflow-icon:hover:ltr,
	af|navigationPane-bar::start-overflow-icon:hover:rtl,
	af|panelTabbed::end-overflow-icon:hover:ltr,
	af|panelTabbed::start-overflow-icon:rtl,
	af|train::end-overflow-icon:hover:ltr,
	af|train::start-overflow-icon:hover:rtl,
	af|menuBar::overflow-icon:hover,
	af|toolbar::overflow-icon:hover {
		content: url("/afr/overflow_end_mo.png");
	}
	af|navigationPane-tabs::end-overflow-icon:depressed:ltr,
	af|navigationPane-tabs::start-overflow-icon:depressed:rtl,
	af|navigationPane-bar::end-overflow-icon:depressed:ltr,
	af|navigationPane-bar::start-overflow-icon:depressed:rtl,
	af|panelTabbed::end-overflow-icon:depressed:ltr,
	af|panelTabbed::start-overflow-icon:depressed:rtl,
	af|train::end-overflow-icon:depressed:ltr,
	af|train::start-overflow-icon:depressed:rtl,
	af|menuBar::overflow-icon:depressed,
	af|toolbar::overflow-icon:depressed {
		content: url("/afr/overflow_end_md.png");
	}
	af|train-vertical::top-overflow-icon {
		content: url("/afr/overflow_top.png");
	}
	af|train-vertical::bottom-overflow-icon {
		content: url("/afr/overflow_bottom.png");
	}
	af|tree::expanded-icon,
	af|treeTable::expanded-icon {
		content: url("/afr/disclosure_expanded.png");
	}
	af|tree::collapsed-icon,
	af|treeTable::collapsed-icon {
		content: url("/afr/disclosure_collapsed.png");
	}
	af|tree::leaf-icon,
	af|treeTable::leaf-icon {
		content: url("/afr/leaf.png");
	}
	af|tree::selector-icon,
	af|treeTable::selector-icon {
		content: url("/afr/hierchselector_ena.png");
	}
	af|tree::selector-icon:rtl,
	af|treeTable::selector-icon:rtl {
		content: url("/afr/hierchselector_ena_rtl.png");
	}
	af|tree::node-anim-icon,
	af|treeTable::node-anim-icon {
		content: url("/afr/node_anim.gif");
	}
	af|tree::selector-icon:hover,
	af|treeTable::selector-icon:hover {
		content: url("/afr/hierchselector_ovr.png");
	}
	af|tree::selector-icon:hover:rtl,
	af|treeTable::selector-icon:hover:rtl {
		content: url("/afr/hierchselector_ovr_rtl.png");
	}
	af|tree::selector-icon:active,
	af|treeTable::selector-icon:active {
		content: url("/afr/hierchselector_dwn.png");
	}
	af|tree::selector-icon:active:rtl,
	af|treeTable::selector-icon:active:rtl {
		content: url("/afr/hierchselector_dwn_rtl.png");
	}

	.AFRteTextFgColorIcon:alias {
		content: url("/afr/colorpickertxt_ena.png");
	}
	.AFRteTextBgColorIcon:alias {
		content: url("/afr/colorpicker_ena.png");
	}

	af|breadCrumbs::overflow-indicator,
	af|breadCrumbs::overflow-indicator:hover,
	af|breadCrumbs::overflow-indicator:disabled,
	af|chooseDate::choice-list-dropdown-icon-style,
	af|chooseColor::button-swatch:empty,
	af|chooseColor::swatch:empty,
	af|chooseDate:disabled::choice-list-dropdown-icon-style,
	af|chooseDate::next-month-arrow,
	af|chooseDate::next-month-arrow:rtl,
	af|chooseDate::prev-month-arrow,
	af|chooseDate::prev-month-arrow:rtl,
	af|column::sort-ascending-icon-style,
	af|column::sort-ascending-icon-style:active,
	af|column::sort-ascending-icon-style:hover,
	af|column::sort-descending-icon-style,
	af|column::sort-descending-icon-style:active,
	af|column::sort-descending-icon-style:hover,
	af|column::sorted-ascending-icon-style,
	af|column::sorted-descending-icon-style,
	af|commandMenuItem::bar-item-icon-style,
	af|commandMenuItem::menu-item-check-icon-style,
	af|commandMenuItem::menu-item-radio-icon-style,
	af|goMenuItem::bar-item-icon-style,
	af|commandNavigationItem::icon-style,
	af|commandToolbarButton::dropdown-icon-style,

	af|dialog::close-icon-style,
	af|dialog::footer-button-icon-style,
	af|goButton::icon-style:rtl,
	af|goButton::icon-style,
	af|inputColor::launch-icon-style,
	af|panelList af|inputDate::launch-icon-style,
	af|inputDate::launch-icon-style,
	af|inputDate::launch-icon-style:active,
	af|inputDate::launch-icon-style:hover,
	af|inputDate::launch-icon-style:disabled,
	af|inputDate::launch-icon-style:disabled:active,
	af|inputDate::launch-icon-style:disabled:hover,
	af|inputDate::launch-icon-style,
	af|inputComboboxListOfValues::dropdown-icon-style,
	af|inputComboboxListOfValues::dropdown-icon-style:hover,
	af|inputComboboxListOfValues::dropdown-icon-style:active,
	af|inputComboboxListOfValues::dropdown-icon-style:disabled,
	af|inputListOfValues::search-icon-style,
	af|inputListOfValues::search-icon-style:disabled,
	af|inputListOfValues::search-icon-style:disabled:active,
	af|inputListOfValues::search-icon-style:disabled:hover,
	af|inputListOfValues::popup-create-icon-style,
	af|inputListOfValues::popup-create-icon-style:hover,
	af|inputListOfValues::popup-create-icon-style:active,
	af|inputNumberSlider::minus-icon-style,
	af|inputNumberSlider::plus-icon-style,
	af|inputNumberSlider::thumb-icon-style,
	af|inputNumberSlider:disabled::minus-icon-style,
	af|inputNumberSlider:disabled::plus-icon-style,
	af|inputNumberSlider:disabled::thumb-icon-style,
	af|inputNumberSlider:vertical::thumb-icon-style,
	af|inputNumberSlider:vertical::thumb-icon-style:rtl,
	af|inputNumberSlider:vertical:disabled::thumb-icon-style,
	af|inputNumberSlider:vertical:disabled::thumb-icon-style:rtl,
	af|inputNumberSpinbox::decrementor-icon-style,
	af|inputNumberSpinbox::decrementor-icon-style:disabled,
	af|inputNumberSpinbox::incrementor-icon-style,
	af|inputNumberSpinbox::incrementor-icon-style:disabled,
	af|chooseDate::spinbox-decrementor-icon-style,
	af|chooseDate::spinbox-decrementor-icon-style:disabled,
	af|chooseDate::spinbox-incrementor-icon-style,
	af|chooseDate::spinbox-incrementor-icon-style:disabled,
	af|inputRangeSlider::minus-icon-style,
	af|inputRangeSlider::plus-icon-style,
	af|inputRangeSlider::thumb-icon-style,
	af|inputRangeSlider:disabled::minus-icon-style,
	af|inputRangeSlider:disabled::plus-icon-style,
	af|inputRangeSlider:disabled::thumb-icon-style,
	af|inputRangeSlider:vertical::thumb-icon-style,
	af|inputRangeSlider:vertical::thumb-icon-style:rtl,
	af|inputRangeSlider:vertical:disabled::thumb-icon-style,
	af|inputRangeSlider:vertical:disabled::thumb-icon-style:rtl,
	af|menu::bar-item-icon-style,
	af|menu::bar-item-open-icon-style,
	af|menu:disabled::bar-item-open-icon-style,
	af|menu::scroll-down-icon-style,
	af|menu::scroll-up-icon-style,
	af|menu::submenu-open-icon-style,
	af|menu::submenu-open-icon-style:rtl,
	af|menu::submenu-icon-style,
	af|menuBar::overflow-indicator:depressed,
	af|menuBar::overflow-indicator:depressed:rtl,
	af|menuBar::overflow-indicator:hover,
	af|menuBar::overflow-indicator:hover:rtl,
	af|menuBar::overflow-indicator:ltr,
	af|menuBar::overflow-indicator:rtl,
	af|menuBar::overflow-container af|menu::bar-item-open-icon-style,
	af|menuBar::overflow-container af|menu::bar-item-open-icon-style:rtl,
	af|menuBar::overflow-container af|menu:disabled::bar-item-open-icon-style,
	af|menuBar::overflow-container af|menu:disabled::bar-item-open-icon-style:rtl,
	af|navigationPane-bar::end-overflow-indicator:depressed:ltr,
	af|navigationPane-bar::end-overflow-indicator:depressed:rtl,
	af|navigationPane-bar::end-overflow-indicator:hover:ltr,
	af|navigationPane-bar::end-overflow-indicator:hover:rtl,
	af|navigationPane-bar::end-overflow-indicator:ltr,
	af|navigationPane-bar::end-overflow-indicator:rtl,
	af|navigationPane-bar::icon-style,
	af|navigationPane-bar::separator-icon-style,
	af|navigationPane-bar::start-overflow-indicator:depressed:ltr,
	af|navigationPane-bar::start-overflow-indicator:depressed:rtl,
	af|navigationPane-bar::start-overflow-indicator:hover:ltr,
	af|navigationPane-bar::start-overflow-indicator:hover:rtl,
	af|navigationPane-bar::start-overflow-indicator:ltr,
	af|navigationPane-bar::start-overflow-indicator:rtl,
	af|navigationPane-buttons::icon-style,
	af|navigationPane-buttons::separator-icon-style,
	af|navigationPane-choice::dropdown-icon-style,
	af|navigationPane-choice::dropdown-icon-style:active,
	af|navigationPane-choice::dropdown-icon-style:hover,
	af|navigationPane-choice::icon-style,
	af|navigationPane-list::icon-style,
	af|navigationPane-tabs::end-overflow-indicator:depressed:ltr,
	af|navigationPane-tabs::end-overflow-indicator:depressed:rtl,
	af|navigationPane-tabs::end-overflow-indicator:hover:ltr,
	af|navigationPane-tabs::end-overflow-indicator:hover:rtl,
	af|navigationPane-tabs::end-overflow-indicator:ltr,
	af|navigationPane-tabs::end-overflow-indicator:rtl,
	af|navigationPane-tabs::icon-style,
	af|navigationPane-tabs::start-overflow-indicator:depressed:ltr,
	af|navigationPane-tabs::start-overflow-indicator:depressed:rtl,
	af|navigationPane-tabs::start-overflow-indicator:hover:ltr,
	af|navigationPane-tabs::start-overflow-indicator:hover:rtl,
	af|navigationPane-tabs::start-overflow-indicator:ltr,
	af|navigationPane-tabs::start-overflow-indicator:rtl,
	af|navigationPane-tabs::disclosed-remove-icon-style,
	af|navigationPane-tabs::disclosed-remove-icon-style:disabled,
	af|navigationPane-tabs::undisclosed-remove-icon-style,
	af|navigationPane-tabs::undisclosed-remove-icon-style:disabled,
	af|navigationPane-tabs::disclosed-remove-disabled-icon-style,
	af|navigationPane-tabs::disclosed-remove-disabled-icon-style:disabled,
	af|navigationPane-tabs::undisclosed-remove-disabled-icon-style,
	af|navigationPane-tabs::undisclosed-remove-disabled-icon-style:disabled,
	af|panelAccordion::disclosed-icon-style,
	af|panelAccordion::undisclosed-icon-style,
	af|panelAccordion::bottom-overflow-indicator,
	af|panelAccordion::top-overflow-indicator,
	af|panelBox::icon-style,
	af|panelTabbed::end-overflow-indicator:depressed:ltr,
	af|panelTabbed::end-overflow-indicator:depressed:rtl,
	af|panelTabbed::end-overflow-indicator:hover:ltr,
	af|panelTabbed::end-overflow-indicator:hover:rtl,
	af|panelTabbed::end-overflow-indicator:ltr,
	af|panelTabbed::end-overflow-indicator:rtl,
	af|panelTabbed::start-overflow-indicator:depressed:ltr,
	af|panelTabbed::start-overflow-indicator:depressed:rtl,
	af|panelTabbed::start-overflow-indicator:hover:ltr,
	af|panelTabbed::start-overflow-indicator:ltr,
	af|panelTabbed::start-overflow-indicator:rtl,
	af|panelTabbed::start-overflow-indicator:rtl,
	af|panelTabbed::disclosed-remove-icon-style,
	af|panelTabbed::disclosed-remove-icon-style:disabled,
	af|panelTabbed::undisclosed-remove-icon-style,
	af|panelTabbed::undisclosed-remove-icon-style:disabled,
	af|panelTabbed::disclosed-remove-disabled-icon-style,
	af|panelTabbed::disclosed-remove-disabled-icon-style:disabled,
	af|panelTabbed::undisclosed-remove-disabled-icon-style,
	af|panelTabbed::undisclosed-remove-disabled-icon-style:disabled,
	af|panelWindow::close-icon-style,
	af|progressIndicator::indeterminate:running,
	af|progressIndicator::indeterminate:finished,
	af|query::criterion-delete-icon-style,
	af|query::criterion-delete-icon-style:active,
	af|query::criterion-delete-icon-style:hover,
	af|quickQuery::search-icon-style,
	af|quickQuery::search-icon-style:rtl,
	af|quickQuery::disabled-search-icon-style,
	af|quickQuery::disabled-search-icon-style:rtl,
	af|selectManyChoice::dropdown-icon-style,
	af|selectManyChoice:disabled::dropdown-icon-style,
	af|selectOneChoice:disabled::dropdown-icon-style,
	af|selectOneChoice::dropdown-icon-style,
	af|selectManyShuttle::moveall-horizontal-icon-style,
	af|selectManyShuttle::moveall-horizontal-icon-style:disabled,
	af|selectManyShuttle::moveall-horizontal-icon-style:disabled:rtl,
	af|selectManyShuttle::moveall-horizontal-icon-style:rtl,
	af|selectManyShuttle::moveall-vertical-icon-style,
	af|selectManyShuttle::moveall-vertical-icon-style:disabled,
	af|selectManyShuttle::move-horizontal-icon-style,
	af|selectManyShuttle::move-horizontal-icon-style:disabled,
	af|selectManyShuttle::move-horizontal-icon-style:disabled:rtl,
	af|selectManyShuttle::move-horizontal-icon-style:rtl,
	af|selectManyShuttle::move-vertical-icon-style,
	af|selectManyShuttle::move-vertical-icon-style:disabled,
	af|selectManyShuttle::removeall-horizontal-icon-style,
	af|selectManyShuttle::removeall-horizontal-icon-style:disabled,
	af|selectManyShuttle::removeall-horizontal-icon-style:disabled:rtl,
	af|selectManyShuttle::removeall-horizontal-icon-style:rtl,
	af|selectManyShuttle::removeall-vertical-icon-style,
	af|selectManyShuttle::removeall-vertical-icon-style:disabled,
	af|selectManyShuttle::removeall-vertical-icon-style:disabled:rtl,
	af|selectManyShuttle::removeall-vertical-icon-style:rtl,
	af|selectManyShuttle::remove-horizontal-icon-style,
	af|selectManyShuttle::remove-horizontal-icon-style:disabled,
	af|selectManyShuttle::remove-horizontal-icon-style:disabled:rtl,
	af|selectManyShuttle::remove-horizontal-icon-style:rtl,
	af|selectManyShuttle::remove-vertical-icon-style,
	af|selectManyShuttle::remove-vertical-icon-style:disabled,
	af|selectManyShuttle::remove-vertical-icon-style:disabled:rtl,
	af|selectManyShuttle::remove-vertical-icon-style:rtl,
	af|selectOrderShuttle::moveall-horizontal-icon-style,
	af|selectOrderShuttle::moveall-horizontal-icon-style:disabled,
	af|selectOrderShuttle::moveall-horizontal-icon-style:disabled:rtl,
	af|selectOrderShuttle::moveall-horizontal-icon-style:rtl,
	af|selectOrderShuttle::moveall-vertical-icon-style,
	af|selectOrderShuttle::moveall-vertical-icon-style:disabled,
	af|selectOrderShuttle::move-bottom-icon-style,
	af|selectOrderShuttle::move-bottom-icon-style:disabled,
	af|selectOrderShuttle::move-down-icon-style,
	af|selectOrderShuttle::move-down-icon-style:disabled,
	af|selectOrderShuttle::move-horizontal-icon-style,
	af|selectOrderShuttle::move-horizontal-icon-style:disabled,
	af|selectOrderShuttle::move-horizontal-icon-style:disabled:rtl,
	af|selectOrderShuttle::move-horizontal-icon-style:rtl,
	af|selectOrderShuttle::move-top-icon-style,
	af|selectOrderShuttle::move-top-icon-style:disabled,
	af|selectOrderShuttle::move-up-icon-style,
	af|selectOrderShuttle::move-up-icon-style:disabled,
	af|selectOrderShuttle::move-vertical-icon-style,
	af|selectOrderShuttle::move-vertical-icon-style:disabled,
	af|selectOrderShuttle::removeall-horizontal-icon-style,
	af|selectOrderShuttle::removeall-horizontal-icon-style:disabled,
	af|selectOrderShuttle::removeall-horizontal-icon-style:disabled:rtl,
	af|selectOrderShuttle::removeall-horizontal-icon-style:rtl,
	af|selectOrderShuttle::removeall-vertical-icon-style,
	af|selectOrderShuttle::removeall-vertical-icon-style:disabled,
	af|selectOrderShuttle::removeall-vertical-icon-style:disabled:rtl,
	af|selectOrderShuttle::removeall-vertical-icon-style:rtl,
	af|selectOrderShuttle::remove-horizontal-icon-style,
	af|selectOrderShuttle::remove-horizontal-icon-style:disabled,
	af|selectOrderShuttle::remove-horizontal-icon-style:disabled:rtl,
	af|selectOrderShuttle::remove-horizontal-icon-style:rtl,
	af|selectOrderShuttle::remove-vertical-icon-style,
	af|selectOrderShuttle::remove-vertical-icon-style:disabled,
	af|selectOrderShuttle::remove-vertical-icon-style:disabled:rtl,
	af|selectOrderShuttle::remove-vertical-icon-style:rtl,
	af|selectOneChoice::compact-dropdown-icon-style,
	af|table::disclosed-icon-style,
	af|table::undisclosed-icon-style,
	af|toolbar::overflow-indicator:depressed,
	af|toolbar::overflow-indicator:depressed:rtl,
	af|toolbar::overflow-indicator:hover,
	af|toolbar::overflow-indicator:hover:rtl,
	af|toolbar::overflow-indicator:ltr,
	af|toolbar::overflow-indicator:rtl,
	af|train::end-overflow-indicator:depressed:ltr,
	af|train::end-overflow-indicator:depressed:rtl,
	af|train::end-overflow-indicator:hover:ltr,
	af|train::end-overflow-indicator:hover:rtl,
	af|train::end-overflow-indicator:ltr,
	af|train::end-overflow-indicator:rtl,
	af|train::start-overflow-indicator:depressed:ltr,
	af|train::start-overflow-indicator:depressed:rtl,
	af|train::start-overflow-indicator:hover:ltr,
	af|train::start-overflow-indicator:hover:rtl,
	af|train::start-overflow-indicator:ltr,
	af|train::start-overflow-indicator:rtl,
	af|train-vertical::bottom-overflow-indicator,
	af|train-vertical::top-overflow-indicator,
	af|train::stop-icon-confirmation,
	af|train::stop-icon-disabled,
	af|train::stop-icon-error,
	af|train::stop-icon-information,
	af|train::stop-icon-selected,
	af|train::stop-icon-unvisited,
	af|train::stop-icon-unvisited:active,
	af|train::stop-icon-unvisited:hover,
	af|train::stop-icon-visited,
	af|train::stop-icon-visited:active,
	af|train::stop-icon-visited:hover,
	af|train::stop-icon-visited:rtl,
	af|train::stop-icon-warning,
	af|train-vertical::stop-icon-confirmation,
	af|train-vertical::stop-icon-disabled,
	af|train-vertical::stop-icon-error,
	af|train-vertical::stop-icon-information,
	af|train-vertical::stop-icon-selected,
	af|train-vertical::stop-icon-unvisited,
	af|train-vertical::stop-icon-unvisited:active,
	af|train-vertical::stop-icon-unvisited:hover,
	af|train-vertical::stop-icon-visited,
	af|train-vertical::stop-icon-visited:active,
	af|train-vertical::stop-icon-visited:hover,
	af|train-vertical::stop-icon-warning,
	af|tree::collapsed-icon-style,
	af|tree::expanded-icon-style,
	af|tree::leaf-icon-style,
	af|tree::node-anim-icon-style,
	af|tree::selector-icon-style,
	af|tree::selector-icon-style:active,
	af|tree::selector-icon-style:hover,
	af|tree::selector-icon-style:rtl,
	af|tree::selector-icon-style:active:rtl,
	af|tree::selector-icon-style:hover:rtl,
	af|treeTable::collapsed-icon-style,
	af|treeTable::expanded-icon-style,
	af|treeTable::leaf-icon-style,
	af|treeTable::node-anim-icon-style,
	af|treeTable::selector-icon-style,
	af|treeTable::selector-icon-style:active,
	af|treeTable::selector-icon-style:hover,
	af|treeTable::selector-icon-style:rtl,
	af|treeTable::selector-icon-style:active:rtl,
	af|treeTable::selector-icon-style:hover:rtl,

	af|column::dynamic-help-icon-style,
	af|inputColor::dynamic-help-icon-style,
	af|inputComboboxListOfValues::dynamic-help-icon-style,
	af|inputComboboxListOfValues::popup-create-icon-style,
	af|inputComboboxListOfValues::popup-create-icon-style:hover,
	af|inputComboboxListOfValues::popup-create-icon-style:active,
	af|inputDate::dynamic-help-icon-style,
	af|inputFile::dynamic-help-icon-style,
	af|inputListOfValues::dynamic-help-icon-style,
	af|inputNumberSlider::dynamic-help-icon-style,
	af|inputNumberSpinbox::dynamic-help-icon-style,
	af|inputRangeSlider::dynamic-help-icon-style,
	af|inputText::dynamic-help-icon-style,
	af|panelHeader::dynamic-help-icon-style,
	af|panelBox::dynamic-help-icon-style,
	af|panelLabelAndMessage::dynamic-help-icon-style,
	af|query::dynamic-help-icon-style,
	af|quickQuery::dynamic-help-icon-style,
	af|region::dynamic-help-icon-style,
	af|richTextEditor::dynamic-help-icon-style,
	af|selectBooleanCheckbox::dynamic-help-icon-style,
	af|selectBooleanRadio::dynamic-help-icon-style,
	af|selectManyCheckbox::dynamic-help-icon-style,
	af|selectManyChoice::dynamic-help-icon-style,
	af|selectManyListbox::dynamic-help-icon-style,
	af|selectManyShuttle::dynamic-help-icon-style,
	af|selectOneChoice::dynamic-help-icon-style,
	af|selectOneListbox::dynamic-help-icon-style,
	af|selectOneRadio::dynamic-help-icon-style,
	af|selectOrderShuttle::dynamic-help-icon-style,
	af|showDetailHeader::dynamic-help-icon-style,
	af|dialog::dynamic-help-icon-style,
	af|panelWindow::dynamic-help-icon-style {
		-tr-inhibit: background-image;
	}
	af|selectOneChoice::compact-dropdown-icon-style {
		padding: 1px;
	}
	af|chooseDate::spinbox-decrementor-icon-style {
		padding: 1px 0px 0px 3px;
	}
	af|chooseDate::spinbox-incrementor-icon-style {
		padding: 0px 0px 0px 3px;
	}
}

