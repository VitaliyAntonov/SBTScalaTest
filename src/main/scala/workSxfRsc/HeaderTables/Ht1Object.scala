package workSxfRsc.HeaderTables

import workSxfRsc.TabOFL

/**
  * @author Виталий Антонов @date 7/6/21
  **/
class Ht1Object {

}

/** 1 Структура таблицы объектов  классификатора */
object Ht1Object{

  /** Длина записи объекта */
  val objRecordSize = TabOFL(0, 4) // В байтах

  /** Классификационный код */
  val clCode = TabOFL(4, 4)

  /** Внутренний код объекта */
  val innerCode = TabOFL(8, 4) // Порядковый номер объекта (может меняться) (с 1)

  /** Идентификационный код */
  val identCode = TabOFL(12, 4) // Неизменяемый уникальный номер объекта

  /** Короткое имя объекта */
  val shortName = TabOFL(16, 32)  // Уникальное символьное имя (ANSI)

  /** Название */
  val objectName = TabOFL(48, 32)  // (ANSI)

  /** Характер локализации */
  val localize = TabOFL(80, 1)  // Примечание 1.

  /** Номер слоя (сегмента) */
  val layerNum = TabOFL(81, 1)  // Число от 0 до 255

  /** Признак масштабируемости */
  val scaleSign = TabOFL(82, 1)  // 0 - условный знак объекта не масштабируемый;
                               // 1 - знак масштабируется
  /** Нижняя граница видимости */
  val lowerLimitVisible = TabOFL(83, 1) // Число от 0 до 15 (N1)

  /** Верхняя граница видимости */
  val upperLimitVisible = TabOFL(84, 1) // Число от 0 до 15 (15 – N2)

  /** Расширение локализации */
  val exLocalization = TabOFL(85, 1)  // 1 - при создании линейных объектов учитывать две точки метрики
                                    // 0 – все точки метрики
  /** Направление Цифрования */
  val directDigit = TabOFL(86, 1) // Примечание 2

  /** Отображение с учетом семантики */
  val visibleWithSemantic = TabOFL(87, 1) // 1- для объектов с внешним видом пользователя,
  // учитывающих семантику

  /** Номер расширения */
  val extensionNumber = TabOFL(88, 2) // Для объектов из серии – номер объекта в серии, для остальных 0

  /** Количество связанных подписей */
  val relatedSignCount = TabOFL(90, 1) // Число от 0 до 16

  /** Признак сжатия объекта */
  val objComresSign = TabOFL(91, 1) // Возможность сжатия объекта при уменьшении масштаба 1 – не сжимать

  /** Максимальное увеличение */
  val objMaxMagnification = TabOFL(92, 1) // Максимальное увеличение объекта (от 1 до 25.0 раз) Значения от 0 до 250

  /** Максимальное уменьшение */
  val objMaxReduction = TabOFL(93,1) // Максимальное уменьшение объекта (от 1 до 25.0 раз) Значения от 0 до 250

  /** Флаг включения границ */
  val flagBorderEnable = TabOFL(94,1) // Флаг включения границ видимости

  /** Резерв */
  val noUsing = TabOFL(95, 1)

}

/** Примечания к таблице объектов :
  * 1. Характер локализации  (1 байт):
  * 0х00 - линейный, 0х01 – площадной, 0х02 – точечный, 0х03 – подпись,
  * 0х04 - векторный (точечный ориентированный объект, содержит две точки в   метрике),
  * 0x05 - шаблон подписи (первая точка метрики является точкой привязки шаблона
  * метрика подобъектов задает расположение подписей и вспомогательных  линий).
  *
  * 2. Направление цифрования объекта:
  * 0x00-произвольное, 0x01-определенное, 0х02-объект справа, 0x04-объект слева. */

/**
  * Для площадных объектов возможны направления цифрования объект слева
  * (обход объекта против часовой стрелки:
  * используется для водоемов и углублений рельефа) и
  * объект  справа (обход объекта по часовой стрелке).
  *
  * Для линейных объектов можно определенное (для тех объектов, для которых
  * имеет смысл различать начало и конец метрики, например реки,
  * цифруются от истока к устью) и произвольное для всех  остальных случаев.
  *
  * Точечные объекты имеют только произвольное направление цифрования.
  * Все остальные произвольное или определенное.
  *
  * Связанные подписи объектов предназначены для нанесения на карту  п
  * одписей по   семантическим характеристикам объекта,
  * определенным видом шрифта.
  *
  * Шрифт выбирается из существующих  подписей классификатора.
  */
