package workSxfRsc.Graphic

import workSxfRsc.TabOFL

/**
  * @author Виталий Антонов @date 7/8/21
  **/
class Gr18SetDotLine {

}

/** Для формирования более сложных линейных объектов,
  * используется наборная  штриховая линия.
  * Она состоит из отдельных секций заданной длины.
  * Секции заполняют метрику последовательно.
  * Набор повторяется до исчерпания длины метрики. */



/**
  * Описание одной секции наборной штриховой линии
  * @param tabLength    - Длина секции (заголовок + параметры). Длина параметров +16
  * @param primId       - Номер(ID) примитива. Линия, пустой примитив, векторный знак, знак TRUE_TYPE
  * @param lineLength   - Длина отрезка, занимаемого секцией. В микрометрах
  * @param parameters   - Параметры по типу примитива
  */
case class SecSDL( tabLength: TabOFL, primId: TabOFL, lineLength: TabOFL, parameters: TabOFL)


/** 18. Наборная штриховая линия, код типа примитива  158. */
object Gr18SetDotLine {

  /** Полная длина параметров. В байтах(N1) */
  val tParamLength = TabOFL(0, 4)

  /** Количество секций.
    * Число отдельных секций: штрихов, пробелов, векторных знаков, знаков TRUE_TYPE */
  val tSectionCount = TabOFL(4, 4)

  /** Номер завершающей секции.
    * Порядковый (с 1) номер секции, завершающей изображение. */
  val tEndSectionNum = TabOFL(8, 4)

  /** Максимальная толщина секций. В микрометрах */
  val tSectionMaxDepth = TabOFL(12, 4)

  /** Резерв */
  val noUsing = TabOFL(16, 4)

  /** Первая секция */
  val tSec1 = SecSDL(
    TabOFL(20, 4),  /** Длина секции (заголовок + параметры). Длина параметров +16 */
    TabOFL(24, 4),  /** Номер(ID) примитива. Линия, пустой примитив, векторный знак, знак TRUE_TYPE */
    TabOFL(28, 4),  /** Длина отрезка, занимаемого секцией. В микрометрах */
    TabOFL(32, 0)   /** Параметры по типу примитива */
  )

  /** Далее четыре  строки для каждой секции */

  /** Итого:   N1 */

}


